//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-34385749
// Cuda compilation tools, release 12.5, V12.5.82
// Based on NVVM 7.0.1
//

.version 8.5
.target sm_61
.address_size 64

	// .globl	softmax_f16
// _ZZ7rmsnormI6__halfEvPKT_PS1_S3_ifE5s_sum has been demoted
// _ZZ9layernormI6__halfEvPKT_PS1_S3_S3_ifE5s_sum has been demoted
// _ZZ11fast_argminI6__halfEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argminI6__halfEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ11fast_argmaxI6__halfEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argmaxI6__halfEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ8fast_minI6__halfEvmmmPKmPKT_PS3_E3shr has been demoted
// _ZZ8fast_maxI6__halfEvmmmPKmPKT_PS3_E3shr has been demoted
// _ZZ8fast_sumI6__halfEvmmmPKmPKT_PS3_E3shr has been demoted
// _ZZ7rmsnormIfEvPKT_PS0_S2_ifE5s_sum has been demoted
// _ZZ7rmsnormIdEvPKT_PS0_S2_ifE5s_sum has been demoted
// _ZZ9layernormIfEvPKT_PS0_S2_S2_ifE5s_sum has been demoted
// _ZZ9layernormIdEvPKT_PS0_S2_S2_ifE5s_sum has been demoted
// _ZZ11fast_argminIfEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argminIfEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ11fast_argmaxIfEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argmaxIfEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ8fast_minIfEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_maxIfEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_sumIfEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ11fast_argminIdEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argminIdEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ11fast_argmaxIdEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argmaxIdEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ8fast_minIdEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_maxIdEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_sumIdEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ11fast_argminIjEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argminIjEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ11fast_argmaxIjEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argmaxIjEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ8fast_minIjEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_maxIjEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_sumIjEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ11fast_argminIlEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argminIlEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ11fast_argmaxIlEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argmaxIlEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ8fast_minIlEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_maxIlEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_sumIlEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ11fast_argminIhEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argminIhEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ11fast_argmaxIhEvmmmPKmPKT_PjE3shr has been demoted
// _ZZ11fast_argmaxIhEvmmmPKmPKT_PjE9shr_index has been demoted
// _ZZ8fast_minIhEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_maxIhEvmmmPKmPKT_PS2_E3shr has been demoted
// _ZZ8fast_sumIhEvmmmPKmPKT_PS2_E3shr has been demoted

.visible .entry softmax_f16(
	.param .u64 softmax_f16_param_0,
	.param .u64 softmax_f16_param_1,
	.param .u32 softmax_f16_param_2
)
{
	.reg .pred 	%p<24>;
	.reg .b16 	%rs<128>;
	.reg .f32 	%f<58>;
	.reg .b32 	%r<90>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd3, [softmax_f16_param_0];
	ld.param.u64 	%rd4, [softmax_f16_param_1];
	ld.param.u32 	%r13, [softmax_f16_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	mov.u32 	%r2, %ntid.y;
	mov.f32 	%f6, 0fFF800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs121, %f6;}

	// end inline asm
	mov.u32 	%r89, %tid.y;
	setp.ge.s32 	%p1, %r89, %r13;
	@%p1 bra 	$L__BB0_6;

	mul.lo.s32 	%r4, %r1, %r13;
	mov.u32 	%r87, %r89;

$L__BB0_2:
	mov.u16 	%rs2, %rs121;
	add.s32 	%r17, %r87, %r4;
	mul.wide.s32 	%rd5, %r17, 2;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.u16 	%rs3, [%rd6];
	// begin inline asm
	{set.nan.f16.f16 %rs29,%rs2,%rs2;
}
	// end inline asm
	setp.ne.s16 	%p2, %rs29, 0;
	mov.u16 	%rs121, 32767;
	@%p2 bra 	$L__BB0_5;

	// begin inline asm
	{set.nan.f16.f16 %rs33,%rs3,%rs3;
}
	// end inline asm
	setp.ne.s16 	%p3, %rs33, 0;
	@%p3 bra 	$L__BB0_5;

	// begin inline asm
	{  cvt.f32.f16 %f7, %rs2;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f8, %rs3;}

	// end inline asm
	// begin inline asm
	{max.f32 %f9,%f7,%f8;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs121, %f9;}

	// end inline asm

$L__BB0_5:
	add.s32 	%r87, %r87, %r2;
	setp.lt.s32 	%p4, %r87, %r13;
	@%p4 bra 	$L__BB0_2;

$L__BB0_6:
	// begin inline asm
	{  mov.b32 %r18, {%rs121,%rs121};}

	// end inline asm
	// begin inline asm
	{mov.u32 %r19, WARP_SZ;
}
	// end inline asm
	shl.b32 	%r26, %r19, 8;
	add.s32 	%r27, %r26, -8192;
	or.b32  	%r23, %r27, 31;
	mov.u32 	%r22, 16;
	mov.u32 	%r24, -1;
	// begin inline asm
	{shfl.sync.bfly.b32 %r20,%r18,%r22,%r23,%r24;
}
	// end inline asm
	// begin inline asm
	{.reg .f16 low,high;
 mov.b32 {low,high}, %r20;
 mov.b16 %rs42, low;}
	// end inline asm
	// begin inline asm
	{set.nan.f16.f16 %rs43,%rs121,%rs121;
}
	// end inline asm
	setp.ne.s16 	%p5, %rs43, 0;
	mov.u16 	%rs124, 32767;
	mov.u16 	%rs123, %rs124;
	@%p5 bra 	$L__BB0_9;

	// begin inline asm
	{set.nan.f16.f16 %rs47,%rs42,%rs42;
}
	// end inline asm
	setp.ne.s16 	%p6, %rs47, 0;
	@%p6 bra 	$L__BB0_9;

	// begin inline asm
	{  cvt.f32.f16 %f13, %rs121;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f14, %rs42;}

	// end inline asm
	// begin inline asm
	{max.f32 %f15,%f13,%f14;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs123, %f15;}

	// end inline asm

$L__BB0_9:
	// begin inline asm
	{  mov.b32 %r28, {%rs123,%rs123};}

	// end inline asm
	// begin inline asm
	{mov.u32 %r29, WARP_SZ;
}
	// end inline asm
	shl.b32 	%r36, %r29, 8;
	mov.u32 	%r32, 8;
	add.s32 	%r37, %r36, -8192;
	or.b32  	%r33, %r37, 31;
	// begin inline asm
	{shfl.sync.bfly.b32 %r30,%r28,%r32,%r33,%r24;
}
	// end inline asm
	// begin inline asm
	{.reg .f16 low,high;
 mov.b32 {low,high}, %r30;
 mov.b16 %rs56, low;}
	// end inline asm
	// begin inline asm
	{set.nan.f16.f16 %rs57,%rs123,%rs123;
}
	// end inline asm
	setp.ne.s16 	%p7, %rs57, 0;
	@%p7 bra 	$L__BB0_12;

	// begin inline asm
	{set.nan.f16.f16 %rs61,%rs56,%rs56;
}
	// end inline asm
	setp.ne.s16 	%p8, %rs61, 0;
	@%p8 bra 	$L__BB0_12;

	// begin inline asm
	{  cvt.f32.f16 %f19, %rs123;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f20, %rs56;}

	// end inline asm
	// begin inline asm
	{max.f32 %f21,%f19,%f20;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs124, %f21;}

	// end inline asm

$L__BB0_12:
	// begin inline asm
	{  mov.b32 %r38, {%rs124,%rs124};}

	// end inline asm
	// begin inline asm
	{mov.u32 %r39, WARP_SZ;
}
	// end inline asm
	shl.b32 	%r46, %r39, 8;
	add.s32 	%r47, %r46, -8192;
	or.b32  	%r43, %r47, 31;
	mov.u32 	%r42, 4;
	mov.u32 	%r44, -1;
	// begin inline asm
	{shfl.sync.bfly.b32 %r40,%r38,%r42,%r43,%r44;
}
	// end inline asm
	// begin inline asm
	{.reg .f16 low,high;
 mov.b32 {low,high}, %r40;
 mov.b16 %rs70, low;}
	// end inline asm
	// begin inline asm
	{set.nan.f16.f16 %rs71,%rs124,%rs124;
}
	// end inline asm
	setp.ne.s16 	%p9, %rs71, 0;
	mov.u16 	%rs126, 32767;
	mov.u16 	%rs125, %rs126;
	@%p9 bra 	$L__BB0_15;

	// begin inline asm
	{set.nan.f16.f16 %rs75,%rs70,%rs70;
}
	// end inline asm
	setp.ne.s16 	%p10, %rs75, 0;
	@%p10 bra 	$L__BB0_15;

	// begin inline asm
	{  cvt.f32.f16 %f25, %rs124;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f26, %rs70;}

	// end inline asm
	// begin inline asm
	{max.f32 %f27,%f25,%f26;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs125, %f27;}

	// end inline asm

$L__BB0_15:
	// begin inline asm
	{  mov.b32 %r48, {%rs125,%rs125};}

	// end inline asm
	// begin inline asm
	{mov.u32 %r49, WARP_SZ;
}
	// end inline asm
	shl.b32 	%r56, %r49, 8;
	add.s32 	%r57, %r56, -8192;
	or.b32  	%r53, %r57, 31;
	mov.u32 	%r52, 2;
	// begin inline asm
	{shfl.sync.bfly.b32 %r50,%r48,%r52,%r53,%r44;
}
	// end inline asm
	// begin inline asm
	{.reg .f16 low,high;
 mov.b32 {low,high}, %r50;
 mov.b16 %rs84, low;}
	// end inline asm
	// begin inline asm
	{set.nan.f16.f16 %rs85,%rs125,%rs125;
}
	// end inline asm
	setp.ne.s16 	%p11, %rs85, 0;
	@%p11 bra 	$L__BB0_18;

	// begin inline asm
	{set.nan.f16.f16 %rs89,%rs84,%rs84;
}
	// end inline asm
	setp.ne.s16 	%p12, %rs89, 0;
	@%p12 bra 	$L__BB0_18;

	// begin inline asm
	{  cvt.f32.f16 %f31, %rs125;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f32, %rs84;}

	// end inline asm
	// begin inline asm
	{max.f32 %f33,%f31,%f32;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs126, %f33;}

	// end inline asm

$L__BB0_18:
	// begin inline asm
	{  mov.b32 %r58, {%rs126,%rs126};}

	// end inline asm
	// begin inline asm
	{mov.u32 %r59, WARP_SZ;
}
	// end inline asm
	shl.b32 	%r66, %r59, 8;
	add.s32 	%r67, %r66, -8192;
	or.b32  	%r63, %r67, 31;
	mov.u32 	%r62, 1;
	mov.u32 	%r64, -1;
	// begin inline asm
	{shfl.sync.bfly.b32 %r60,%r58,%r62,%r63,%r64;
}
	// end inline asm
	// begin inline asm
	{.reg .f16 low,high;
 mov.b32 {low,high}, %r60;
 mov.b16 %rs98, low;}
	// end inline asm
	// begin inline asm
	{set.nan.f16.f16 %rs99,%rs126,%rs126;
}
	// end inline asm
	setp.ne.s16 	%p13, %rs99, 0;
	mov.u16 	%rs127, 32767;
	@%p13 bra 	$L__BB0_21;

	// begin inline asm
	{set.nan.f16.f16 %rs103,%rs98,%rs98;
}
	// end inline asm
	setp.ne.s16 	%p14, %rs103, 0;
	@%p14 bra 	$L__BB0_21;

	// begin inline asm
	{  cvt.f32.f16 %f37, %rs126;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f38, %rs98;}

	// end inline asm
	// begin inline asm
	{max.f32 %f39,%f37,%f38;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs127, %f39;}

	// end inline asm

$L__BB0_21:
	mov.f32 	%f57, 0f00000000;
	@%p1 bra 	$L__BB0_24;

	mul.lo.s32 	%r7, %r1, %r13;
	mov.f32 	%f57, 0f00000000;
	mov.u32 	%r88, %r89;

$L__BB0_23:
	add.s32 	%r68, %r88, %r7;
	mul.wide.s32 	%rd7, %r68, 2;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.u16 	%rs111, [%rd8];
	// begin inline asm
	{sub.f16 %rs110,%rs111,%rs127;
}
	// end inline asm
	// begin inline asm
	{.reg.b32         f, C, nZ;       
 .reg.b16         h,r;            
  mov.b16         h,%rs110;           
  cvt.f32.f16     f,h;            
  mov.b32         C, 0x3fb8aa3bU; 
  mov.b32         nZ, 0x80000000U;
  fma.rn.f32      f,f,C,nZ;       
  ex2.approx.ftz.f32  f,f;        
  cvt.rn.f16.f32      r,f;        
{.reg.b16 spc, ulp, p;
  mov.b16 spc,0X1F79U;
  mov.b16 ulp,0x9400U;
  set.eq.f16.f16 p,h, spc;
  fma.rn.f16 r,p,ulp,r;
}
{.reg.b16 spc, ulp, p;
  mov.b16 spc,0X25CFU;
  mov.b16 ulp,0x9400U;
  set.eq.f16.f16 p,h, spc;
  fma.rn.f16 r,p,ulp,r;
}
{.reg.b16 spc, ulp, p;
  mov.b16 spc,0XC13BU;
  mov.b16 ulp,0x0400U;
  set.eq.f16.f16 p,h, spc;
  fma.rn.f16 r,p,ulp,r;
}
{.reg.b16 spc, ulp, p;
  mov.b16 spc,0XC1EFU;
  mov.b16 ulp,0x0200U;
  set.eq.f16.f16 p,h, spc;
  fma.rn.f16 r,p,ulp,r;
}
  mov.b16         %rs113,r;           
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f45, %rs113;}

	// end inline asm
	add.f32 	%f57, %f57, %f45;
	add.s64 	%rd9, %rd2, %rd7;
	st.global.u16 	[%rd9], %rs113;
	add.s32 	%r88, %r88, %r2;
	setp.lt.s32 	%p16, %r88, %r13;
	@%p16 bra 	$L__BB0_23;

$L__BB0_24:
	mov.b32 	%r69, %f57;
	mov.u32 	%r70, 31;
	mov.u32 	%r71, 16;
	mov.u32 	%r72, -1;
	shfl.sync.bfly.b32 	%r73|%p17, %r69, %r71, %r70, %r72;
	mov.b32 	%f46, %r73;
	add.f32 	%f47, %f57, %f46;
	mov.b32 	%r74, %f47;
	mov.u32 	%r75, 8;
	shfl.sync.bfly.b32 	%r76|%p18, %r74, %r75, %r70, %r72;
	mov.b32 	%f48, %r76;
	add.f32 	%f49, %f47, %f48;
	mov.b32 	%r77, %f49;
	mov.u32 	%r78, 4;
	shfl.sync.bfly.b32 	%r79|%p19, %r77, %r78, %r70, %r72;
	mov.b32 	%f50, %r79;
	add.f32 	%f51, %f49, %f50;
	mov.b32 	%r80, %f51;
	mov.u32 	%r81, 2;
	shfl.sync.bfly.b32 	%r82|%p20, %r80, %r81, %r70, %r72;
	mov.b32 	%f52, %r82;
	add.f32 	%f53, %f51, %f52;
	mov.b32 	%r83, %f53;
	mov.u32 	%r84, 1;
	shfl.sync.bfly.b32 	%r85|%p21, %r83, %r84, %r70, %r72;
	mov.b32 	%f54, %r85;
	add.f32 	%f4, %f53, %f54;
	@%p1 bra 	$L__BB0_27;

	mul.lo.s32 	%r10, %r1, %r13;
	rcp.rn.f32 	%f5, %f4;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs116, %f5;}

	// end inline asm

$L__BB0_26:
	add.s32 	%r86, %r89, %r10;
	mul.wide.s32 	%rd10, %r86, 2;
	add.s64 	%rd11, %rd2, %rd10;
	ld.global.u16 	%rs118, [%rd11];
	// begin inline asm
	{mul.f16 %rs117,%rs118,%rs116;
}
	// end inline asm
	st.global.u16 	[%rd11], %rs117;
	add.s32 	%r89, %r89, %r2;
	setp.lt.s32 	%p23, %r89, %r13;
	@%p23 bra 	$L__BB0_26;

$L__BB0_27:
	ret;

}
	// .globl	rmsnorm_f16
.visible .entry rmsnorm_f16(
	.param .u64 rmsnorm_f16_param_0,
	.param .u64 rmsnorm_f16_param_1,
	.param .u64 rmsnorm_f16_param_2,
	.param .u32 rmsnorm_f16_param_3,
	.param .f32 rmsnorm_f16_param_4
)
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<7>;
	.reg .f32 	%f<43>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<17>;
	// demoted variable
	.shared .align 4 .b8 _ZZ7rmsnormI6__halfEvPKT_PS1_S3_ifE5s_sum[128];

	ld.param.u64 	%rd5, [rmsnorm_f16_param_0];
	ld.param.u64 	%rd6, [rmsnorm_f16_param_1];
	ld.param.u64 	%rd4, [rmsnorm_f16_param_2];
	ld.param.u32 	%r14, [rmsnorm_f16_param_3];
	ld.param.f32 	%f8, [rmsnorm_f16_param_4];
	cvta.to.global.u64 	%rd1, %rd6;
	cvta.to.global.u64 	%rd2, %rd5;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r63, %tid.x;
	setp.ge.s32 	%p1, %r63, %r14;
	mov.f32 	%f41, 0f00000000;
	@%p1 bra 	$L__BB1_3;

	mul.lo.s32 	%r4, %r1, %r14;
	mov.f32 	%f41, 0f00000000;
	mov.u32 	%r62, %r63;

$L__BB1_2:
	add.s32 	%r18, %r62, %r4;
	mul.wide.s32 	%rd7, %r18, 2;
	add.s64 	%rd8, %rd2, %rd7;
	ld.global.u16 	%rs1, [%rd8];
	// begin inline asm
	{  cvt.f32.f16 %f11, %rs1;}

	// end inline asm
	fma.rn.f32 	%f41, %f11, %f11, %f41;
	add.s32 	%r62, %r62, %r2;
	setp.lt.s32 	%p2, %r62, %r14;
	@%p2 bra 	$L__BB1_2;

$L__BB1_3:
	mov.b32 	%r19, %f41;
	mov.u32 	%r20, 31;
	mov.u32 	%r21, 16;
	mov.u32 	%r22, -1;
	shfl.sync.bfly.b32 	%r23|%p3, %r19, %r21, %r20, %r22;
	mov.b32 	%f12, %r23;
	add.f32 	%f13, %f41, %f12;
	mov.b32 	%r24, %f13;
	mov.u32 	%r25, 8;
	shfl.sync.bfly.b32 	%r26|%p4, %r24, %r25, %r20, %r22;
	mov.b32 	%f14, %r26;
	add.f32 	%f15, %f13, %f14;
	mov.b32 	%r27, %f15;
	mov.u32 	%r28, 4;
	shfl.sync.bfly.b32 	%r29|%p5, %r27, %r28, %r20, %r22;
	mov.b32 	%f16, %r29;
	add.f32 	%f17, %f15, %f16;
	mov.b32 	%r30, %f17;
	mov.u32 	%r31, 2;
	shfl.sync.bfly.b32 	%r32|%p6, %r30, %r31, %r20, %r22;
	mov.b32 	%f18, %r32;
	add.f32 	%f19, %f17, %f18;
	mov.b32 	%r33, %f19;
	mov.u32 	%r34, 1;
	shfl.sync.bfly.b32 	%r35|%p7, %r33, %r34, %r20, %r22;
	mov.b32 	%f20, %r35;
	add.f32 	%f42, %f19, %f20;
	setp.lt.s32 	%p8, %r2, 33;
	@%p8 bra 	$L__BB1_7;

	and.b32  	%r7, %r63, 31;
	setp.ne.s32 	%p9, %r7, 0;
	@%p9 bra 	$L__BB1_6;

	shr.u32 	%r36, %r63, 3;
	and.b32  	%r37, %r36, 536870908;
	mov.u32 	%r38, _ZZ7rmsnormI6__halfEvPKT_PS1_S3_ifE5s_sum;
	add.s32 	%r39, %r38, %r37;
	st.shared.f32 	[%r39], %f42;

$L__BB1_6:
	bar.sync 	0;
	shl.b32 	%r40, %r7, 2;
	mov.u32 	%r41, _ZZ7rmsnormI6__halfEvPKT_PS1_S3_ifE5s_sum;
	add.s32 	%r42, %r41, %r40;
	mov.u32 	%r43, 2;
	ld.shared.f32 	%f21, [%r42];
	mov.b32 	%r44, %f21;
	mov.u32 	%r45, 31;
	mov.u32 	%r46, 16;
	mov.u32 	%r47, -1;
	shfl.sync.bfly.b32 	%r48|%p10, %r44, %r46, %r45, %r47;
	mov.b32 	%f22, %r48;
	add.f32 	%f23, %f21, %f22;
	mov.b32 	%r49, %f23;
	mov.u32 	%r50, 8;
	shfl.sync.bfly.b32 	%r51|%p11, %r49, %r50, %r45, %r47;
	mov.b32 	%f24, %r51;
	add.f32 	%f25, %f23, %f24;
	mov.b32 	%r52, %f25;
	mov.u32 	%r53, 4;
	shfl.sync.bfly.b32 	%r54|%p12, %r52, %r53, %r45, %r47;
	mov.b32 	%f26, %r54;
	add.f32 	%f27, %f25, %f26;
	mov.b32 	%r55, %f27;
	shfl.sync.bfly.b32 	%r56|%p13, %r55, %r43, %r45, %r47;
	mov.b32 	%f28, %r56;
	add.f32 	%f29, %f27, %f28;
	mov.b32 	%r57, %f29;
	mov.u32 	%r58, 1;
	shfl.sync.bfly.b32 	%r59|%p14, %r57, %r58, %r45, %r47;
	mov.b32 	%f30, %r59;
	add.f32 	%f42, %f29, %f30;

$L__BB1_7:
	cvt.rn.f32.s32 	%f31, %r14;
	div.rn.f32 	%f32, %f42, %f31;
	add.f32 	%f33, %f32, %f8;
	rsqrt.approx.f32 	%f7, %f33;
	setp.eq.s64 	%p15, %rd4, 0;
	@%p15 bra 	$L__BB1_11;

	@%p1 bra 	$L__BB1_14;

	mul.lo.s32 	%r8, %r1, %r14;
	cvta.to.global.u64 	%rd3, %rd4;

$L__BB1_10:
	mul.wide.s32 	%rd9, %r63, 2;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.u16 	%rs2, [%rd10];
	// begin inline asm
	{  cvt.f32.f16 %f34, %rs2;}

	// end inline asm
	add.s32 	%r60, %r63, %r8;
	mul.wide.s32 	%rd11, %r60, 2;
	add.s64 	%rd12, %rd2, %rd11;
	ld.global.u16 	%rs3, [%rd12];
	// begin inline asm
	{  cvt.f32.f16 %f35, %rs3;}

	// end inline asm
	mul.f32 	%f37, %f7, %f35;
	mul.f32 	%f36, %f34, %f37;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs4, %f36;}

	// end inline asm
	add.s64 	%rd13, %rd1, %rd11;
	st.global.u16 	[%rd13], %rs4;
	add.s32 	%r63, %r63, %r2;
	setp.lt.s32 	%p17, %r63, %r14;
	@%p17 bra 	$L__BB1_10;
	bra.uni 	$L__BB1_14;

$L__BB1_11:
	@%p1 bra 	$L__BB1_14;

	mul.lo.s32 	%r11, %r1, %r14;

$L__BB1_13:
	add.s32 	%r61, %r63, %r11;
	mul.wide.s32 	%rd14, %r61, 2;
	add.s64 	%rd15, %rd2, %rd14;
	ld.global.u16 	%rs5, [%rd15];
	// begin inline asm
	{  cvt.f32.f16 %f38, %rs5;}

	// end inline asm
	mul.f32 	%f39, %f7, %f38;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs6, %f39;}

	// end inline asm
	add.s64 	%rd16, %rd1, %rd14;
	st.global.u16 	[%rd16], %rs6;
	add.s32 	%r63, %r63, %r2;
	setp.lt.s32 	%p19, %r63, %r14;
	@%p19 bra 	$L__BB1_13;

$L__BB1_14:
	ret;

}
	// .globl	layernorm_f16
.visible .entry layernorm_f16(
	.param .u64 layernorm_f16_param_0,
	.param .u64 layernorm_f16_param_1,
	.param .u64 layernorm_f16_param_2,
	.param .u64 layernorm_f16_param_3,
	.param .u32 layernorm_f16_param_4,
	.param .f32 layernorm_f16_param_5
)
{
	.reg .pred 	%p<40>;
	.reg .b16 	%rs<14>;
	.reg .f32 	%f<90>;
	.reg .b32 	%r<97>;
	.reg .b64 	%rd<31>;
	// demoted variable
	.shared .align 8 .b8 _ZZ9layernormI6__halfEvPKT_PS1_S3_S3_ifE5s_sum[256];

	ld.param.u64 	%rd7, [layernorm_f16_param_0];
	ld.param.u64 	%rd8, [layernorm_f16_param_1];
	ld.param.u64 	%rd5, [layernorm_f16_param_2];
	ld.param.u64 	%rd6, [layernorm_f16_param_3];
	ld.param.u32 	%r19, [layernorm_f16_param_4];
	ld.param.f32 	%f15, [layernorm_f16_param_5];
	cvta.to.global.u64 	%rd1, %rd8;
	cvta.to.global.u64 	%rd2, %rd7;
	cvta.to.global.u64 	%rd3, %rd6;
	cvta.to.global.u64 	%rd4, %rd5;
	mov.u32 	%r20, %ntid.y;
	mov.u32 	%r21, %ctaid.x;
	mov.u32 	%r22, %tid.y;
	mad.lo.s32 	%r1, %r21, %r20, %r22;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	setp.ge.s32 	%p1, %r3, %r19;
	mov.f32 	%f86, 0f00000000;
	mov.f32 	%f87, %f86;
	@%p1 bra 	$L__BB2_3;

	mul.lo.s32 	%r4, %r1, %r19;
	mov.f32 	%f87, 0f00000000;
	mov.u32 	%r92, %r3;
	mov.f32 	%f86, %f87;

$L__BB2_2:
	add.s32 	%r23, %r92, %r4;
	mul.wide.s32 	%rd9, %r23, 2;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.u16 	%rs1, [%rd10];
	// begin inline asm
	{  cvt.f32.f16 %f20, %rs1;}

	// end inline asm
	add.f32 	%f87, %f87, %f20;
	fma.rn.f32 	%f86, %f20, %f20, %f86;
	add.s32 	%r92, %r92, %r2;
	setp.lt.s32 	%p2, %r92, %r19;
	@%p2 bra 	$L__BB2_2;

$L__BB2_3:
	mov.b32 	%r24, %f87;
	mov.u32 	%r25, 31;
	mov.u32 	%r26, 16;
	mov.u32 	%r27, -1;
	shfl.sync.bfly.b32 	%r28|%p3, %r24, %r26, %r25, %r27;
	mov.b32 	%f21, %r28;
	add.f32 	%f22, %f87, %f21;
	mov.b32 	%r29, %f86;
	shfl.sync.bfly.b32 	%r30|%p4, %r29, %r26, %r25, %r27;
	mov.b32 	%f23, %r30;
	add.f32 	%f24, %f86, %f23;
	mov.b32 	%r31, %f22;
	mov.u32 	%r32, 8;
	shfl.sync.bfly.b32 	%r33|%p5, %r31, %r32, %r25, %r27;
	mov.b32 	%f25, %r33;
	add.f32 	%f26, %f22, %f25;
	mov.b32 	%r34, %f24;
	shfl.sync.bfly.b32 	%r35|%p6, %r34, %r32, %r25, %r27;
	mov.b32 	%f27, %r35;
	add.f32 	%f28, %f24, %f27;
	mov.b32 	%r36, %f26;
	mov.u32 	%r37, 4;
	shfl.sync.bfly.b32 	%r38|%p7, %r36, %r37, %r25, %r27;
	mov.b32 	%f29, %r38;
	add.f32 	%f30, %f26, %f29;
	mov.b32 	%r39, %f28;
	shfl.sync.bfly.b32 	%r40|%p8, %r39, %r37, %r25, %r27;
	mov.b32 	%f31, %r40;
	add.f32 	%f32, %f28, %f31;
	mov.b32 	%r41, %f30;
	mov.u32 	%r42, 2;
	shfl.sync.bfly.b32 	%r43|%p9, %r41, %r42, %r25, %r27;
	mov.b32 	%f33, %r43;
	add.f32 	%f34, %f30, %f33;
	mov.b32 	%r44, %f32;
	shfl.sync.bfly.b32 	%r45|%p10, %r44, %r42, %r25, %r27;
	mov.b32 	%f35, %r45;
	add.f32 	%f36, %f32, %f35;
	mov.b32 	%r46, %f34;
	mov.u32 	%r47, 1;
	shfl.sync.bfly.b32 	%r48|%p11, %r46, %r47, %r25, %r27;
	mov.b32 	%f37, %r48;
	add.f32 	%f89, %f34, %f37;
	mov.b32 	%r49, %f36;
	shfl.sync.bfly.b32 	%r50|%p12, %r49, %r47, %r25, %r27;
	mov.b32 	%f38, %r50;
	add.f32 	%f88, %f36, %f38;
	setp.lt.s32 	%p13, %r2, 33;
	@%p13 bra 	$L__BB2_7;

	and.b32  	%r51, %r3, 31;
	setp.ne.s32 	%p14, %r51, 0;
	@%p14 bra 	$L__BB2_6;

	shr.u32 	%r52, %r3, 2;
	and.b32  	%r53, %r52, 1073741816;
	mov.u32 	%r54, _ZZ9layernormI6__halfEvPKT_PS1_S3_S3_ifE5s_sum;
	add.s32 	%r55, %r54, %r53;
	st.shared.v2.f32 	[%r55], {%f89, %f88};

$L__BB2_6:
	bar.sync 	0;
	mov.u32 	%r56, %tid.x;
	mov.u32 	%r57, 31;
	shl.b32 	%r58, %r56, 3;
	and.b32  	%r59, %r58, 248;
	mov.u32 	%r60, _ZZ9layernormI6__halfEvPKT_PS1_S3_S3_ifE5s_sum;
	add.s32 	%r61, %r60, %r59;
	ld.shared.v2.f32 	{%f39, %f40}, [%r61];
	mov.u32 	%r62, 1;
	mov.b32 	%r63, %f39;
	mov.u32 	%r64, 16;
	mov.u32 	%r65, -1;
	shfl.sync.bfly.b32 	%r66|%p15, %r63, %r64, %r57, %r65;
	mov.b32 	%f43, %r66;
	add.f32 	%f44, %f39, %f43;
	mov.b32 	%r67, %f40;
	shfl.sync.bfly.b32 	%r68|%p16, %r67, %r64, %r57, %r65;
	mov.b32 	%f45, %r68;
	add.f32 	%f46, %f40, %f45;
	mov.b32 	%r69, %f44;
	mov.u32 	%r70, 8;
	shfl.sync.bfly.b32 	%r71|%p17, %r69, %r70, %r57, %r65;
	mov.b32 	%f47, %r71;
	add.f32 	%f48, %f44, %f47;
	mov.b32 	%r72, %f46;
	shfl.sync.bfly.b32 	%r73|%p18, %r72, %r70, %r57, %r65;
	mov.b32 	%f49, %r73;
	add.f32 	%f50, %f46, %f49;
	mov.b32 	%r74, %f48;
	mov.u32 	%r75, 4;
	shfl.sync.bfly.b32 	%r76|%p19, %r74, %r75, %r57, %r65;
	mov.b32 	%f51, %r76;
	add.f32 	%f52, %f48, %f51;
	mov.b32 	%r77, %f50;
	shfl.sync.bfly.b32 	%r78|%p20, %r77, %r75, %r57, %r65;
	mov.b32 	%f53, %r78;
	add.f32 	%f54, %f50, %f53;
	mov.b32 	%r79, %f52;
	mov.u32 	%r80, 2;
	shfl.sync.bfly.b32 	%r81|%p21, %r79, %r80, %r57, %r65;
	mov.b32 	%f55, %r81;
	add.f32 	%f56, %f52, %f55;
	mov.b32 	%r82, %f54;
	shfl.sync.bfly.b32 	%r83|%p22, %r82, %r80, %r57, %r65;
	mov.b32 	%f57, %r83;
	add.f32 	%f58, %f54, %f57;
	mov.b32 	%r84, %f56;
	shfl.sync.bfly.b32 	%r85|%p23, %r84, %r62, %r57, %r65;
	mov.b32 	%f59, %r85;
	add.f32 	%f89, %f56, %f59;
	mov.b32 	%r86, %f58;
	shfl.sync.bfly.b32 	%r87|%p24, %r86, %r62, %r57, %r65;
	mov.b32 	%f60, %r87;
	add.f32 	%f88, %f58, %f60;

$L__BB2_7:
	cvt.rn.f32.s32 	%f61, %r19;
	div.rn.f32 	%f13, %f89, %f61;
	div.rn.f32 	%f62, %f88, %f61;
	mul.f32 	%f63, %f13, %f13;
	sub.f32 	%f64, %f62, %f63;
	add.f32 	%f65, %f64, %f15;
	rsqrt.approx.f32 	%f14, %f65;
	or.b64  	%rd11, %rd5, %rd6;
	setp.eq.s64 	%p25, %rd11, 0;
	@%p25 bra 	$L__BB2_19;
	bra.uni 	$L__BB2_8;

$L__BB2_19:
	@%p1 bra 	$L__BB2_22;

	mul.lo.s32 	%r16, %r1, %r19;

$L__BB2_21:
	add.s32 	%r91, %r3, %r16;
	mul.wide.s32 	%rd28, %r91, 2;
	add.s64 	%rd29, %rd2, %rd28;
	ld.global.u16 	%rs12, [%rd29];
	// begin inline asm
	{  cvt.f32.f16 %f81, %rs12;}

	// end inline asm
	sub.f32 	%f83, %f81, %f13;
	mul.f32 	%f82, %f14, %f83;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs13, %f82;}

	// end inline asm
	add.s64 	%rd30, %rd1, %rd28;
	st.global.u16 	[%rd30], %rs13;
	add.s32 	%r3, %r3, %r2;
	setp.lt.s32 	%p39, %r3, %r19;
	@%p39 bra 	$L__BB2_21;
	bra.uni 	$L__BB2_22;

$L__BB2_8:
	setp.eq.s64 	%p26, %rd5, 0;
	setp.ne.s64 	%p27, %rd6, 0;
	and.pred  	%p28, %p26, %p27;
	@%p28 bra 	$L__BB2_16;
	bra.uni 	$L__BB2_9;

$L__BB2_16:
	@%p1 bra 	$L__BB2_22;

	mul.lo.s32 	%r13, %r1, %r19;

$L__BB2_18:
	mul.wide.s32 	%rd23, %r3, 2;
	add.s64 	%rd24, %rd3, %rd23;
	ld.global.u16 	%rs9, [%rd24];
	// begin inline asm
	{  cvt.f32.f16 %f77, %rs9;}

	// end inline asm
	add.s32 	%r90, %r3, %r13;
	mul.wide.s32 	%rd25, %r90, 2;
	add.s64 	%rd26, %rd2, %rd25;
	ld.global.u16 	%rs10, [%rd26];
	// begin inline asm
	{  cvt.f32.f16 %f78, %rs10;}

	// end inline asm
	sub.f32 	%f80, %f78, %f13;
	fma.rn.f32 	%f79, %f14, %f80, %f77;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs11, %f79;}

	// end inline asm
	add.s64 	%rd27, %rd1, %rd25;
	st.global.u16 	[%rd27], %rs11;
	add.s32 	%r3, %r3, %r2;
	setp.lt.s32 	%p37, %r3, %r19;
	@%p37 bra 	$L__BB2_18;
	bra.uni 	$L__BB2_22;

$L__BB2_9:
	setp.eq.s64 	%p29, %rd6, 0;
	setp.ne.s64 	%p30, %rd5, 0;
	and.pred  	%p31, %p30, %p29;
	@%p31 bra 	$L__BB2_13;
	bra.uni 	$L__BB2_10;

$L__BB2_13:
	@%p1 bra 	$L__BB2_22;

	mul.lo.s32 	%r10, %r1, %r19;

$L__BB2_15:
	mul.wide.s32 	%rd18, %r3, 2;
	add.s64 	%rd19, %rd4, %rd18;
	ld.global.u16 	%rs6, [%rd19];
	// begin inline asm
	{  cvt.f32.f16 %f72, %rs6;}

	// end inline asm
	add.s32 	%r89, %r3, %r10;
	mul.wide.s32 	%rd20, %r89, 2;
	add.s64 	%rd21, %rd2, %rd20;
	ld.global.u16 	%rs7, [%rd21];
	// begin inline asm
	{  cvt.f32.f16 %f73, %rs7;}

	// end inline asm
	sub.f32 	%f75, %f73, %f13;
	mul.f32 	%f76, %f14, %f75;
	mul.f32 	%f74, %f72, %f76;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs8, %f74;}

	// end inline asm
	add.s64 	%rd22, %rd1, %rd20;
	st.global.u16 	[%rd22], %rs8;
	add.s32 	%r3, %r3, %r2;
	setp.lt.s32 	%p35, %r3, %r19;
	@%p35 bra 	$L__BB2_15;
	bra.uni 	$L__BB2_22;

$L__BB2_10:
	@%p1 bra 	$L__BB2_22;

	mul.lo.s32 	%r7, %r1, %r19;

$L__BB2_12:
	mul.wide.s32 	%rd12, %r3, 2;
	add.s64 	%rd13, %rd4, %rd12;
	ld.global.u16 	%rs2, [%rd13];
	// begin inline asm
	{  cvt.f32.f16 %f66, %rs2;}

	// end inline asm
	add.s64 	%rd14, %rd3, %rd12;
	ld.global.u16 	%rs3, [%rd14];
	// begin inline asm
	{  cvt.f32.f16 %f67, %rs3;}

	// end inline asm
	add.s32 	%r88, %r3, %r7;
	mul.wide.s32 	%rd15, %r88, 2;
	add.s64 	%rd16, %rd2, %rd15;
	ld.global.u16 	%rs4, [%rd16];
	// begin inline asm
	{  cvt.f32.f16 %f68, %rs4;}

	// end inline asm
	sub.f32 	%f70, %f68, %f13;
	mul.f32 	%f71, %f14, %f70;
	fma.rn.f32 	%f69, %f66, %f71, %f67;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs5, %f69;}

	// end inline asm
	add.s64 	%rd17, %rd1, %rd15;
	st.global.u16 	[%rd17], %rs5;
	add.s32 	%r3, %r3, %r2;
	setp.lt.s32 	%p33, %r3, %r19;
	@%p33 bra 	$L__BB2_12;

$L__BB2_22:
	ret;

}
	// .globl	rope_i_f16
.visible .entry rope_i_f16(
	.param .u64 rope_i_f16_param_0,
	.param .u64 rope_i_f16_param_1,
	.param .u64 rope_i_f16_param_2,
	.param .u64 rope_i_f16_param_3,
	.param .u32 rope_i_f16_param_4,
	.param .u32 rope_i_f16_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [rope_i_f16_param_0];
	ld.param.u64 	%rd2, [rope_i_f16_param_1];
	ld.param.u64 	%rd3, [rope_i_f16_param_2];
	ld.param.u64 	%rd4, [rope_i_f16_param_3];
	ld.param.u32 	%r4, [rope_i_f16_param_4];
	ld.param.u32 	%r3, [rope_i_f16_param_5];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	shl.b32 	%r2, %r1, 1;
	mul.lo.s32 	%r8, %r3, %r4;
	setp.ge.u32 	%p1, %r2, %r8;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd5, %rd2;
	shr.u32 	%r9, %r3, 1;
	rem.u32 	%r10, %r1, %r9;
	mul.wide.u32 	%rd6, %r10, 2;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.u16 	%rs3, [%rd7];
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.u16 	%rs6, [%rd9];
	cvta.to.global.u64 	%rd10, %rd1;
	mul.wide.s32 	%rd11, %r2, 2;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.u16 	%rs2, [%rd12];
	// begin inline asm
	{mul.f16 %rs1,%rs2,%rs3;
}
	// end inline asm
	ld.global.u16 	%rs5, [%rd12+2];
	// begin inline asm
	{mul.f16 %rs4,%rs5,%rs6;
}
	// end inline asm
	// begin inline asm
	{sub.f16 %rs7,%rs1,%rs4;
}
	// end inline asm
	cvta.to.global.u64 	%rd13, %rd4;
	add.s64 	%rd14, %rd13, %rd11;
	st.global.u16 	[%rd14], %rs7;
	ld.global.u16 	%rs11, [%rd12];
	// begin inline asm
	{mul.f16 %rs10,%rs11,%rs6;
}
	// end inline asm
	ld.global.u16 	%rs14, [%rd12+2];
	// begin inline asm
	{mul.f16 %rs13,%rs14,%rs3;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs16,%rs10,%rs13;
}
	// end inline asm
	st.global.u16 	[%rd14+2], %rs16;

$L__BB3_2:
	ret;

}
	// .globl	rope_f16
.visible .entry rope_f16(
	.param .u64 rope_f16_param_0,
	.param .u64 rope_f16_param_1,
	.param .u64 rope_f16_param_2,
	.param .u64 rope_f16_param_3,
	.param .u32 rope_f16_param_4,
	.param .u32 rope_f16_param_5,
	.param .u32 rope_f16_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd1, [rope_f16_param_0];
	ld.param.u64 	%rd2, [rope_f16_param_1];
	ld.param.u64 	%rd3, [rope_f16_param_2];
	ld.param.u64 	%rd4, [rope_f16_param_3];
	ld.param.u32 	%r4, [rope_f16_param_4];
	ld.param.u32 	%r2, [rope_f16_param_5];
	ld.param.u32 	%r3, [rope_f16_param_6];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	shl.b32 	%r8, %r1, 1;
	mul.lo.s32 	%r9, %r2, %r4;
	setp.ge.u32 	%p1, %r8, %r9;
	@%p1 bra 	$L__BB4_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	shr.u32 	%r10, %r2, 1;
	div.u32 	%r11, %r1, %r10;
	mul.lo.s32 	%r12, %r11, %r10;
	sub.s32 	%r13, %r1, %r12;
	shr.u32 	%r14, %r3, 1;
	div.u32 	%r15, %r13, %r14;
	mul.lo.s32 	%r16, %r15, %r14;
	sub.s32 	%r17, %r13, %r16;
	mul.lo.s32 	%r18, %r11, %r2;
	mad.lo.s32 	%r19, %r15, %r3, %r18;
	add.s32 	%r20, %r19, %r17;
	add.s32 	%r21, %r20, %r14;
	mul.wide.u32 	%rd8, %r13, 2;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.u16 	%rs3, [%rd9];
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.u16 	%rs6, [%rd11];
	mul.wide.u32 	%rd12, %r20, 2;
	add.s64 	%rd13, %rd6, %rd12;
	ld.global.u16 	%rs2, [%rd13];
	// begin inline asm
	{mul.f16 %rs1,%rs2,%rs3;
}
	// end inline asm
	mul.wide.u32 	%rd14, %r21, 2;
	add.s64 	%rd15, %rd6, %rd14;
	ld.global.u16 	%rs5, [%rd15];
	// begin inline asm
	{mul.f16 %rs4,%rs5,%rs6;
}
	// end inline asm
	// begin inline asm
	{sub.f16 %rs7,%rs1,%rs4;
}
	// end inline asm
	add.s64 	%rd16, %rd5, %rd12;
	st.global.u16 	[%rd16], %rs7;
	ld.global.u16 	%rs11, [%rd13];
	// begin inline asm
	{mul.f16 %rs10,%rs11,%rs6;
}
	// end inline asm
	ld.global.u16 	%rs14, [%rd15];
	// begin inline asm
	{mul.f16 %rs13,%rs14,%rs3;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs16,%rs10,%rs13;
}
	// end inline asm
	add.s64 	%rd17, %rd5, %rd14;
	st.global.u16 	[%rd17], %rs16;

$L__BB4_2:
	ret;

}
	// .globl	rope_thd_f16
.visible .entry rope_thd_f16(
	.param .u64 rope_thd_f16_param_0,
	.param .u64 rope_thd_f16_param_1,
	.param .u64 rope_thd_f16_param_2,
	.param .u64 rope_thd_f16_param_3,
	.param .u32 rope_thd_f16_param_4,
	.param .u32 rope_thd_f16_param_5,
	.param .u32 rope_thd_f16_param_6,
	.param .u32 rope_thd_f16_param_7
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd1, [rope_thd_f16_param_0];
	ld.param.u64 	%rd2, [rope_thd_f16_param_1];
	ld.param.u64 	%rd3, [rope_thd_f16_param_2];
	ld.param.u64 	%rd4, [rope_thd_f16_param_3];
	ld.param.u32 	%r5, [rope_thd_f16_param_4];
	ld.param.u32 	%r2, [rope_thd_f16_param_5];
	ld.param.u32 	%r3, [rope_thd_f16_param_6];
	ld.param.u32 	%r4, [rope_thd_f16_param_7];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	shl.b32 	%r9, %r1, 1;
	mul.lo.s32 	%r10, %r2, %r5;
	mul.lo.s32 	%r11, %r10, %r3;
	mul.lo.s32 	%r12, %r11, %r4;
	setp.ge.u32 	%p1, %r9, %r12;
	@%p1 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	shr.u32 	%r13, %r4, 1;
	div.u32 	%r14, %r1, %r13;
	mul.lo.s32 	%r15, %r14, %r13;
	sub.s32 	%r16, %r1, %r15;
	div.u32 	%r17, %r14, %r3;
	rem.u32 	%r18, %r17, %r2;
	mad.lo.s32 	%r19, %r14, %r4, %r16;
	add.s32 	%r20, %r19, %r13;
	mad.lo.s32 	%r21, %r18, %r13, %r16;
	mul.wide.u32 	%rd8, %r21, 2;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.u16 	%rs3, [%rd9];
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.u16 	%rs6, [%rd11];
	mul.wide.u32 	%rd12, %r19, 2;
	add.s64 	%rd13, %rd6, %rd12;
	ld.global.u16 	%rs2, [%rd13];
	// begin inline asm
	{mul.f16 %rs1,%rs2,%rs3;
}
	// end inline asm
	mul.wide.u32 	%rd14, %r20, 2;
	add.s64 	%rd15, %rd6, %rd14;
	ld.global.u16 	%rs5, [%rd15];
	// begin inline asm
	{mul.f16 %rs4,%rs5,%rs6;
}
	// end inline asm
	// begin inline asm
	{sub.f16 %rs7,%rs1,%rs4;
}
	// end inline asm
	add.s64 	%rd16, %rd5, %rd12;
	st.global.u16 	[%rd16], %rs7;
	ld.global.u16 	%rs11, [%rd13];
	// begin inline asm
	{mul.f16 %rs10,%rs11,%rs6;
}
	// end inline asm
	ld.global.u16 	%rs14, [%rd15];
	// begin inline asm
	{mul.f16 %rs13,%rs14,%rs3;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs16,%rs10,%rs13;
}
	// end inline asm
	add.s64 	%rd17, %rd5, %rd14;
	st.global.u16 	[%rd17], %rs16;

$L__BB5_2:
	ret;

}
	// .globl	sum_f16
.visible .entry sum_f16(
	.param .u64 sum_f16_param_0,
	.param .u64 sum_f16_param_1,
	.param .u64 sum_f16_param_2,
	.param .u64 sum_f16_param_3,
	.param .u64 sum_f16_param_4,
	.param .u64 sum_f16_param_5
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd7, [sum_f16_param_0];
	ld.param.u64 	%rd8, [sum_f16_param_1];
	ld.param.u64 	%rd9, [sum_f16_param_2];
	ld.param.u64 	%rd10, [sum_f16_param_3];
	setp.eq.s64 	%p3, %rd8, 0;
	mov.pred 	%p2, 0;
	mov.pred 	%p19, %p2;
	@%p3 bra 	$L__BB6_5;

	cvta.to.global.u64 	%rd1, %rd10;
	mov.u64 	%rd26, 1;
	mov.u32 	%r27, 0;

$L__BB6_2:
	not.b32 	%r20, %r27;
	cvt.u64.u32 	%rd12, %r20;
	add.s64 	%rd13, %rd12, %rd8;
	shl.b64 	%rd14, %rd13, 3;
	and.b64  	%rd15, %rd14, 34359738360;
	add.s64 	%rd3, %rd1, %rd15;
	ld.global.nc.u64 	%rd4, [%rd3];
	setp.lt.u64 	%p4, %rd4, 2;
	@%p4 bra 	$L__BB6_4;

	shl.b64 	%rd16, %rd8, 3;
	add.s64 	%rd17, %rd3, %rd16;
	ld.global.nc.u64 	%rd18, [%rd17];
	setp.ne.s64 	%p6, %rd26, %rd18;
	mov.pred 	%p19, -1;
	@%p6 bra 	$L__BB6_5;

$L__BB6_4:
	mul.lo.s64 	%rd26, %rd4, %rd26;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd19, %r27;
	setp.lt.u64 	%p8, %rd19, %rd8;
	mov.pred 	%p19, %p2;
	@%p8 bra 	$L__BB6_2;

$L__BB6_5:
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r21, %ctaid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r4, %r21, %r3, %r22;
	cvt.u64.u32 	%rd6, %r4;
	@%p19 bra 	$L__BB6_12;
	bra.uni 	$L__BB6_6;

$L__BB6_12:
	setp.ge.u64 	%p14, %rd6, %rd7;
	@%p14 bra 	$L__BB6_18;

	setp.eq.s64 	%p15, %rd9, 0;
	mov.u32 	%r25, %nctaid.x;
	mul.lo.s32 	%r12, %r3, %r25;
	@%p15 bra 	$L__BB6_17;

$L__BB6_14:
	mov.u32 	%r32, 0;

$L__BB6_15:
	add.s32 	%r32, %r32, 1;
	cvt.u64.u32 	%rd23, %r32;
	setp.lt.u64 	%p16, %rd23, %rd9;
	@%p16 bra 	$L__BB6_15;

	add.s32 	%r4, %r4, %r12;
	cvt.u64.u32 	%rd24, %r4;
	setp.lt.u64 	%p17, %rd24, %rd7;
	@%p17 bra 	$L__BB6_14;
	bra.uni 	$L__BB6_18;

$L__BB6_17:
	add.s32 	%r4, %r4, %r12;
	cvt.u64.u32 	%rd25, %r4;
	setp.lt.u64 	%p18, %rd25, %rd7;
	@%p18 bra 	$L__BB6_17;
	bra.uni 	$L__BB6_18;

$L__BB6_6:
	setp.ge.u64 	%p9, %rd6, %rd7;
	@%p9 bra 	$L__BB6_18;

	setp.eq.s64 	%p10, %rd9, 0;
	mov.u32 	%r23, %nctaid.x;
	mul.lo.s32 	%r5, %r3, %r23;
	@%p10 bra 	$L__BB6_11;

$L__BB6_8:
	mov.u32 	%r29, 0;

$L__BB6_9:
	add.s32 	%r29, %r29, 1;
	cvt.u64.u32 	%rd20, %r29;
	setp.lt.u64 	%p11, %rd20, %rd9;
	@%p11 bra 	$L__BB6_9;

	add.s32 	%r4, %r4, %r5;
	cvt.u64.u32 	%rd21, %r4;
	setp.lt.u64 	%p12, %rd21, %rd7;
	@%p12 bra 	$L__BB6_8;
	bra.uni 	$L__BB6_18;

$L__BB6_11:
	add.s32 	%r4, %r4, %r5;
	cvt.u64.u32 	%rd22, %r4;
	setp.lt.u64 	%p13, %rd22, %rd7;
	@%p13 bra 	$L__BB6_11;

$L__BB6_18:
	ret;

}
	// .globl	fast_argmin_f16
.visible .entry fast_argmin_f16(
	.param .u64 fast_argmin_f16_param_0,
	.param .u64 fast_argmin_f16_param_1,
	.param .u64 fast_argmin_f16_param_2,
	.param .u64 fast_argmin_f16_param_3,
	.param .u64 fast_argmin_f16_param_4,
	.param .u64 fast_argmin_f16_param_5
)
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<24>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<46>;
	.reg .b64 	%rd<75>;
	// demoted variable
	.shared .align 2 .b8 _ZZ11fast_argminI6__halfEvmmmPKmPKT_PjE3shr[2048];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argminI6__halfEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd36, [fast_argmin_f16_param_0];
	ld.param.u64 	%rd37, [fast_argmin_f16_param_1];
	ld.param.u64 	%rd34, [fast_argmin_f16_param_2];
	ld.param.u64 	%rd38, [fast_argmin_f16_param_3];
	ld.param.u64 	%rd39, [fast_argmin_f16_param_4];
	ld.param.u64 	%rd35, [fast_argmin_f16_param_5];
	cvta.to.global.u64 	%rd1, %rd38;
	cvta.to.global.u64 	%rd2, %rd39;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd40, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	mov.f32 	%f1, 0f7F800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs21, %f1;}

	// end inline asm
	shl.b32 	%r12, %r1, 1;
	mov.u32 	%r13, _ZZ11fast_argminI6__halfEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r12;
	st.shared.u16 	[%r2], %rs21;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ11fast_argminI6__halfEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r14;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd41, %rd3, %rd37;
	add.s64 	%rd42, %rd41, %rd37;
	min.u64 	%rd4, %rd42, %rd36;
	add.s64 	%rd67, %rd41, %rd40;
	setp.lt.u64 	%p1, %rd67, %rd4;
	@%p1 bra 	$L__BB7_1;
	bra.uni 	$L__BB7_26;

$L__BB7_1:
	setp.eq.s64 	%p2, %rd34, 0;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd6, %r17;
	shl.b64 	%rd43, %rd34, 3;
	add.s64 	%rd44, %rd1, %rd43;
	add.s64 	%rd7, %rd44, -8;
	@%p2 bra 	$L__BB7_15;

	mov.u16 	%rs22, 1;

$L__BB7_3:
	mov.u32 	%r43, 0;
	mov.u64 	%rd68, %rd67;
	mov.u32 	%r44, %r43;

$L__BB7_4:
	not.b32 	%r20, %r43;
	cvt.u64.u32 	%rd45, %r20;
	add.s64 	%rd46, %rd45, %rd34;
	and.b64  	%rd10, %rd68, 4294967295;
	shl.b64 	%rd47, %rd46, 3;
	and.b64  	%rd48, %rd47, 34359738360;
	add.s64 	%rd11, %rd1, %rd48;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd49, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd49, 0;
	@%p3 bra 	$L__BB7_6;

	div.u64 	%rd68, %rd10, %rd12;
	mul.lo.s64 	%rd50, %rd68, %rd12;
	sub.s64 	%rd70, %rd10, %rd50;
	bra.uni 	$L__BB7_7;

$L__BB7_6:
	cvt.u32.u64 	%r21, %rd12;
	cvt.u32.u64 	%r22, %rd10;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd68, %r23;
	cvt.u64.u32 	%rd70, %r25;

$L__BB7_7:
	add.s64 	%rd52, %rd11, %rd43;
	ld.global.u64 	%rd53, [%rd52];
	mul.lo.s64 	%rd54, %rd53, %rd70;
	cvt.u32.u64 	%r26, %rd54;
	add.s32 	%r44, %r44, %r26;
	add.s32 	%r43, %r43, 1;
	cvt.u64.u32 	%rd55, %r43;
	setp.lt.u64 	%p4, %rd55, %rd34;
	@%p4 bra 	$L__BB7_4;

	mul.wide.u32 	%rd56, %r44, 2;
	add.s64 	%rd57, %rd2, %rd56;
	ld.global.u16 	%rs4, [%rd57];
	and.b16  	%rs10, %rs22, 255;
	setp.ne.s16 	%p5, %rs10, 0;
	@%p5 bra 	$L__BB7_10;

	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs4, %rs21;
  selp.u16 %rs11, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p6, %rs11, 0;
	@%p6 bra 	$L__BB7_14;

$L__BB7_10:
	st.shared.u16 	[%r2], %rs4;
	ld.global.u64 	%rd19, [%rd7];
	or.b64  	%rd58, %rd67, %rd19;
	and.b64  	%rd59, %rd58, -4294967296;
	setp.eq.s64 	%p7, %rd59, 0;
	@%p7 bra 	$L__BB7_12;

	rem.u64 	%rd71, %rd67, %rd19;
	bra.uni 	$L__BB7_13;

$L__BB7_12:
	cvt.u32.u64 	%r27, %rd19;
	cvt.u32.u64 	%r28, %rd67;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd71, %r29;

$L__BB7_13:
	st.shared.u32 	[%r3], %rd71;
	mov.u16 	%rs21, %rs4;

$L__BB7_14:
	add.s64 	%rd67, %rd67, %rd6;
	setp.lt.u64 	%p8, %rd67, %rd4;
	mov.u16 	%rs22, 0;
	@%p8 bra 	$L__BB7_3;
	bra.uni 	$L__BB7_26;

$L__BB7_15:
	ld.global.u16 	%rs6, [%rd2];
	st.shared.u16 	[%r2], %rs6;
	ld.global.u64 	%rd24, [%rd7];
	or.b64  	%rd60, %rd67, %rd24;
	and.b64  	%rd61, %rd60, -4294967296;
	setp.eq.s64 	%p9, %rd61, 0;
	@%p9 bra 	$L__BB7_17;

	rem.u64 	%rd72, %rd67, %rd24;
	bra.uni 	$L__BB7_18;

$L__BB7_17:
	cvt.u32.u64 	%r30, %rd24;
	cvt.u32.u64 	%r31, %rd67;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd72, %r32;

$L__BB7_18:
	st.shared.u32 	[%r3], %rd72;
	add.s64 	%rd73, %rd67, %rd6;
	setp.ge.u64 	%p10, %rd73, %rd4;
	@%p10 bra 	$L__BB7_26;

	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs6, %rs6;
  selp.u16 %rs15, 1, 0, __$temp3;}
	// end inline asm
	cvt.u32.u64 	%r33, %rd24;

$L__BB7_20:
	.pragma "nounroll";
	setp.eq.s16 	%p11, %rs15, 0;
	@%p11 bra 	$L__BB7_25;

	st.shared.u16 	[%r2], %rs6;
	or.b64  	%rd62, %rd73, %rd24;
	and.b64  	%rd63, %rd62, -4294967296;
	setp.eq.s64 	%p12, %rd63, 0;
	@%p12 bra 	$L__BB7_23;

	rem.u64 	%rd74, %rd73, %rd24;
	bra.uni 	$L__BB7_24;

$L__BB7_23:
	cvt.u32.u64 	%r34, %rd73;
	rem.u32 	%r35, %r34, %r33;
	cvt.u64.u32 	%rd74, %r35;

$L__BB7_24:
	st.shared.u32 	[%r3], %rd74;

$L__BB7_25:
	add.s64 	%rd73, %rd73, %rd6;
	setp.lt.u64 	%p13, %rd73, %rd4;
	@%p13 bra 	$L__BB7_20;

$L__BB7_26:
	mov.u32 	%r36, %ntid.x;
	shr.u32 	%r45, %r36, 1;
	setp.eq.s32 	%p14, %r45, 0;
	@%p14 bra 	$L__BB7_31;

$L__BB7_27:
	bar.sync 	0;
	setp.ge.u32 	%p15, %r1, %r45;
	@%p15 bra 	$L__BB7_30;

	shl.b32 	%r37, %r45, 1;
	add.s32 	%r38, %r2, %r37;
	ld.shared.u16 	%rs7, [%r38];
	ld.shared.u16 	%rs20, [%r2];
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs7, %rs20;
  selp.u16 %rs18, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p16, %rs18, 0;
	@%p16 bra 	$L__BB7_30;

	st.shared.u16 	[%r2], %rs7;
	shl.b32 	%r39, %r45, 2;
	add.s32 	%r40, %r3, %r39;
	ld.shared.u32 	%r41, [%r40];
	st.shared.u32 	[%r3], %r41;

$L__BB7_30:
	shr.u32 	%r45, %r45, 1;
	setp.ne.s32 	%p17, %r45, 0;
	@%p17 bra 	$L__BB7_27;

$L__BB7_31:
	setp.ne.s32 	%p18, %r1, 0;
	@%p18 bra 	$L__BB7_33;

	ld.shared.u32 	%r42, [_ZZ11fast_argminI6__halfEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd64, %rd35;
	shl.b64 	%rd65, %rd3, 2;
	add.s64 	%rd66, %rd64, %rd65;
	st.global.u32 	[%rd66], %r42;

$L__BB7_33:
	ret;

}
	// .globl	fast_argmax_f16
.visible .entry fast_argmax_f16(
	.param .u64 fast_argmax_f16_param_0,
	.param .u64 fast_argmax_f16_param_1,
	.param .u64 fast_argmax_f16_param_2,
	.param .u64 fast_argmax_f16_param_3,
	.param .u64 fast_argmax_f16_param_4,
	.param .u64 fast_argmax_f16_param_5
)
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<24>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<46>;
	.reg .b64 	%rd<75>;
	// demoted variable
	.shared .align 2 .b8 _ZZ11fast_argmaxI6__halfEvmmmPKmPKT_PjE3shr[2048];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argmaxI6__halfEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd36, [fast_argmax_f16_param_0];
	ld.param.u64 	%rd37, [fast_argmax_f16_param_1];
	ld.param.u64 	%rd34, [fast_argmax_f16_param_2];
	ld.param.u64 	%rd38, [fast_argmax_f16_param_3];
	ld.param.u64 	%rd39, [fast_argmax_f16_param_4];
	ld.param.u64 	%rd35, [fast_argmax_f16_param_5];
	cvta.to.global.u64 	%rd1, %rd38;
	cvta.to.global.u64 	%rd2, %rd39;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd40, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	mov.f32 	%f1, 0fFF800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs21, %f1;}

	// end inline asm
	shl.b32 	%r12, %r1, 1;
	mov.u32 	%r13, _ZZ11fast_argmaxI6__halfEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r12;
	st.shared.u16 	[%r2], %rs21;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ11fast_argmaxI6__halfEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r14;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd41, %rd3, %rd37;
	add.s64 	%rd42, %rd41, %rd37;
	min.u64 	%rd4, %rd42, %rd36;
	add.s64 	%rd67, %rd41, %rd40;
	setp.lt.u64 	%p1, %rd67, %rd4;
	@%p1 bra 	$L__BB8_1;
	bra.uni 	$L__BB8_26;

$L__BB8_1:
	setp.eq.s64 	%p2, %rd34, 0;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd6, %r17;
	shl.b64 	%rd43, %rd34, 3;
	add.s64 	%rd44, %rd1, %rd43;
	add.s64 	%rd7, %rd44, -8;
	@%p2 bra 	$L__BB8_15;

	mov.u16 	%rs22, 1;

$L__BB8_3:
	mov.u32 	%r43, 0;
	mov.u64 	%rd68, %rd67;
	mov.u32 	%r44, %r43;

$L__BB8_4:
	not.b32 	%r20, %r43;
	cvt.u64.u32 	%rd45, %r20;
	add.s64 	%rd46, %rd45, %rd34;
	and.b64  	%rd10, %rd68, 4294967295;
	shl.b64 	%rd47, %rd46, 3;
	and.b64  	%rd48, %rd47, 34359738360;
	add.s64 	%rd11, %rd1, %rd48;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd49, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd49, 0;
	@%p3 bra 	$L__BB8_6;

	div.u64 	%rd68, %rd10, %rd12;
	mul.lo.s64 	%rd50, %rd68, %rd12;
	sub.s64 	%rd70, %rd10, %rd50;
	bra.uni 	$L__BB8_7;

$L__BB8_6:
	cvt.u32.u64 	%r21, %rd12;
	cvt.u32.u64 	%r22, %rd10;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd68, %r23;
	cvt.u64.u32 	%rd70, %r25;

$L__BB8_7:
	add.s64 	%rd52, %rd11, %rd43;
	ld.global.u64 	%rd53, [%rd52];
	mul.lo.s64 	%rd54, %rd53, %rd70;
	cvt.u32.u64 	%r26, %rd54;
	add.s32 	%r44, %r44, %r26;
	add.s32 	%r43, %r43, 1;
	cvt.u64.u32 	%rd55, %r43;
	setp.lt.u64 	%p4, %rd55, %rd34;
	@%p4 bra 	$L__BB8_4;

	mul.wide.u32 	%rd56, %r44, 2;
	add.s64 	%rd57, %rd2, %rd56;
	ld.global.u16 	%rs4, [%rd57];
	and.b16  	%rs10, %rs22, 255;
	setp.ne.s16 	%p5, %rs10, 0;
	@%p5 bra 	$L__BB8_10;

	// begin inline asm
	{ .reg .pred __$temp3;
  setp.gt.f16  __$temp3, %rs4, %rs21;
  selp.u16 %rs11, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p6, %rs11, 0;
	@%p6 bra 	$L__BB8_14;

$L__BB8_10:
	st.shared.u16 	[%r2], %rs4;
	ld.global.u64 	%rd19, [%rd7];
	or.b64  	%rd58, %rd67, %rd19;
	and.b64  	%rd59, %rd58, -4294967296;
	setp.eq.s64 	%p7, %rd59, 0;
	@%p7 bra 	$L__BB8_12;

	rem.u64 	%rd71, %rd67, %rd19;
	bra.uni 	$L__BB8_13;

$L__BB8_12:
	cvt.u32.u64 	%r27, %rd19;
	cvt.u32.u64 	%r28, %rd67;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd71, %r29;

$L__BB8_13:
	st.shared.u32 	[%r3], %rd71;
	mov.u16 	%rs21, %rs4;

$L__BB8_14:
	add.s64 	%rd67, %rd67, %rd6;
	setp.lt.u64 	%p8, %rd67, %rd4;
	mov.u16 	%rs22, 0;
	@%p8 bra 	$L__BB8_3;
	bra.uni 	$L__BB8_26;

$L__BB8_15:
	ld.global.u16 	%rs6, [%rd2];
	st.shared.u16 	[%r2], %rs6;
	ld.global.u64 	%rd24, [%rd7];
	or.b64  	%rd60, %rd67, %rd24;
	and.b64  	%rd61, %rd60, -4294967296;
	setp.eq.s64 	%p9, %rd61, 0;
	@%p9 bra 	$L__BB8_17;

	rem.u64 	%rd72, %rd67, %rd24;
	bra.uni 	$L__BB8_18;

$L__BB8_17:
	cvt.u32.u64 	%r30, %rd24;
	cvt.u32.u64 	%r31, %rd67;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd72, %r32;

$L__BB8_18:
	st.shared.u32 	[%r3], %rd72;
	add.s64 	%rd73, %rd67, %rd6;
	setp.ge.u64 	%p10, %rd73, %rd4;
	@%p10 bra 	$L__BB8_26;

	// begin inline asm
	{ .reg .pred __$temp3;
  setp.gt.f16  __$temp3, %rs6, %rs6;
  selp.u16 %rs15, 1, 0, __$temp3;}
	// end inline asm
	cvt.u32.u64 	%r33, %rd24;

$L__BB8_20:
	.pragma "nounroll";
	setp.eq.s16 	%p11, %rs15, 0;
	@%p11 bra 	$L__BB8_25;

	st.shared.u16 	[%r2], %rs6;
	or.b64  	%rd62, %rd73, %rd24;
	and.b64  	%rd63, %rd62, -4294967296;
	setp.eq.s64 	%p12, %rd63, 0;
	@%p12 bra 	$L__BB8_23;

	rem.u64 	%rd74, %rd73, %rd24;
	bra.uni 	$L__BB8_24;

$L__BB8_23:
	cvt.u32.u64 	%r34, %rd73;
	rem.u32 	%r35, %r34, %r33;
	cvt.u64.u32 	%rd74, %r35;

$L__BB8_24:
	st.shared.u32 	[%r3], %rd74;

$L__BB8_25:
	add.s64 	%rd73, %rd73, %rd6;
	setp.lt.u64 	%p13, %rd73, %rd4;
	@%p13 bra 	$L__BB8_20;

$L__BB8_26:
	mov.u32 	%r36, %ntid.x;
	shr.u32 	%r45, %r36, 1;
	setp.eq.s32 	%p14, %r45, 0;
	@%p14 bra 	$L__BB8_31;

$L__BB8_27:
	bar.sync 	0;
	setp.ge.u32 	%p15, %r1, %r45;
	@%p15 bra 	$L__BB8_30;

	shl.b32 	%r37, %r45, 1;
	add.s32 	%r38, %r2, %r37;
	ld.shared.u16 	%rs7, [%r38];
	ld.shared.u16 	%rs20, [%r2];
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.gt.f16  __$temp3, %rs7, %rs20;
  selp.u16 %rs18, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p16, %rs18, 0;
	@%p16 bra 	$L__BB8_30;

	st.shared.u16 	[%r2], %rs7;
	shl.b32 	%r39, %r45, 2;
	add.s32 	%r40, %r3, %r39;
	ld.shared.u32 	%r41, [%r40];
	st.shared.u32 	[%r3], %r41;

$L__BB8_30:
	shr.u32 	%r45, %r45, 1;
	setp.ne.s32 	%p17, %r45, 0;
	@%p17 bra 	$L__BB8_27;

$L__BB8_31:
	setp.ne.s32 	%p18, %r1, 0;
	@%p18 bra 	$L__BB8_33;

	ld.shared.u32 	%r42, [_ZZ11fast_argmaxI6__halfEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd64, %rd35;
	shl.b64 	%rd65, %rd3, 2;
	add.s64 	%rd66, %rd64, %rd65;
	st.global.u32 	[%rd66], %r42;

$L__BB8_33:
	ret;

}
	// .globl	fast_min_f16
.visible .entry fast_min_f16(
	.param .u64 fast_min_f16_param_0,
	.param .u64 fast_min_f16_param_1,
	.param .u64 fast_min_f16_param_2,
	.param .u64 fast_min_f16_param_3,
	.param .u64 fast_min_f16_param_4,
	.param .u64 fast_min_f16_param_5
)
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<56>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 2 .b8 _ZZ8fast_minI6__halfEvmmmPKmPKT_PS3_E3shr[2048];

	ld.param.u64 	%rd23, [fast_min_f16_param_0];
	ld.param.u64 	%rd24, [fast_min_f16_param_1];
	ld.param.u64 	%rd20, [fast_min_f16_param_2];
	ld.param.u64 	%rd21, [fast_min_f16_param_3];
	ld.param.u64 	%rd25, [fast_min_f16_param_4];
	ld.param.u64 	%rd22, [fast_min_f16_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	mov.f32 	%f1, 0f7F800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs52, %f1;}

	// end inline asm
	shl.b32 	%r11, %r1, 1;
	mov.u32 	%r12, _ZZ8fast_minI6__halfEvmmmPKmPKT_PS3_E3shr;
	add.s32 	%r2, %r12, %r11;
	st.shared.u16 	[%r2], %rs52;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB9_1;
	bra.uni 	$L__BB9_17;

$L__BB9_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r13, %ntid.x;
	cvt.u64.u32 	%rd4, %r13;
	@%p2 bra 	$L__BB9_12;

	cvta.to.global.u64 	%rd5, %rd21;

$L__BB9_3:
	mov.u16 	%rs2, %rs52;
	mov.u32 	%r27, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r28, %r27;

$L__BB9_4:
	not.b32 	%r16, %r27;
	cvt.u64.u32 	%rd30, %r16;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB9_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB9_7;

$L__BB9_6:
	cvt.u32.u64 	%r17, %rd10;
	cvt.u32.u64 	%r18, %rd8;
	div.u32 	%r19, %r18, %r17;
	mul.lo.s32 	%r20, %r19, %r17;
	sub.s32 	%r21, %r18, %r20;
	cvt.u64.u32 	%rd47, %r19;
	cvt.u64.u32 	%rd49, %r21;

$L__BB9_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r22, %rd39;
	add.s32 	%r28, %r28, %r22;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd40, %r27;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB9_4;

	mul.wide.u32 	%rd41, %r28, 2;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u16 	%rs3, [%rd42];
	// begin inline asm
	{set.nan.f16.f16 %rs17,%rs2,%rs2;
}
	// end inline asm
	setp.ne.s16 	%p5, %rs17, 0;
	mov.u16 	%rs52, 32767;
	@%p5 bra 	$L__BB9_11;

	// begin inline asm
	{set.nan.f16.f16 %rs21,%rs3,%rs3;
}
	// end inline asm
	setp.ne.s16 	%p6, %rs21, 0;
	@%p6 bra 	$L__BB9_11;

	// begin inline asm
	{  cvt.f32.f16 %f2, %rs2;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3, %rs3;}

	// end inline asm
	// begin inline asm
	{min.f32 %f4,%f2,%f3;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs52, %f4;}

	// end inline asm

$L__BB9_11:
	st.shared.u16 	[%r2], %rs52;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p7, %rd46, %rd2;
	@%p7 bra 	$L__BB9_3;
	bra.uni 	$L__BB9_17;

$L__BB9_12:
	ld.global.u16 	%rs7, [%rd1];
	// begin inline asm
	{set.nan.f16.f16 %rs32,%rs7,%rs7;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f9, %rs7;}

	// end inline asm

$L__BB9_13:
	mov.u16 	%rs8, %rs52;
	// begin inline asm
	{set.nan.f16.f16 %rs28,%rs8,%rs8;
}
	// end inline asm
	setp.ne.s16 	%p8, %rs28, 0;
	mov.u16 	%rs52, 32767;
	@%p8 bra 	$L__BB9_16;

	setp.ne.s16 	%p9, %rs32, 0;
	@%p9 bra 	$L__BB9_16;

	// begin inline asm
	{  cvt.f32.f16 %f8, %rs8;}

	// end inline asm
	// begin inline asm
	{min.f32 %f10,%f8,%f9;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs52, %f10;}

	// end inline asm

$L__BB9_16:
	st.shared.u16 	[%r2], %rs52;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p10, %rd46, %rd2;
	@%p10 bra 	$L__BB9_13;

$L__BB9_17:
	mov.u32 	%r23, %ntid.x;
	shr.u32 	%r29, %r23, 1;
	setp.eq.s32 	%p11, %r29, 0;
	@%p11 bra 	$L__BB9_24;

$L__BB9_18:
	bar.sync 	0;
	setp.ge.u32 	%p12, %r1, %r29;
	@%p12 bra 	$L__BB9_23;

	ld.shared.u16 	%rs12, [%r2];
	shl.b32 	%r24, %r29, 1;
	add.s32 	%r25, %r2, %r24;
	ld.shared.u16 	%rs13, [%r25];
	// begin inline asm
	{set.nan.f16.f16 %rs39,%rs12,%rs12;
}
	// end inline asm
	setp.ne.s16 	%p13, %rs39, 0;
	mov.u16 	%rs55, 32767;
	@%p13 bra 	$L__BB9_22;

	// begin inline asm
	{set.nan.f16.f16 %rs43,%rs13,%rs13;
}
	// end inline asm
	setp.ne.s16 	%p14, %rs43, 0;
	@%p14 bra 	$L__BB9_22;

	// begin inline asm
	{  cvt.f32.f16 %f14, %rs12;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f15, %rs13;}

	// end inline asm
	// begin inline asm
	{min.f32 %f16,%f14,%f15;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs55, %f16;}

	// end inline asm

$L__BB9_22:
	st.shared.u16 	[%r2], %rs55;

$L__BB9_23:
	shr.u32 	%r29, %r29, 1;
	setp.ne.s32 	%p15, %r29, 0;
	@%p15 bra 	$L__BB9_18;

$L__BB9_24:
	setp.ne.s32 	%p16, %r1, 0;
	@%p16 bra 	$L__BB9_26;

	ld.shared.u16 	%rs50, [_ZZ8fast_minI6__halfEvmmmPKmPKT_PS3_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r10, 2;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.u16 	[%rd45], %rs50;

$L__BB9_26:
	ret;

}
	// .globl	fast_max_f16
.visible .entry fast_max_f16(
	.param .u64 fast_max_f16_param_0,
	.param .u64 fast_max_f16_param_1,
	.param .u64 fast_max_f16_param_2,
	.param .u64 fast_max_f16_param_3,
	.param .u64 fast_max_f16_param_4,
	.param .u64 fast_max_f16_param_5
)
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<56>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 2 .b8 _ZZ8fast_maxI6__halfEvmmmPKmPKT_PS3_E3shr[2048];

	ld.param.u64 	%rd23, [fast_max_f16_param_0];
	ld.param.u64 	%rd24, [fast_max_f16_param_1];
	ld.param.u64 	%rd20, [fast_max_f16_param_2];
	ld.param.u64 	%rd21, [fast_max_f16_param_3];
	ld.param.u64 	%rd25, [fast_max_f16_param_4];
	ld.param.u64 	%rd22, [fast_max_f16_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	mov.f32 	%f1, 0fFF800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs52, %f1;}

	// end inline asm
	shl.b32 	%r11, %r1, 1;
	mov.u32 	%r12, _ZZ8fast_maxI6__halfEvmmmPKmPKT_PS3_E3shr;
	add.s32 	%r2, %r12, %r11;
	st.shared.u16 	[%r2], %rs52;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB10_1;
	bra.uni 	$L__BB10_17;

$L__BB10_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r13, %ntid.x;
	cvt.u64.u32 	%rd4, %r13;
	@%p2 bra 	$L__BB10_12;

	cvta.to.global.u64 	%rd5, %rd21;

$L__BB10_3:
	mov.u16 	%rs2, %rs52;
	mov.u32 	%r27, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r28, %r27;

$L__BB10_4:
	not.b32 	%r16, %r27;
	cvt.u64.u32 	%rd30, %r16;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB10_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB10_7;

$L__BB10_6:
	cvt.u32.u64 	%r17, %rd10;
	cvt.u32.u64 	%r18, %rd8;
	div.u32 	%r19, %r18, %r17;
	mul.lo.s32 	%r20, %r19, %r17;
	sub.s32 	%r21, %r18, %r20;
	cvt.u64.u32 	%rd47, %r19;
	cvt.u64.u32 	%rd49, %r21;

$L__BB10_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r22, %rd39;
	add.s32 	%r28, %r28, %r22;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd40, %r27;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB10_4;

	mul.wide.u32 	%rd41, %r28, 2;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u16 	%rs3, [%rd42];
	// begin inline asm
	{set.nan.f16.f16 %rs17,%rs2,%rs2;
}
	// end inline asm
	setp.ne.s16 	%p5, %rs17, 0;
	mov.u16 	%rs52, 32767;
	@%p5 bra 	$L__BB10_11;

	// begin inline asm
	{set.nan.f16.f16 %rs21,%rs3,%rs3;
}
	// end inline asm
	setp.ne.s16 	%p6, %rs21, 0;
	@%p6 bra 	$L__BB10_11;

	// begin inline asm
	{  cvt.f32.f16 %f2, %rs2;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3, %rs3;}

	// end inline asm
	// begin inline asm
	{max.f32 %f4,%f2,%f3;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs52, %f4;}

	// end inline asm

$L__BB10_11:
	st.shared.u16 	[%r2], %rs52;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p7, %rd46, %rd2;
	@%p7 bra 	$L__BB10_3;
	bra.uni 	$L__BB10_17;

$L__BB10_12:
	ld.global.u16 	%rs7, [%rd1];
	// begin inline asm
	{set.nan.f16.f16 %rs32,%rs7,%rs7;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f9, %rs7;}

	// end inline asm

$L__BB10_13:
	mov.u16 	%rs8, %rs52;
	// begin inline asm
	{set.nan.f16.f16 %rs28,%rs8,%rs8;
}
	// end inline asm
	setp.ne.s16 	%p8, %rs28, 0;
	mov.u16 	%rs52, 32767;
	@%p8 bra 	$L__BB10_16;

	setp.ne.s16 	%p9, %rs32, 0;
	@%p9 bra 	$L__BB10_16;

	// begin inline asm
	{  cvt.f32.f16 %f8, %rs8;}

	// end inline asm
	// begin inline asm
	{max.f32 %f10,%f8,%f9;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs52, %f10;}

	// end inline asm

$L__BB10_16:
	st.shared.u16 	[%r2], %rs52;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p10, %rd46, %rd2;
	@%p10 bra 	$L__BB10_13;

$L__BB10_17:
	mov.u32 	%r23, %ntid.x;
	shr.u32 	%r29, %r23, 1;
	setp.eq.s32 	%p11, %r29, 0;
	@%p11 bra 	$L__BB10_24;

$L__BB10_18:
	bar.sync 	0;
	setp.ge.u32 	%p12, %r1, %r29;
	@%p12 bra 	$L__BB10_23;

	ld.shared.u16 	%rs12, [%r2];
	shl.b32 	%r24, %r29, 1;
	add.s32 	%r25, %r2, %r24;
	ld.shared.u16 	%rs13, [%r25];
	// begin inline asm
	{set.nan.f16.f16 %rs39,%rs12,%rs12;
}
	// end inline asm
	setp.ne.s16 	%p13, %rs39, 0;
	mov.u16 	%rs55, 32767;
	@%p13 bra 	$L__BB10_22;

	// begin inline asm
	{set.nan.f16.f16 %rs43,%rs13,%rs13;
}
	// end inline asm
	setp.ne.s16 	%p14, %rs43, 0;
	@%p14 bra 	$L__BB10_22;

	// begin inline asm
	{  cvt.f32.f16 %f14, %rs12;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f15, %rs13;}

	// end inline asm
	// begin inline asm
	{max.f32 %f16,%f14,%f15;
}
	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs55, %f16;}

	// end inline asm

$L__BB10_22:
	st.shared.u16 	[%r2], %rs55;

$L__BB10_23:
	shr.u32 	%r29, %r29, 1;
	setp.ne.s32 	%p15, %r29, 0;
	@%p15 bra 	$L__BB10_18;

$L__BB10_24:
	setp.ne.s32 	%p16, %r1, 0;
	@%p16 bra 	$L__BB10_26;

	ld.shared.u16 	%rs50, [_ZZ8fast_maxI6__halfEvmmmPKmPKT_PS3_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r10, 2;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.u16 	[%rd45], %rs50;

$L__BB10_26:
	ret;

}
	// .globl	fast_sum_f16
.visible .entry fast_sum_f16(
	.param .u64 fast_sum_f16_param_0,
	.param .u64 fast_sum_f16_param_1,
	.param .u64 fast_sum_f16_param_2,
	.param .u64 fast_sum_f16_param_3,
	.param .u64 fast_sum_f16_param_4,
	.param .u64 fast_sum_f16_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<20>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 2 .b8 _ZZ8fast_sumI6__halfEvmmmPKmPKT_PS3_E3shr[2048];

	ld.param.u64 	%rd23, [fast_sum_f16_param_0];
	ld.param.u64 	%rd24, [fast_sum_f16_param_1];
	ld.param.u64 	%rd20, [fast_sum_f16_param_2];
	ld.param.u64 	%rd21, [fast_sum_f16_param_3];
	ld.param.u64 	%rd25, [fast_sum_f16_param_4];
	ld.param.u64 	%rd22, [fast_sum_f16_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd27, %r11;
	mov.u32 	%r10, 0;
	// begin inline asm
	cvt.rn.f16.s32 %rs18, %r10;
	// end inline asm
	shl.b32 	%r12, %r1, 1;
	mov.u32 	%r13, _ZZ8fast_sumI6__halfEvmmmPKmPKT_PS3_E3shr;
	add.s32 	%r2, %r13, %r12;
	st.shared.u16 	[%r2], %rs18;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB11_1;
	bra.uni 	$L__BB11_11;

$L__BB11_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r14, %ntid.x;
	cvt.u64.u32 	%rd4, %r14;
	@%p2 bra 	$L__BB11_9;

	cvta.to.global.u64 	%rd5, %rd21;

$L__BB11_3:
	mov.u32 	%r28, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r29, %r28;

$L__BB11_4:
	not.b32 	%r17, %r28;
	cvt.u64.u32 	%rd30, %r17;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB11_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB11_7;

$L__BB11_6:
	cvt.u32.u64 	%r18, %rd10;
	cvt.u32.u64 	%r19, %rd8;
	div.u32 	%r20, %r19, %r18;
	mul.lo.s32 	%r21, %r20, %r18;
	sub.s32 	%r22, %r19, %r21;
	cvt.u64.u32 	%rd47, %r20;
	cvt.u64.u32 	%rd49, %r22;

$L__BB11_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r23, %rd39;
	add.s32 	%r29, %r29, %r23;
	add.s32 	%r28, %r28, 1;
	cvt.u64.u32 	%rd40, %r28;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB11_4;

	mul.wide.u32 	%rd41, %r29, 2;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u16 	%rs10, [%rd42];
	// begin inline asm
	{add.f16 %rs18,%rs18,%rs10;
}
	// end inline asm
	st.shared.u16 	[%r2], %rs18;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB11_3;
	bra.uni 	$L__BB11_11;

$L__BB11_9:
	ld.global.u16 	%rs4, [%rd1];

$L__BB11_10:
	// begin inline asm
	{add.f16 %rs18,%rs18,%rs4;
}
	// end inline asm
	st.shared.u16 	[%r2], %rs18;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB11_10;

$L__BB11_11:
	mov.u32 	%r24, %ntid.x;
	shr.u32 	%r30, %r24, 1;
	setp.eq.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB11_15;

$L__BB11_12:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r30;
	@%p8 bra 	$L__BB11_14;

	ld.shared.u16 	%rs15, [%r2];
	shl.b32 	%r25, %r30, 1;
	add.s32 	%r26, %r2, %r25;
	ld.shared.u16 	%rs16, [%r26];
	// begin inline asm
	{add.f16 %rs14,%rs15,%rs16;
}
	// end inline asm
	st.shared.u16 	[%r2], %rs14;

$L__BB11_14:
	shr.u32 	%r30, %r30, 1;
	setp.ne.s32 	%p9, %r30, 0;
	@%p9 bra 	$L__BB11_12;

$L__BB11_15:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB11_17;

	ld.shared.u16 	%rs17, [_ZZ8fast_sumI6__halfEvmmmPKmPKT_PS3_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r11, 2;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.u16 	[%rd45], %rs17;

$L__BB11_17:
	ret;

}
	// .globl	sum_f32
.visible .entry sum_f32(
	.param .u64 sum_f32_param_0,
	.param .u64 sum_f32_param_1,
	.param .u64 sum_f32_param_2,
	.param .u64 sum_f32_param_3,
	.param .u64 sum_f32_param_4,
	.param .u64 sum_f32_param_5
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<80>;
	.reg .b64 	%rd<175>;


	ld.param.u64 	%rd75, [sum_f32_param_0];
	ld.param.u64 	%rd76, [sum_f32_param_1];
	ld.param.u64 	%rd77, [sum_f32_param_2];
	ld.param.u64 	%rd78, [sum_f32_param_3];
	ld.param.u64 	%rd79, [sum_f32_param_4];
	ld.param.u64 	%rd80, [sum_f32_param_5];
	cvta.to.global.u64 	%rd1, %rd80;
	cvta.to.global.u64 	%rd2, %rd79;
	cvta.to.global.u64 	%rd3, %rd78;
	shl.b64 	%rd4, %rd76, 1;
	add.s64 	%rd5, %rd4, %rd77;
	setp.eq.s64 	%p3, %rd76, 0;
	mov.pred 	%p2, 0;
	mov.pred 	%p30, %p2;
	@%p3 bra 	$L__BB12_5;

	mov.u64 	%rd153, 1;
	mov.u32 	%r69, 0;

$L__BB12_2:
	not.b32 	%r28, %r69;
	cvt.u64.u32 	%rd82, %r28;
	add.s64 	%rd83, %rd82, %rd76;
	shl.b64 	%rd84, %rd83, 3;
	and.b64  	%rd85, %rd84, 34359738360;
	add.s64 	%rd7, %rd3, %rd85;
	ld.global.u64 	%rd8, [%rd7];
	setp.lt.u64 	%p4, %rd8, 2;
	@%p4 bra 	$L__BB12_4;

	shl.b64 	%rd86, %rd76, 3;
	add.s64 	%rd87, %rd7, %rd86;
	ld.global.u64 	%rd88, [%rd87];
	setp.ne.s64 	%p6, %rd153, %rd88;
	mov.pred 	%p30, -1;
	@%p6 bra 	$L__BB12_5;

$L__BB12_4:
	mul.lo.s64 	%rd153, %rd8, %rd153;
	add.s32 	%r69, %r69, 1;
	cvt.u64.u32 	%rd89, %r69;
	setp.lt.u64 	%p8, %rd89, %rd76;
	mov.pred 	%p30, %p2;
	@%p8 bra 	$L__BB12_2;

$L__BB12_5:
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r4, %r29, %r3, %r30;
	cvt.u64.u32 	%rd10, %r4;
	@%p30 bra 	$L__BB12_18;
	bra.uni 	$L__BB12_6;

$L__BB12_18:
	setp.ge.u64 	%p16, %rd10, %rd75;
	@%p16 bra 	$L__BB12_43;

	mov.u32 	%r41, %nctaid.x;
	mul.lo.s32 	%r12, %r3, %r41;
	@%p3 bra 	$L__BB12_34;

$L__BB12_20:
	mov.u32 	%r74, 0;
	mov.u32 	%r75, %r4;
	mov.u32 	%r76, %r74;

$L__BB12_21:
	not.b32 	%r44, %r74;
	cvt.u64.u32 	%rd110, %r44;
	add.s64 	%rd111, %rd110, %rd76;
	cvt.u64.u32 	%rd31, %r75;
	shl.b64 	%rd112, %rd111, 3;
	and.b64  	%rd113, %rd112, 34359738360;
	add.s64 	%rd32, %rd3, %rd113;
	ld.global.u64 	%rd33, [%rd32];
	and.b64  	%rd114, %rd33, -4294967296;
	setp.eq.s64 	%p18, %rd114, 0;
	@%p18 bra 	$L__BB12_23;

	div.u64 	%rd162, %rd31, %rd33;
	mul.lo.s64 	%rd115, %rd162, %rd33;
	sub.s64 	%rd163, %rd31, %rd115;
	bra.uni 	$L__BB12_24;

$L__BB12_23:
	cvt.u32.u64 	%r45, %rd33;
	cvt.u32.u64 	%r46, %rd31;
	div.u32 	%r47, %r46, %r45;
	mul.lo.s32 	%r48, %r47, %r45;
	sub.s32 	%r49, %r46, %r48;
	cvt.u64.u32 	%rd162, %r47;
	cvt.u64.u32 	%rd163, %r49;

$L__BB12_24:
	shl.b64 	%rd116, %rd76, 3;
	add.s64 	%rd117, %rd32, %rd116;
	ld.global.u64 	%rd118, [%rd117];
	mul.lo.s64 	%rd119, %rd118, %rd163;
	cvt.u32.u64 	%r50, %rd119;
	add.s32 	%r76, %r76, %r50;
	cvt.u32.u64 	%r75, %rd162;
	add.s32 	%r74, %r74, 1;
	cvt.u64.u32 	%rd120, %r74;
	setp.lt.u64 	%p19, %rd120, %rd76;
	@%p19 bra 	$L__BB12_21;

	setp.eq.s64 	%p20, %rd77, 0;
	mov.u32 	%r77, 0;
	mov.u64 	%rd164, 0;
	@%p20 bra 	$L__BB12_33;

$L__BB12_26:
	add.s64 	%rd122, %rd164, %rd5;
	shl.b64 	%rd123, %rd122, 3;
	add.s64 	%rd124, %rd3, %rd123;
	ld.global.u64 	%rd42, [%rd124];
	or.b64  	%rd125, %rd10, %rd42;
	and.b64  	%rd126, %rd125, -4294967296;
	setp.eq.s64 	%p21, %rd126, 0;
	@%p21 bra 	$L__BB12_28;

	div.u64 	%rd166, %rd10, %rd42;
	mul.lo.s64 	%rd127, %rd166, %rd42;
	sub.s64 	%rd167, %rd10, %rd127;
	bra.uni 	$L__BB12_29;

$L__BB12_28:
	cvt.u32.u64 	%r52, %rd42;
	cvt.u32.u64 	%r53, %rd10;
	div.u32 	%r54, %r53, %r52;
	mul.lo.s32 	%r55, %r54, %r52;
	sub.s32 	%r56, %r53, %r55;
	cvt.u64.u32 	%rd166, %r54;
	cvt.u64.u32 	%rd167, %r56;

$L__BB12_29:
	add.s64 	%rd128, %rd164, %rd4;
	shl.b64 	%rd129, %rd128, 3;
	add.s64 	%rd130, %rd3, %rd129;
	ld.global.u64 	%rd49, [%rd130];
	or.b64  	%rd131, %rd166, %rd49;
	and.b64  	%rd132, %rd131, -4294967296;
	setp.eq.s64 	%p22, %rd132, 0;
	@%p22 bra 	$L__BB12_31;

	div.u64 	%rd168, %rd166, %rd49;
	bra.uni 	$L__BB12_32;

$L__BB12_31:
	cvt.u32.u64 	%r57, %rd49;
	cvt.u32.u64 	%r58, %rd166;
	div.u32 	%r59, %r58, %r57;
	cvt.u64.u32 	%rd168, %r59;

$L__BB12_32:
	mul.lo.s64 	%rd133, %rd168, %rd42;
	add.s64 	%rd10, %rd133, %rd167;
	add.s32 	%r77, %r77, 1;
	cvt.u64.u32 	%rd164, %r77;
	setp.lt.u64 	%p23, %rd164, %rd77;
	@%p23 bra 	$L__BB12_26;

$L__BB12_33:
	mul.wide.u32 	%rd134, %r76, 4;
	add.s64 	%rd135, %rd2, %rd134;
	ld.global.f32 	%f5, [%rd135];
	shl.b64 	%rd136, %rd10, 2;
	add.s64 	%rd137, %rd1, %rd136;
	atom.global.add.f32 	%f6, [%rd137], %f5;
	add.s32 	%r4, %r4, %r12;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p24, %rd10, %rd75;
	@%p24 bra 	$L__BB12_20;
	bra.uni 	$L__BB12_43;

$L__BB12_34:
	setp.eq.s64 	%p25, %rd77, 0;
	mov.u32 	%r79, 0;
	mov.u64 	%rd170, 0;
	@%p25 bra 	$L__BB12_42;

$L__BB12_35:
	add.s64 	%rd139, %rd170, %rd5;
	shl.b64 	%rd140, %rd139, 3;
	add.s64 	%rd141, %rd3, %rd140;
	ld.global.u64 	%rd60, [%rd141];
	or.b64  	%rd142, %rd10, %rd60;
	and.b64  	%rd143, %rd142, -4294967296;
	setp.eq.s64 	%p26, %rd143, 0;
	@%p26 bra 	$L__BB12_37;

	div.u64 	%rd172, %rd10, %rd60;
	mul.lo.s64 	%rd144, %rd172, %rd60;
	sub.s64 	%rd173, %rd10, %rd144;
	bra.uni 	$L__BB12_38;

$L__BB12_37:
	cvt.u32.u64 	%r61, %rd60;
	cvt.u32.u64 	%r62, %rd10;
	div.u32 	%r63, %r62, %r61;
	mul.lo.s32 	%r64, %r63, %r61;
	sub.s32 	%r65, %r62, %r64;
	cvt.u64.u32 	%rd172, %r63;
	cvt.u64.u32 	%rd173, %r65;

$L__BB12_38:
	add.s64 	%rd145, %rd170, %rd4;
	shl.b64 	%rd146, %rd145, 3;
	add.s64 	%rd147, %rd3, %rd146;
	ld.global.u64 	%rd67, [%rd147];
	or.b64  	%rd148, %rd172, %rd67;
	and.b64  	%rd149, %rd148, -4294967296;
	setp.eq.s64 	%p27, %rd149, 0;
	@%p27 bra 	$L__BB12_40;

	div.u64 	%rd174, %rd172, %rd67;
	bra.uni 	$L__BB12_41;

$L__BB12_40:
	cvt.u32.u64 	%r66, %rd67;
	cvt.u32.u64 	%r67, %rd172;
	div.u32 	%r68, %r67, %r66;
	cvt.u64.u32 	%rd174, %r68;

$L__BB12_41:
	mul.lo.s64 	%rd150, %rd174, %rd60;
	add.s64 	%rd10, %rd150, %rd173;
	add.s32 	%r79, %r79, 1;
	cvt.u64.u32 	%rd170, %r79;
	setp.lt.u64 	%p28, %rd170, %rd77;
	@%p28 bra 	$L__BB12_35;

$L__BB12_42:
	ld.global.f32 	%f7, [%rd2];
	shl.b64 	%rd151, %rd10, 2;
	add.s64 	%rd152, %rd1, %rd151;
	atom.global.add.f32 	%f8, [%rd152], %f7;
	add.s32 	%r4, %r4, %r12;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p29, %rd10, %rd75;
	@%p29 bra 	$L__BB12_34;
	bra.uni 	$L__BB12_43;

$L__BB12_6:
	setp.ge.u64 	%p9, %rd10, %rd75;
	@%p9 bra 	$L__BB12_43;

	setp.eq.s64 	%p10, %rd77, 0;
	mov.u32 	%r31, %nctaid.x;
	mul.lo.s32 	%r5, %r3, %r31;
	@%p10 bra 	$L__BB12_17;

$L__BB12_8:
	mov.u32 	%r71, 0;
	mov.u64 	%rd155, 0;
	mov.u64 	%rd156, %rd10;

$L__BB12_9:
	add.s64 	%rd91, %rd155, %rd5;
	shl.b64 	%rd92, %rd91, 3;
	add.s64 	%rd93, %rd3, %rd92;
	ld.global.u64 	%rd14, [%rd93];
	or.b64  	%rd94, %rd156, %rd14;
	and.b64  	%rd95, %rd94, -4294967296;
	setp.eq.s64 	%p11, %rd95, 0;
	@%p11 bra 	$L__BB12_11;

	div.u64 	%rd157, %rd156, %rd14;
	mul.lo.s64 	%rd96, %rd157, %rd14;
	sub.s64 	%rd158, %rd156, %rd96;
	bra.uni 	$L__BB12_12;

$L__BB12_11:
	cvt.u32.u64 	%r33, %rd14;
	cvt.u32.u64 	%r34, %rd156;
	div.u32 	%r35, %r34, %r33;
	mul.lo.s32 	%r36, %r35, %r33;
	sub.s32 	%r37, %r34, %r36;
	cvt.u64.u32 	%rd157, %r35;
	cvt.u64.u32 	%rd158, %r37;

$L__BB12_12:
	add.s64 	%rd97, %rd155, %rd4;
	shl.b64 	%rd98, %rd97, 3;
	add.s64 	%rd99, %rd3, %rd98;
	ld.global.u64 	%rd21, [%rd99];
	or.b64  	%rd100, %rd157, %rd21;
	and.b64  	%rd101, %rd100, -4294967296;
	setp.eq.s64 	%p12, %rd101, 0;
	@%p12 bra 	$L__BB12_14;

	div.u64 	%rd159, %rd157, %rd21;
	bra.uni 	$L__BB12_15;

$L__BB12_14:
	cvt.u32.u64 	%r38, %rd21;
	cvt.u32.u64 	%r39, %rd157;
	div.u32 	%r40, %r39, %r38;
	cvt.u64.u32 	%rd159, %r40;

$L__BB12_15:
	mul.lo.s64 	%rd102, %rd159, %rd14;
	add.s64 	%rd156, %rd102, %rd158;
	add.s32 	%r71, %r71, 1;
	cvt.u64.u32 	%rd155, %r71;
	setp.lt.u64 	%p13, %rd155, %rd77;
	@%p13 bra 	$L__BB12_9;

	shl.b64 	%rd103, %rd156, 2;
	add.s64 	%rd104, %rd1, %rd103;
	shl.b64 	%rd105, %rd10, 2;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.f32 	%f1, [%rd106];
	atom.global.add.f32 	%f2, [%rd104], %f1;
	add.s32 	%r4, %r4, %r5;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p14, %rd10, %rd75;
	@%p14 bra 	$L__BB12_8;
	bra.uni 	$L__BB12_43;

$L__BB12_17:
	shl.b64 	%rd107, %rd10, 2;
	add.s64 	%rd108, %rd2, %rd107;
	ld.global.f32 	%f3, [%rd108];
	add.s64 	%rd109, %rd1, %rd107;
	atom.global.add.f32 	%f4, [%rd109], %f3;
	add.s32 	%r4, %r4, %r5;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p15, %rd10, %rd75;
	@%p15 bra 	$L__BB12_17;

$L__BB12_43:
	ret;

}
	// .globl	sum_f64
.visible .entry sum_f64(
	.param .u64 sum_f64_param_0,
	.param .u64 sum_f64_param_1,
	.param .u64 sum_f64_param_2,
	.param .u64 sum_f64_param_3,
	.param .u64 sum_f64_param_4,
	.param .u64 sum_f64_param_5
)
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<80>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<175>;


	ld.param.u64 	%rd75, [sum_f64_param_0];
	ld.param.u64 	%rd76, [sum_f64_param_1];
	ld.param.u64 	%rd77, [sum_f64_param_2];
	ld.param.u64 	%rd78, [sum_f64_param_3];
	ld.param.u64 	%rd79, [sum_f64_param_4];
	ld.param.u64 	%rd80, [sum_f64_param_5];
	cvta.to.global.u64 	%rd1, %rd80;
	cvta.to.global.u64 	%rd2, %rd79;
	cvta.to.global.u64 	%rd3, %rd78;
	shl.b64 	%rd4, %rd76, 1;
	add.s64 	%rd5, %rd4, %rd77;
	setp.eq.s64 	%p3, %rd76, 0;
	mov.pred 	%p2, 0;
	mov.pred 	%p30, %p2;
	@%p3 bra 	$L__BB13_5;

	mov.u64 	%rd153, 1;
	mov.u32 	%r69, 0;

$L__BB13_2:
	not.b32 	%r28, %r69;
	cvt.u64.u32 	%rd82, %r28;
	add.s64 	%rd83, %rd82, %rd76;
	shl.b64 	%rd84, %rd83, 3;
	and.b64  	%rd85, %rd84, 34359738360;
	add.s64 	%rd7, %rd3, %rd85;
	ld.global.u64 	%rd8, [%rd7];
	setp.lt.u64 	%p4, %rd8, 2;
	@%p4 bra 	$L__BB13_4;

	shl.b64 	%rd86, %rd76, 3;
	add.s64 	%rd87, %rd7, %rd86;
	ld.global.u64 	%rd88, [%rd87];
	setp.ne.s64 	%p6, %rd153, %rd88;
	mov.pred 	%p30, -1;
	@%p6 bra 	$L__BB13_5;

$L__BB13_4:
	mul.lo.s64 	%rd153, %rd8, %rd153;
	add.s32 	%r69, %r69, 1;
	cvt.u64.u32 	%rd89, %r69;
	setp.lt.u64 	%p8, %rd89, %rd76;
	mov.pred 	%p30, %p2;
	@%p8 bra 	$L__BB13_2;

$L__BB13_5:
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r4, %r29, %r3, %r30;
	cvt.u64.u32 	%rd10, %r4;
	@%p30 bra 	$L__BB13_18;
	bra.uni 	$L__BB13_6;

$L__BB13_18:
	setp.ge.u64 	%p16, %rd10, %rd75;
	@%p16 bra 	$L__BB13_43;

	mov.u32 	%r41, %nctaid.x;
	mul.lo.s32 	%r12, %r3, %r41;
	@%p3 bra 	$L__BB13_34;

$L__BB13_20:
	mov.u32 	%r74, 0;
	mov.u32 	%r75, %r4;
	mov.u32 	%r76, %r74;

$L__BB13_21:
	not.b32 	%r44, %r74;
	cvt.u64.u32 	%rd110, %r44;
	add.s64 	%rd111, %rd110, %rd76;
	cvt.u64.u32 	%rd31, %r75;
	shl.b64 	%rd112, %rd111, 3;
	and.b64  	%rd113, %rd112, 34359738360;
	add.s64 	%rd32, %rd3, %rd113;
	ld.global.u64 	%rd33, [%rd32];
	and.b64  	%rd114, %rd33, -4294967296;
	setp.eq.s64 	%p18, %rd114, 0;
	@%p18 bra 	$L__BB13_23;

	div.u64 	%rd162, %rd31, %rd33;
	mul.lo.s64 	%rd115, %rd162, %rd33;
	sub.s64 	%rd163, %rd31, %rd115;
	bra.uni 	$L__BB13_24;

$L__BB13_23:
	cvt.u32.u64 	%r45, %rd33;
	cvt.u32.u64 	%r46, %rd31;
	div.u32 	%r47, %r46, %r45;
	mul.lo.s32 	%r48, %r47, %r45;
	sub.s32 	%r49, %r46, %r48;
	cvt.u64.u32 	%rd162, %r47;
	cvt.u64.u32 	%rd163, %r49;

$L__BB13_24:
	shl.b64 	%rd116, %rd76, 3;
	add.s64 	%rd117, %rd32, %rd116;
	ld.global.u64 	%rd118, [%rd117];
	mul.lo.s64 	%rd119, %rd118, %rd163;
	cvt.u32.u64 	%r50, %rd119;
	add.s32 	%r76, %r76, %r50;
	cvt.u32.u64 	%r75, %rd162;
	add.s32 	%r74, %r74, 1;
	cvt.u64.u32 	%rd120, %r74;
	setp.lt.u64 	%p19, %rd120, %rd76;
	@%p19 bra 	$L__BB13_21;

	setp.eq.s64 	%p20, %rd77, 0;
	mov.u32 	%r77, 0;
	mov.u64 	%rd164, 0;
	@%p20 bra 	$L__BB13_33;

$L__BB13_26:
	add.s64 	%rd122, %rd164, %rd5;
	shl.b64 	%rd123, %rd122, 3;
	add.s64 	%rd124, %rd3, %rd123;
	ld.global.u64 	%rd42, [%rd124];
	or.b64  	%rd125, %rd10, %rd42;
	and.b64  	%rd126, %rd125, -4294967296;
	setp.eq.s64 	%p21, %rd126, 0;
	@%p21 bra 	$L__BB13_28;

	div.u64 	%rd166, %rd10, %rd42;
	mul.lo.s64 	%rd127, %rd166, %rd42;
	sub.s64 	%rd167, %rd10, %rd127;
	bra.uni 	$L__BB13_29;

$L__BB13_28:
	cvt.u32.u64 	%r52, %rd42;
	cvt.u32.u64 	%r53, %rd10;
	div.u32 	%r54, %r53, %r52;
	mul.lo.s32 	%r55, %r54, %r52;
	sub.s32 	%r56, %r53, %r55;
	cvt.u64.u32 	%rd166, %r54;
	cvt.u64.u32 	%rd167, %r56;

$L__BB13_29:
	add.s64 	%rd128, %rd164, %rd4;
	shl.b64 	%rd129, %rd128, 3;
	add.s64 	%rd130, %rd3, %rd129;
	ld.global.u64 	%rd49, [%rd130];
	or.b64  	%rd131, %rd166, %rd49;
	and.b64  	%rd132, %rd131, -4294967296;
	setp.eq.s64 	%p22, %rd132, 0;
	@%p22 bra 	$L__BB13_31;

	div.u64 	%rd168, %rd166, %rd49;
	bra.uni 	$L__BB13_32;

$L__BB13_31:
	cvt.u32.u64 	%r57, %rd49;
	cvt.u32.u64 	%r58, %rd166;
	div.u32 	%r59, %r58, %r57;
	cvt.u64.u32 	%rd168, %r59;

$L__BB13_32:
	mul.lo.s64 	%rd133, %rd168, %rd42;
	add.s64 	%rd10, %rd133, %rd167;
	add.s32 	%r77, %r77, 1;
	cvt.u64.u32 	%rd164, %r77;
	setp.lt.u64 	%p23, %rd164, %rd77;
	@%p23 bra 	$L__BB13_26;

$L__BB13_33:
	mul.wide.u32 	%rd134, %r76, 8;
	add.s64 	%rd135, %rd2, %rd134;
	ld.global.f64 	%fd5, [%rd135];
	shl.b64 	%rd136, %rd10, 3;
	add.s64 	%rd137, %rd1, %rd136;
	atom.global.add.f64 	%fd6, [%rd137], %fd5;
	add.s32 	%r4, %r4, %r12;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p24, %rd10, %rd75;
	@%p24 bra 	$L__BB13_20;
	bra.uni 	$L__BB13_43;

$L__BB13_34:
	setp.eq.s64 	%p25, %rd77, 0;
	mov.u32 	%r79, 0;
	mov.u64 	%rd170, 0;
	@%p25 bra 	$L__BB13_42;

$L__BB13_35:
	add.s64 	%rd139, %rd170, %rd5;
	shl.b64 	%rd140, %rd139, 3;
	add.s64 	%rd141, %rd3, %rd140;
	ld.global.u64 	%rd60, [%rd141];
	or.b64  	%rd142, %rd10, %rd60;
	and.b64  	%rd143, %rd142, -4294967296;
	setp.eq.s64 	%p26, %rd143, 0;
	@%p26 bra 	$L__BB13_37;

	div.u64 	%rd172, %rd10, %rd60;
	mul.lo.s64 	%rd144, %rd172, %rd60;
	sub.s64 	%rd173, %rd10, %rd144;
	bra.uni 	$L__BB13_38;

$L__BB13_37:
	cvt.u32.u64 	%r61, %rd60;
	cvt.u32.u64 	%r62, %rd10;
	div.u32 	%r63, %r62, %r61;
	mul.lo.s32 	%r64, %r63, %r61;
	sub.s32 	%r65, %r62, %r64;
	cvt.u64.u32 	%rd172, %r63;
	cvt.u64.u32 	%rd173, %r65;

$L__BB13_38:
	add.s64 	%rd145, %rd170, %rd4;
	shl.b64 	%rd146, %rd145, 3;
	add.s64 	%rd147, %rd3, %rd146;
	ld.global.u64 	%rd67, [%rd147];
	or.b64  	%rd148, %rd172, %rd67;
	and.b64  	%rd149, %rd148, -4294967296;
	setp.eq.s64 	%p27, %rd149, 0;
	@%p27 bra 	$L__BB13_40;

	div.u64 	%rd174, %rd172, %rd67;
	bra.uni 	$L__BB13_41;

$L__BB13_40:
	cvt.u32.u64 	%r66, %rd67;
	cvt.u32.u64 	%r67, %rd172;
	div.u32 	%r68, %r67, %r66;
	cvt.u64.u32 	%rd174, %r68;

$L__BB13_41:
	mul.lo.s64 	%rd150, %rd174, %rd60;
	add.s64 	%rd10, %rd150, %rd173;
	add.s32 	%r79, %r79, 1;
	cvt.u64.u32 	%rd170, %r79;
	setp.lt.u64 	%p28, %rd170, %rd77;
	@%p28 bra 	$L__BB13_35;

$L__BB13_42:
	ld.global.f64 	%fd7, [%rd2];
	shl.b64 	%rd151, %rd10, 3;
	add.s64 	%rd152, %rd1, %rd151;
	atom.global.add.f64 	%fd8, [%rd152], %fd7;
	add.s32 	%r4, %r4, %r12;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p29, %rd10, %rd75;
	@%p29 bra 	$L__BB13_34;
	bra.uni 	$L__BB13_43;

$L__BB13_6:
	setp.ge.u64 	%p9, %rd10, %rd75;
	@%p9 bra 	$L__BB13_43;

	setp.eq.s64 	%p10, %rd77, 0;
	mov.u32 	%r31, %nctaid.x;
	mul.lo.s32 	%r5, %r3, %r31;
	@%p10 bra 	$L__BB13_17;

$L__BB13_8:
	mov.u32 	%r71, 0;
	mov.u64 	%rd155, 0;
	mov.u64 	%rd156, %rd10;

$L__BB13_9:
	add.s64 	%rd91, %rd155, %rd5;
	shl.b64 	%rd92, %rd91, 3;
	add.s64 	%rd93, %rd3, %rd92;
	ld.global.u64 	%rd14, [%rd93];
	or.b64  	%rd94, %rd156, %rd14;
	and.b64  	%rd95, %rd94, -4294967296;
	setp.eq.s64 	%p11, %rd95, 0;
	@%p11 bra 	$L__BB13_11;

	div.u64 	%rd157, %rd156, %rd14;
	mul.lo.s64 	%rd96, %rd157, %rd14;
	sub.s64 	%rd158, %rd156, %rd96;
	bra.uni 	$L__BB13_12;

$L__BB13_11:
	cvt.u32.u64 	%r33, %rd14;
	cvt.u32.u64 	%r34, %rd156;
	div.u32 	%r35, %r34, %r33;
	mul.lo.s32 	%r36, %r35, %r33;
	sub.s32 	%r37, %r34, %r36;
	cvt.u64.u32 	%rd157, %r35;
	cvt.u64.u32 	%rd158, %r37;

$L__BB13_12:
	add.s64 	%rd97, %rd155, %rd4;
	shl.b64 	%rd98, %rd97, 3;
	add.s64 	%rd99, %rd3, %rd98;
	ld.global.u64 	%rd21, [%rd99];
	or.b64  	%rd100, %rd157, %rd21;
	and.b64  	%rd101, %rd100, -4294967296;
	setp.eq.s64 	%p12, %rd101, 0;
	@%p12 bra 	$L__BB13_14;

	div.u64 	%rd159, %rd157, %rd21;
	bra.uni 	$L__BB13_15;

$L__BB13_14:
	cvt.u32.u64 	%r38, %rd21;
	cvt.u32.u64 	%r39, %rd157;
	div.u32 	%r40, %r39, %r38;
	cvt.u64.u32 	%rd159, %r40;

$L__BB13_15:
	mul.lo.s64 	%rd102, %rd159, %rd14;
	add.s64 	%rd156, %rd102, %rd158;
	add.s32 	%r71, %r71, 1;
	cvt.u64.u32 	%rd155, %r71;
	setp.lt.u64 	%p13, %rd155, %rd77;
	@%p13 bra 	$L__BB13_9;

	shl.b64 	%rd103, %rd156, 3;
	add.s64 	%rd104, %rd1, %rd103;
	shl.b64 	%rd105, %rd10, 3;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.f64 	%fd1, [%rd106];
	atom.global.add.f64 	%fd2, [%rd104], %fd1;
	add.s32 	%r4, %r4, %r5;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p14, %rd10, %rd75;
	@%p14 bra 	$L__BB13_8;
	bra.uni 	$L__BB13_43;

$L__BB13_17:
	shl.b64 	%rd107, %rd10, 3;
	add.s64 	%rd108, %rd2, %rd107;
	ld.global.f64 	%fd3, [%rd108];
	add.s64 	%rd109, %rd1, %rd107;
	atom.global.add.f64 	%fd4, [%rd109], %fd3;
	add.s32 	%r4, %r4, %r5;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p15, %rd10, %rd75;
	@%p15 bra 	$L__BB13_17;

$L__BB13_43:
	ret;

}
	// .globl	sum_u32
.visible .entry sum_u32(
	.param .u64 sum_u32_param_0,
	.param .u64 sum_u32_param_1,
	.param .u64 sum_u32_param_2,
	.param .u64 sum_u32_param_3,
	.param .u64 sum_u32_param_4,
	.param .u64 sum_u32_param_5
)
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<88>;
	.reg .b64 	%rd<175>;


	ld.param.u64 	%rd75, [sum_u32_param_0];
	ld.param.u64 	%rd76, [sum_u32_param_1];
	ld.param.u64 	%rd77, [sum_u32_param_2];
	ld.param.u64 	%rd78, [sum_u32_param_3];
	ld.param.u64 	%rd79, [sum_u32_param_4];
	ld.param.u64 	%rd80, [sum_u32_param_5];
	cvta.to.global.u64 	%rd1, %rd80;
	cvta.to.global.u64 	%rd2, %rd79;
	cvta.to.global.u64 	%rd3, %rd78;
	shl.b64 	%rd4, %rd76, 1;
	add.s64 	%rd5, %rd4, %rd77;
	setp.eq.s64 	%p3, %rd76, 0;
	mov.pred 	%p2, 0;
	mov.pred 	%p30, %p2;
	@%p3 bra 	$L__BB14_5;

	mov.u64 	%rd153, 1;
	mov.u32 	%r77, 0;

$L__BB14_2:
	not.b32 	%r28, %r77;
	cvt.u64.u32 	%rd82, %r28;
	add.s64 	%rd83, %rd82, %rd76;
	shl.b64 	%rd84, %rd83, 3;
	and.b64  	%rd85, %rd84, 34359738360;
	add.s64 	%rd7, %rd3, %rd85;
	ld.global.u64 	%rd8, [%rd7];
	setp.lt.u64 	%p4, %rd8, 2;
	@%p4 bra 	$L__BB14_4;

	shl.b64 	%rd86, %rd76, 3;
	add.s64 	%rd87, %rd7, %rd86;
	ld.global.u64 	%rd88, [%rd87];
	setp.ne.s64 	%p6, %rd153, %rd88;
	mov.pred 	%p30, -1;
	@%p6 bra 	$L__BB14_5;

$L__BB14_4:
	mul.lo.s64 	%rd153, %rd8, %rd153;
	add.s32 	%r77, %r77, 1;
	cvt.u64.u32 	%rd89, %r77;
	setp.lt.u64 	%p8, %rd89, %rd76;
	mov.pred 	%p30, %p2;
	@%p8 bra 	$L__BB14_2;

$L__BB14_5:
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r4, %r29, %r3, %r30;
	cvt.u64.u32 	%rd10, %r4;
	@%p30 bra 	$L__BB14_18;
	bra.uni 	$L__BB14_6;

$L__BB14_18:
	setp.ge.u64 	%p16, %rd10, %rd75;
	@%p16 bra 	$L__BB14_43;

	mov.u32 	%r45, %nctaid.x;
	mul.lo.s32 	%r12, %r3, %r45;
	@%p3 bra 	$L__BB14_34;

$L__BB14_20:
	mov.u32 	%r82, 0;
	mov.u32 	%r83, %r4;
	mov.u32 	%r84, %r82;

$L__BB14_21:
	not.b32 	%r48, %r82;
	cvt.u64.u32 	%rd110, %r48;
	add.s64 	%rd111, %rd110, %rd76;
	cvt.u64.u32 	%rd31, %r83;
	shl.b64 	%rd112, %rd111, 3;
	and.b64  	%rd113, %rd112, 34359738360;
	add.s64 	%rd32, %rd3, %rd113;
	ld.global.u64 	%rd33, [%rd32];
	and.b64  	%rd114, %rd33, -4294967296;
	setp.eq.s64 	%p18, %rd114, 0;
	@%p18 bra 	$L__BB14_23;

	div.u64 	%rd162, %rd31, %rd33;
	mul.lo.s64 	%rd115, %rd162, %rd33;
	sub.s64 	%rd163, %rd31, %rd115;
	bra.uni 	$L__BB14_24;

$L__BB14_23:
	cvt.u32.u64 	%r49, %rd33;
	cvt.u32.u64 	%r50, %rd31;
	div.u32 	%r51, %r50, %r49;
	mul.lo.s32 	%r52, %r51, %r49;
	sub.s32 	%r53, %r50, %r52;
	cvt.u64.u32 	%rd162, %r51;
	cvt.u64.u32 	%rd163, %r53;

$L__BB14_24:
	shl.b64 	%rd116, %rd76, 3;
	add.s64 	%rd117, %rd32, %rd116;
	ld.global.u64 	%rd118, [%rd117];
	mul.lo.s64 	%rd119, %rd118, %rd163;
	cvt.u32.u64 	%r54, %rd119;
	add.s32 	%r84, %r84, %r54;
	cvt.u32.u64 	%r83, %rd162;
	add.s32 	%r82, %r82, 1;
	cvt.u64.u32 	%rd120, %r82;
	setp.lt.u64 	%p19, %rd120, %rd76;
	@%p19 bra 	$L__BB14_21;

	setp.eq.s64 	%p20, %rd77, 0;
	mov.u32 	%r85, 0;
	mov.u64 	%rd164, 0;
	@%p20 bra 	$L__BB14_33;

$L__BB14_26:
	add.s64 	%rd122, %rd164, %rd5;
	shl.b64 	%rd123, %rd122, 3;
	add.s64 	%rd124, %rd3, %rd123;
	ld.global.u64 	%rd42, [%rd124];
	or.b64  	%rd125, %rd10, %rd42;
	and.b64  	%rd126, %rd125, -4294967296;
	setp.eq.s64 	%p21, %rd126, 0;
	@%p21 bra 	$L__BB14_28;

	div.u64 	%rd166, %rd10, %rd42;
	mul.lo.s64 	%rd127, %rd166, %rd42;
	sub.s64 	%rd167, %rd10, %rd127;
	bra.uni 	$L__BB14_29;

$L__BB14_28:
	cvt.u32.u64 	%r56, %rd42;
	cvt.u32.u64 	%r57, %rd10;
	div.u32 	%r58, %r57, %r56;
	mul.lo.s32 	%r59, %r58, %r56;
	sub.s32 	%r60, %r57, %r59;
	cvt.u64.u32 	%rd166, %r58;
	cvt.u64.u32 	%rd167, %r60;

$L__BB14_29:
	add.s64 	%rd128, %rd164, %rd4;
	shl.b64 	%rd129, %rd128, 3;
	add.s64 	%rd130, %rd3, %rd129;
	ld.global.u64 	%rd49, [%rd130];
	or.b64  	%rd131, %rd166, %rd49;
	and.b64  	%rd132, %rd131, -4294967296;
	setp.eq.s64 	%p22, %rd132, 0;
	@%p22 bra 	$L__BB14_31;

	div.u64 	%rd168, %rd166, %rd49;
	bra.uni 	$L__BB14_32;

$L__BB14_31:
	cvt.u32.u64 	%r61, %rd49;
	cvt.u32.u64 	%r62, %rd166;
	div.u32 	%r63, %r62, %r61;
	cvt.u64.u32 	%rd168, %r63;

$L__BB14_32:
	mul.lo.s64 	%rd133, %rd168, %rd42;
	add.s64 	%rd10, %rd133, %rd167;
	add.s32 	%r85, %r85, 1;
	cvt.u64.u32 	%rd164, %r85;
	setp.lt.u64 	%p23, %rd164, %rd77;
	@%p23 bra 	$L__BB14_26;

$L__BB14_33:
	mul.wide.u32 	%rd134, %r84, 4;
	add.s64 	%rd135, %rd2, %rd134;
	ld.global.u32 	%r64, [%rd135];
	shl.b64 	%rd136, %rd10, 2;
	add.s64 	%rd137, %rd1, %rd136;
	atom.global.add.u32 	%r65, [%rd137], %r64;
	add.s32 	%r4, %r4, %r12;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p24, %rd10, %rd75;
	@%p24 bra 	$L__BB14_20;
	bra.uni 	$L__BB14_43;

$L__BB14_34:
	setp.eq.s64 	%p25, %rd77, 0;
	mov.u32 	%r87, 0;
	mov.u64 	%rd170, 0;
	@%p25 bra 	$L__BB14_42;

$L__BB14_35:
	add.s64 	%rd139, %rd170, %rd5;
	shl.b64 	%rd140, %rd139, 3;
	add.s64 	%rd141, %rd3, %rd140;
	ld.global.u64 	%rd60, [%rd141];
	or.b64  	%rd142, %rd10, %rd60;
	and.b64  	%rd143, %rd142, -4294967296;
	setp.eq.s64 	%p26, %rd143, 0;
	@%p26 bra 	$L__BB14_37;

	div.u64 	%rd172, %rd10, %rd60;
	mul.lo.s64 	%rd144, %rd172, %rd60;
	sub.s64 	%rd173, %rd10, %rd144;
	bra.uni 	$L__BB14_38;

$L__BB14_37:
	cvt.u32.u64 	%r67, %rd60;
	cvt.u32.u64 	%r68, %rd10;
	div.u32 	%r69, %r68, %r67;
	mul.lo.s32 	%r70, %r69, %r67;
	sub.s32 	%r71, %r68, %r70;
	cvt.u64.u32 	%rd172, %r69;
	cvt.u64.u32 	%rd173, %r71;

$L__BB14_38:
	add.s64 	%rd145, %rd170, %rd4;
	shl.b64 	%rd146, %rd145, 3;
	add.s64 	%rd147, %rd3, %rd146;
	ld.global.u64 	%rd67, [%rd147];
	or.b64  	%rd148, %rd172, %rd67;
	and.b64  	%rd149, %rd148, -4294967296;
	setp.eq.s64 	%p27, %rd149, 0;
	@%p27 bra 	$L__BB14_40;

	div.u64 	%rd174, %rd172, %rd67;
	bra.uni 	$L__BB14_41;

$L__BB14_40:
	cvt.u32.u64 	%r72, %rd67;
	cvt.u32.u64 	%r73, %rd172;
	div.u32 	%r74, %r73, %r72;
	cvt.u64.u32 	%rd174, %r74;

$L__BB14_41:
	mul.lo.s64 	%rd150, %rd174, %rd60;
	add.s64 	%rd10, %rd150, %rd173;
	add.s32 	%r87, %r87, 1;
	cvt.u64.u32 	%rd170, %r87;
	setp.lt.u64 	%p28, %rd170, %rd77;
	@%p28 bra 	$L__BB14_35;

$L__BB14_42:
	ld.global.u32 	%r75, [%rd2];
	shl.b64 	%rd151, %rd10, 2;
	add.s64 	%rd152, %rd1, %rd151;
	atom.global.add.u32 	%r76, [%rd152], %r75;
	add.s32 	%r4, %r4, %r12;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p29, %rd10, %rd75;
	@%p29 bra 	$L__BB14_34;
	bra.uni 	$L__BB14_43;

$L__BB14_6:
	setp.ge.u64 	%p9, %rd10, %rd75;
	@%p9 bra 	$L__BB14_43;

	setp.eq.s64 	%p10, %rd77, 0;
	mov.u32 	%r31, %nctaid.x;
	mul.lo.s32 	%r5, %r3, %r31;
	@%p10 bra 	$L__BB14_17;

$L__BB14_8:
	mov.u32 	%r79, 0;
	mov.u64 	%rd155, 0;
	mov.u64 	%rd156, %rd10;

$L__BB14_9:
	add.s64 	%rd91, %rd155, %rd5;
	shl.b64 	%rd92, %rd91, 3;
	add.s64 	%rd93, %rd3, %rd92;
	ld.global.u64 	%rd14, [%rd93];
	or.b64  	%rd94, %rd156, %rd14;
	and.b64  	%rd95, %rd94, -4294967296;
	setp.eq.s64 	%p11, %rd95, 0;
	@%p11 bra 	$L__BB14_11;

	div.u64 	%rd157, %rd156, %rd14;
	mul.lo.s64 	%rd96, %rd157, %rd14;
	sub.s64 	%rd158, %rd156, %rd96;
	bra.uni 	$L__BB14_12;

$L__BB14_11:
	cvt.u32.u64 	%r33, %rd14;
	cvt.u32.u64 	%r34, %rd156;
	div.u32 	%r35, %r34, %r33;
	mul.lo.s32 	%r36, %r35, %r33;
	sub.s32 	%r37, %r34, %r36;
	cvt.u64.u32 	%rd157, %r35;
	cvt.u64.u32 	%rd158, %r37;

$L__BB14_12:
	add.s64 	%rd97, %rd155, %rd4;
	shl.b64 	%rd98, %rd97, 3;
	add.s64 	%rd99, %rd3, %rd98;
	ld.global.u64 	%rd21, [%rd99];
	or.b64  	%rd100, %rd157, %rd21;
	and.b64  	%rd101, %rd100, -4294967296;
	setp.eq.s64 	%p12, %rd101, 0;
	@%p12 bra 	$L__BB14_14;

	div.u64 	%rd159, %rd157, %rd21;
	bra.uni 	$L__BB14_15;

$L__BB14_14:
	cvt.u32.u64 	%r38, %rd21;
	cvt.u32.u64 	%r39, %rd157;
	div.u32 	%r40, %r39, %r38;
	cvt.u64.u32 	%rd159, %r40;

$L__BB14_15:
	mul.lo.s64 	%rd102, %rd159, %rd14;
	add.s64 	%rd156, %rd102, %rd158;
	add.s32 	%r79, %r79, 1;
	cvt.u64.u32 	%rd155, %r79;
	setp.lt.u64 	%p13, %rd155, %rd77;
	@%p13 bra 	$L__BB14_9;

	shl.b64 	%rd103, %rd156, 2;
	add.s64 	%rd104, %rd1, %rd103;
	shl.b64 	%rd105, %rd10, 2;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.u32 	%r41, [%rd106];
	atom.global.add.u32 	%r42, [%rd104], %r41;
	add.s32 	%r4, %r4, %r5;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p14, %rd10, %rd75;
	@%p14 bra 	$L__BB14_8;
	bra.uni 	$L__BB14_43;

$L__BB14_17:
	shl.b64 	%rd107, %rd10, 2;
	add.s64 	%rd108, %rd2, %rd107;
	ld.global.u32 	%r43, [%rd108];
	add.s64 	%rd109, %rd1, %rd107;
	atom.global.add.u32 	%r44, [%rd109], %r43;
	add.s32 	%r4, %r4, %r5;
	cvt.u64.u32 	%rd10, %r4;
	setp.lt.u64 	%p15, %rd10, %rd75;
	@%p15 bra 	$L__BB14_17;

$L__BB14_43:
	ret;

}
	// .globl	softmax_f32
.visible .entry softmax_f32(
	.param .u64 softmax_f32_param_0,
	.param .u64 softmax_f32_param_1,
	.param .u32 softmax_f32_param_2
)
{
	.reg .pred 	%p<26>;
	.reg .f32 	%f<147>;
	.reg .b32 	%r<133>;
	.reg .b64 	%rd<49>;


	ld.param.u64 	%rd21, [softmax_f32_param_0];
	ld.param.u64 	%rd22, [softmax_f32_param_1];
	ld.param.u32 	%r38, [softmax_f32_param_2];
	cvta.to.global.u64 	%rd1, %rd21;
	cvta.to.global.u64 	%rd2, %rd22;
	mov.u32 	%r1, %ntid.y;
	mov.u32 	%r123, %tid.y;
	setp.ge.s32 	%p1, %r123, %r38;
	mov.f32 	%f141, 0fFF800000;
	@%p1 bra 	$L__BB15_7;

	mov.u32 	%r39, %tid.x;
	mov.u32 	%r40, %ntid.x;
	mov.u32 	%r41, %ctaid.x;
	mad.lo.s32 	%r42, %r40, %r41, %r39;
	mul.lo.s32 	%r3, %r42, %r38;
	not.b32 	%r43, %r123;
	add.s32 	%r44, %r43, %r38;
	div.u32 	%r4, %r44, %r1;
	add.s32 	%r45, %r4, 1;
	and.b32  	%r122, %r45, 3;
	setp.eq.s32 	%p2, %r122, 0;
	mov.f32 	%f141, 0fFF800000;
	@%p2 bra 	$L__BB15_4;

	mov.u32 	%r123, %tid.y;
	add.s32 	%r46, %r123, %r3;
	mul.wide.s32 	%rd23, %r46, 4;
	add.s64 	%rd45, %rd1, %rd23;
	mul.wide.s32 	%rd4, %r1, 4;
	mov.f32 	%f141, 0fFF800000;

$L__BB15_3:
	.pragma "nounroll";
	ld.global.f32 	%f21, [%rd45];
	max.f32 	%f141, %f141, %f21;
	add.s32 	%r123, %r123, %r1;
	add.s64 	%rd45, %rd45, %rd4;
	add.s32 	%r122, %r122, -1;
	setp.ne.s32 	%p3, %r122, 0;
	@%p3 bra 	$L__BB15_3;

$L__BB15_4:
	setp.lt.u32 	%p4, %r4, 3;
	@%p4 bra 	$L__BB15_7;

	mul.wide.s32 	%rd7, %r1, 4;

$L__BB15_6:
	add.s32 	%r47, %r123, %r3;
	mul.wide.s32 	%rd24, %r47, 4;
	add.s64 	%rd25, %rd1, %rd24;
	ld.global.f32 	%f22, [%rd25];
	max.f32 	%f23, %f141, %f22;
	add.s64 	%rd26, %rd25, %rd7;
	ld.global.f32 	%f24, [%rd26];
	max.f32 	%f25, %f23, %f24;
	add.s32 	%r48, %r123, %r1;
	add.s32 	%r49, %r48, %r1;
	add.s64 	%rd27, %rd26, %rd7;
	ld.global.f32 	%f26, [%rd27];
	max.f32 	%f27, %f25, %f26;
	add.s32 	%r50, %r49, %r1;
	add.s64 	%rd28, %rd27, %rd7;
	ld.global.f32 	%f28, [%rd28];
	max.f32 	%f141, %f27, %f28;
	add.s32 	%r123, %r50, %r1;
	setp.lt.s32 	%p5, %r123, %r38;
	@%p5 bra 	$L__BB15_6;

$L__BB15_7:
	mov.u32 	%r131, %tid.y;
	setp.ge.s32 	%p6, %r131, %r38;
	mov.b32 	%r52, %f141;
	mov.u32 	%r53, 31;
	mov.u32 	%r54, 16;
	mov.u32 	%r55, -1;
	shfl.sync.bfly.b32 	%r56|%p7, %r52, %r54, %r53, %r55;
	mov.b32 	%f30, %r56;
	max.f32 	%f31, %f141, %f30;
	mov.b32 	%r57, %f31;
	mov.u32 	%r58, 8;
	shfl.sync.bfly.b32 	%r59|%p8, %r57, %r58, %r53, %r55;
	mov.b32 	%f32, %r59;
	max.f32 	%f33, %f31, %f32;
	mov.b32 	%r60, %f33;
	mov.u32 	%r61, 4;
	shfl.sync.bfly.b32 	%r62|%p9, %r60, %r61, %r53, %r55;
	mov.b32 	%f34, %r62;
	max.f32 	%f35, %f33, %f34;
	mov.b32 	%r63, %f35;
	mov.u32 	%r64, 2;
	shfl.sync.bfly.b32 	%r65|%p10, %r63, %r64, %r53, %r55;
	mov.b32 	%f36, %r65;
	max.f32 	%f37, %f35, %f36;
	mov.b32 	%r66, %f37;
	mov.u32 	%r67, 1;
	shfl.sync.bfly.b32 	%r68|%p11, %r66, %r67, %r53, %r55;
	mov.b32 	%f38, %r68;
	max.f32 	%f8, %f37, %f38;
	mov.f32 	%f146, 0f00000000;
	@%p6 bra 	$L__BB15_14;

	mov.u32 	%r69, %ntid.x;
	mov.u32 	%r70, %ctaid.x;
	mov.u32 	%r71, %tid.x;
	mad.lo.s32 	%r72, %r69, %r70, %r71;
	mul.lo.s32 	%r14, %r72, %r38;
	mov.u32 	%r127, %tid.y;
	not.b32 	%r73, %r127;
	add.s32 	%r74, %r73, %r38;
	div.u32 	%r16, %r74, %r1;
	add.s32 	%r75, %r16, 1;
	and.b32  	%r126, %r75, 3;
	setp.eq.s32 	%p12, %r126, 0;
	mov.f32 	%f146, 0f00000000;
	@%p12 bra 	$L__BB15_11;

	mov.u32 	%r127, %tid.y;
	add.s32 	%r76, %r127, %r14;
	mul.wide.s32 	%rd29, %r76, 4;
	add.s64 	%rd47, %rd2, %rd29;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd46, %rd1, %rd29;
	mov.f32 	%f146, 0f00000000;

$L__BB15_10:
	.pragma "nounroll";
	ld.global.f32 	%f42, [%rd46];
	sub.f32 	%f43, %f42, %f8;
	mov.f32 	%f44, 0f3F000000;
	mov.f32 	%f45, 0f3BBB989D;
	fma.rn.f32 	%f46, %f43, %f45, %f44;
	cvt.sat.f32.f32 	%f47, %f46;
	mov.f32 	%f48, 0f4B400001;
	mov.f32 	%f49, 0f437C0000;
	fma.rm.f32 	%f50, %f47, %f49, %f48;
	add.f32 	%f51, %f50, 0fCB40007F;
	neg.f32 	%f52, %f51;
	mov.f32 	%f53, 0f3FB8AA3B;
	fma.rn.f32 	%f54, %f43, %f53, %f52;
	mov.f32 	%f55, 0f32A57060;
	fma.rn.f32 	%f56, %f43, %f55, %f54;
	mov.b32 	%r77, %f50;
	shl.b32 	%r78, %r77, 23;
	mov.b32 	%f57, %r78;
	ex2.approx.ftz.f32 	%f58, %f56;
	mul.f32 	%f59, %f58, %f57;
	add.f32 	%f146, %f146, %f59;
	st.global.f32 	[%rd47], %f59;
	add.s32 	%r127, %r127, %r1;
	add.s64 	%rd47, %rd47, %rd9;
	add.s64 	%rd46, %rd46, %rd9;
	add.s32 	%r126, %r126, -1;
	setp.ne.s32 	%p13, %r126, 0;
	@%p13 bra 	$L__BB15_10;

$L__BB15_11:
	setp.lt.u32 	%p14, %r16, 3;
	@%p14 bra 	$L__BB15_14;

	mul.wide.s32 	%rd15, %r1, 4;

$L__BB15_13:
	add.s32 	%r79, %r127, %r14;
	mul.wide.s32 	%rd30, %r79, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.global.f32 	%f60, [%rd31];
	sub.f32 	%f61, %f60, %f8;
	mov.f32 	%f62, 0f3F000000;
	mov.f32 	%f63, 0f3BBB989D;
	fma.rn.f32 	%f64, %f61, %f63, %f62;
	cvt.sat.f32.f32 	%f65, %f64;
	mov.f32 	%f66, 0f4B400001;
	mov.f32 	%f67, 0f437C0000;
	fma.rm.f32 	%f68, %f65, %f67, %f66;
	add.f32 	%f69, %f68, 0fCB40007F;
	neg.f32 	%f70, %f69;
	mov.f32 	%f71, 0f3FB8AA3B;
	fma.rn.f32 	%f72, %f61, %f71, %f70;
	mov.f32 	%f73, 0f32A57060;
	fma.rn.f32 	%f74, %f61, %f73, %f72;
	mov.b32 	%r80, %f68;
	shl.b32 	%r81, %r80, 23;
	mov.b32 	%f75, %r81;
	ex2.approx.ftz.f32 	%f76, %f74;
	mul.f32 	%f77, %f76, %f75;
	add.f32 	%f78, %f146, %f77;
	add.s64 	%rd32, %rd2, %rd30;
	st.global.f32 	[%rd32], %f77;
	add.s64 	%rd33, %rd31, %rd15;
	ld.global.f32 	%f79, [%rd33];
	sub.f32 	%f80, %f79, %f8;
	fma.rn.f32 	%f81, %f80, %f63, %f62;
	cvt.sat.f32.f32 	%f82, %f81;
	fma.rm.f32 	%f83, %f82, %f67, %f66;
	add.f32 	%f84, %f83, 0fCB40007F;
	neg.f32 	%f85, %f84;
	fma.rn.f32 	%f86, %f80, %f71, %f85;
	fma.rn.f32 	%f87, %f80, %f73, %f86;
	mov.b32 	%r82, %f83;
	shl.b32 	%r83, %r82, 23;
	mov.b32 	%f88, %r83;
	ex2.approx.ftz.f32 	%f89, %f87;
	mul.f32 	%f90, %f89, %f88;
	add.f32 	%f91, %f78, %f90;
	add.s64 	%rd34, %rd32, %rd15;
	st.global.f32 	[%rd34], %f90;
	add.s32 	%r84, %r127, %r1;
	add.s32 	%r85, %r84, %r1;
	add.s64 	%rd35, %rd33, %rd15;
	ld.global.f32 	%f92, [%rd35];
	sub.f32 	%f93, %f92, %f8;
	fma.rn.f32 	%f94, %f93, %f63, %f62;
	cvt.sat.f32.f32 	%f95, %f94;
	fma.rm.f32 	%f96, %f95, %f67, %f66;
	add.f32 	%f97, %f96, 0fCB40007F;
	neg.f32 	%f98, %f97;
	fma.rn.f32 	%f99, %f93, %f71, %f98;
	fma.rn.f32 	%f100, %f93, %f73, %f99;
	mov.b32 	%r86, %f96;
	shl.b32 	%r87, %r86, 23;
	mov.b32 	%f101, %r87;
	ex2.approx.ftz.f32 	%f102, %f100;
	mul.f32 	%f103, %f102, %f101;
	add.f32 	%f104, %f91, %f103;
	add.s64 	%rd36, %rd34, %rd15;
	st.global.f32 	[%rd36], %f103;
	add.s32 	%r88, %r85, %r1;
	add.s64 	%rd37, %rd35, %rd15;
	ld.global.f32 	%f105, [%rd37];
	sub.f32 	%f106, %f105, %f8;
	fma.rn.f32 	%f107, %f106, %f63, %f62;
	cvt.sat.f32.f32 	%f108, %f107;
	fma.rm.f32 	%f109, %f108, %f67, %f66;
	add.f32 	%f110, %f109, 0fCB40007F;
	neg.f32 	%f111, %f110;
	fma.rn.f32 	%f112, %f106, %f71, %f111;
	fma.rn.f32 	%f113, %f106, %f73, %f112;
	mov.b32 	%r89, %f109;
	shl.b32 	%r90, %r89, 23;
	mov.b32 	%f114, %r90;
	ex2.approx.ftz.f32 	%f115, %f113;
	mul.f32 	%f116, %f115, %f114;
	add.f32 	%f146, %f104, %f116;
	add.s64 	%rd38, %rd36, %rd15;
	st.global.f32 	[%rd38], %f116;
	add.s32 	%r127, %r88, %r1;
	setp.lt.s32 	%p15, %r127, %r38;
	@%p15 bra 	$L__BB15_13;

$L__BB15_14:
	mov.b32 	%r92, %f146;
	shfl.sync.bfly.b32 	%r96|%p17, %r92, %r54, %r53, %r55;
	mov.b32 	%f117, %r96;
	add.f32 	%f118, %f146, %f117;
	mov.b32 	%r97, %f118;
	shfl.sync.bfly.b32 	%r99|%p18, %r97, %r58, %r53, %r55;
	mov.b32 	%f119, %r99;
	add.f32 	%f120, %f118, %f119;
	mov.b32 	%r100, %f120;
	shfl.sync.bfly.b32 	%r102|%p19, %r100, %r61, %r53, %r55;
	mov.b32 	%f121, %r102;
	add.f32 	%f122, %f120, %f121;
	mov.b32 	%r103, %f122;
	shfl.sync.bfly.b32 	%r105|%p20, %r103, %r64, %r53, %r55;
	mov.b32 	%f123, %r105;
	add.f32 	%f124, %f122, %f123;
	mov.b32 	%r106, %f124;
	shfl.sync.bfly.b32 	%r108|%p21, %r106, %r67, %r53, %r55;
	mov.b32 	%f125, %r108;
	add.f32 	%f126, %f124, %f125;
	rcp.rn.f32 	%f16, %f126;
	@%p6 bra 	$L__BB15_21;

	mov.u32 	%r109, %ntid.x;
	mov.u32 	%r110, %ctaid.x;
	mov.u32 	%r111, %tid.x;
	mad.lo.s32 	%r112, %r109, %r110, %r111;
	mul.lo.s32 	%r26, %r112, %r38;
	not.b32 	%r113, %r131;
	add.s32 	%r114, %r113, %r38;
	div.u32 	%r28, %r114, %r1;
	add.s32 	%r115, %r28, 1;
	and.b32  	%r130, %r115, 3;
	setp.eq.s32 	%p22, %r130, 0;
	@%p22 bra 	$L__BB15_18;

	mov.u32 	%r131, %tid.y;
	add.s32 	%r116, %r131, %r26;
	mul.wide.s32 	%rd39, %r116, 4;
	add.s64 	%rd48, %rd2, %rd39;
	mul.wide.s32 	%rd17, %r1, 4;

$L__BB15_17:
	.pragma "nounroll";
	ld.global.f32 	%f127, [%rd48];
	mul.f32 	%f128, %f16, %f127;
	st.global.f32 	[%rd48], %f128;
	add.s32 	%r131, %r131, %r1;
	add.s64 	%rd48, %rd48, %rd17;
	add.s32 	%r130, %r130, -1;
	setp.ne.s32 	%p23, %r130, 0;
	@%p23 bra 	$L__BB15_17;

$L__BB15_18:
	setp.lt.u32 	%p24, %r28, 3;
	@%p24 bra 	$L__BB15_21;

	mul.wide.s32 	%rd20, %r1, 4;

$L__BB15_20:
	add.s32 	%r117, %r131, %r26;
	mul.wide.s32 	%rd40, %r117, 4;
	add.s64 	%rd41, %rd2, %rd40;
	ld.global.f32 	%f129, [%rd41];
	mul.f32 	%f130, %f16, %f129;
	st.global.f32 	[%rd41], %f130;
	add.s64 	%rd42, %rd41, %rd20;
	ld.global.f32 	%f131, [%rd42];
	mul.f32 	%f132, %f16, %f131;
	st.global.f32 	[%rd42], %f132;
	add.s32 	%r118, %r131, %r1;
	add.s32 	%r119, %r118, %r1;
	add.s64 	%rd43, %rd42, %rd20;
	ld.global.f32 	%f133, [%rd43];
	mul.f32 	%f134, %f16, %f133;
	st.global.f32 	[%rd43], %f134;
	add.s32 	%r120, %r119, %r1;
	add.s64 	%rd44, %rd43, %rd20;
	ld.global.f32 	%f135, [%rd44];
	mul.f32 	%f136, %f16, %f135;
	st.global.f32 	[%rd44], %f136;
	add.s32 	%r131, %r120, %r1;
	setp.lt.s32 	%p25, %r131, %r38;
	@%p25 bra 	$L__BB15_20;

$L__BB15_21:
	ret;

}
	// .globl	softmax_f64
.visible .entry softmax_f64(
	.param .u64 softmax_f64_param_0,
	.param .u64 softmax_f64_param_1,
	.param .u32 softmax_f64_param_2
)
{
	.reg .pred 	%p<47>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<182>;
	.reg .f64 	%fd<201>;
	.reg .b64 	%rd<45>;


	ld.param.u64 	%rd16, [softmax_f64_param_0];
	ld.param.u64 	%rd17, [softmax_f64_param_1];
	ld.param.u32 	%r40, [softmax_f64_param_2];
	cvta.to.global.u64 	%rd1, %rd16;
	cvta.to.global.u64 	%rd2, %rd17;
	mov.u32 	%r41, %ctaid.x;
	mov.u32 	%r42, %ntid.x;
	mov.u32 	%r43, %tid.x;
	mad.lo.s32 	%r1, %r42, %r41, %r43;
	mov.u32 	%r2, %ntid.y;
	mov.u32 	%r177, %tid.y;
	setp.ge.s32 	%p1, %r177, %r40;
	mov.f64 	%fd193, 0dFFF0000000000000;
	@%p1 bra 	$L__BB16_7;

	mul.lo.s32 	%r4, %r1, %r40;
	not.b32 	%r44, %r177;
	add.s32 	%r45, %r44, %r40;
	div.u32 	%r5, %r45, %r2;
	add.s32 	%r46, %r5, 1;
	and.b32  	%r173, %r46, 3;
	setp.eq.s32 	%p2, %r173, 0;
	mov.f64 	%fd193, 0dFFF0000000000000;
	mov.u32 	%r174, %r177;
	@%p2 bra 	$L__BB16_4;

	add.s32 	%r47, %r177, %r4;
	mul.wide.s32 	%rd18, %r47, 8;
	add.s64 	%rd43, %rd1, %rd18;
	mul.wide.s32 	%rd4, %r2, 8;
	mov.f64 	%fd193, 0dFFF0000000000000;
	mov.u32 	%r174, %r177;

$L__BB16_3:
	.pragma "nounroll";
	ld.global.f64 	%fd36, [%rd43];
	max.f64 	%fd193, %fd193, %fd36;
	add.s32 	%r174, %r174, %r2;
	add.s64 	%rd43, %rd43, %rd4;
	add.s32 	%r173, %r173, -1;
	setp.ne.s32 	%p3, %r173, 0;
	@%p3 bra 	$L__BB16_3;

$L__BB16_4:
	setp.lt.u32 	%p4, %r5, 3;
	@%p4 bra 	$L__BB16_7;

	mul.wide.s32 	%rd7, %r2, 8;

$L__BB16_6:
	add.s32 	%r48, %r174, %r4;
	mul.wide.s32 	%rd19, %r48, 8;
	add.s64 	%rd20, %rd1, %rd19;
	ld.global.f64 	%fd37, [%rd20];
	max.f64 	%fd38, %fd193, %fd37;
	add.s64 	%rd21, %rd20, %rd7;
	ld.global.f64 	%fd39, [%rd21];
	max.f64 	%fd40, %fd38, %fd39;
	add.s32 	%r49, %r174, %r2;
	add.s32 	%r50, %r49, %r2;
	add.s64 	%rd22, %rd21, %rd7;
	ld.global.f64 	%fd41, [%rd22];
	max.f64 	%fd42, %fd40, %fd41;
	add.s32 	%r51, %r50, %r2;
	add.s64 	%rd23, %rd22, %rd7;
	ld.global.f64 	%fd43, [%rd23];
	max.f64 	%fd193, %fd42, %fd43;
	add.s32 	%r174, %r51, %r2;
	setp.lt.s32 	%p5, %r174, %r40;
	@%p5 bra 	$L__BB16_6;

$L__BB16_7:
	// begin inline asm
	mov.b64 {%r52,%r53}, %fd193;
	// end inline asm
	mov.u32 	%r72, 31;
	mov.u32 	%r73, 16;
	mov.u32 	%r74, -1;
	shfl.sync.bfly.b32 	%r55|%p6, %r53, %r73, %r72, %r74;
	shfl.sync.bfly.b32 	%r54|%p7, %r52, %r73, %r72, %r74;
	// begin inline asm
	mov.b64 %fd45, {%r54,%r55};
	// end inline asm
	max.f64 	%fd46, %fd193, %fd45;
	// begin inline asm
	mov.b64 {%r56,%r57}, %fd46;
	// end inline asm
	mov.u32 	%r75, 8;
	shfl.sync.bfly.b32 	%r59|%p8, %r57, %r75, %r72, %r74;
	shfl.sync.bfly.b32 	%r58|%p9, %r56, %r75, %r72, %r74;
	// begin inline asm
	mov.b64 %fd47, {%r58,%r59};
	// end inline asm
	max.f64 	%fd48, %fd46, %fd47;
	// begin inline asm
	mov.b64 {%r60,%r61}, %fd48;
	// end inline asm
	mov.u32 	%r76, 4;
	shfl.sync.bfly.b32 	%r63|%p10, %r61, %r76, %r72, %r74;
	shfl.sync.bfly.b32 	%r62|%p11, %r60, %r76, %r72, %r74;
	// begin inline asm
	mov.b64 %fd49, {%r62,%r63};
	// end inline asm
	max.f64 	%fd50, %fd48, %fd49;
	// begin inline asm
	mov.b64 {%r64,%r65}, %fd50;
	// end inline asm
	mov.u32 	%r77, 2;
	shfl.sync.bfly.b32 	%r67|%p12, %r65, %r77, %r72, %r74;
	shfl.sync.bfly.b32 	%r66|%p13, %r64, %r77, %r72, %r74;
	// begin inline asm
	mov.b64 %fd51, {%r66,%r67};
	// end inline asm
	max.f64 	%fd52, %fd50, %fd51;
	// begin inline asm
	mov.b64 {%r68,%r69}, %fd52;
	// end inline asm
	mov.u32 	%r78, 1;
	shfl.sync.bfly.b32 	%r71|%p14, %r69, %r78, %r72, %r74;
	shfl.sync.bfly.b32 	%r70|%p15, %r68, %r78, %r72, %r74;
	// begin inline asm
	mov.b64 %fd53, {%r70,%r71};
	// end inline asm
	max.f64 	%fd8, %fd52, %fd53;
	mov.f64 	%fd200, 0d0000000000000000;
	@%p1 bra 	$L__BB16_21;

	mul.lo.s32 	%r14, %r1, %r40;
	not.b32 	%r79, %r177;
	add.s32 	%r15, %r79, %r40;
	div.u32 	%r80, %r15, %r2;
	and.b32  	%r81, %r80, 1;
	setp.eq.b32 	%p17, %r81, 1;
	mov.pred 	%p18, 0;
	xor.pred  	%p19, %p17, %p18;
	mov.f64 	%fd200, 0d0000000000000000;
	@%p19 bra 	$L__BB16_13;

	add.s32 	%r82, %r177, %r14;
	cvt.s64.s32 	%rd8, %r82;
	mul.wide.s32 	%rd24, %r82, 8;
	add.s64 	%rd25, %rd1, %rd24;
	ld.global.f64 	%fd57, [%rd25];
	sub.f64 	%fd9, %fd57, %fd8;
	mov.f64 	%fd58, 0d4338000000000000;
	mov.f64 	%fd59, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd60, %fd9, %fd59, %fd58;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd60;
	}
	mov.f64 	%fd61, 0dC338000000000000;
	add.rn.f64 	%fd62, %fd60, %fd61;
	mov.f64 	%fd63, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd64, %fd62, %fd63, %fd9;
	mov.f64 	%fd65, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd66, %fd62, %fd65, %fd64;
	mov.f64 	%fd67, 0d3E928AF3FCA213EA;
	mov.f64 	%fd68, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd69, %fd68, %fd66, %fd67;
	mov.f64 	%fd70, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd71, %fd69, %fd66, %fd70;
	mov.f64 	%fd72, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd73, %fd71, %fd66, %fd72;
	mov.f64 	%fd74, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd75, %fd73, %fd66, %fd74;
	mov.f64 	%fd76, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd77, %fd75, %fd66, %fd76;
	mov.f64 	%fd78, 0d3F81111111122322;
	fma.rn.f64 	%fd79, %fd77, %fd66, %fd78;
	mov.f64 	%fd80, 0d3FA55555555502A1;
	fma.rn.f64 	%fd81, %fd79, %fd66, %fd80;
	mov.f64 	%fd82, 0d3FC5555555555511;
	fma.rn.f64 	%fd83, %fd81, %fd66, %fd82;
	mov.f64 	%fd84, 0d3FE000000000000B;
	fma.rn.f64 	%fd85, %fd83, %fd66, %fd84;
	mov.f64 	%fd86, 0d3FF0000000000000;
	fma.rn.f64 	%fd87, %fd85, %fd66, %fd86;
	fma.rn.f64 	%fd88, %fd87, %fd66, %fd86;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r17, %temp}, %fd88;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd88;
	}
	shl.b32 	%r83, %r16, 20;
	add.s32 	%r84, %r18, %r83;
	mov.b64 	%fd194, {%r17, %r84};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r85}, %fd9;
	}
	mov.b32 	%f4, %r85;
	abs.f32 	%f1, %f4;
	setp.lt.f32 	%p20, %f1, 0f4086232B;
	@%p20 bra 	$L__BB16_12;

	setp.lt.f64 	%p21, %fd9, 0d0000000000000000;
	add.f64 	%fd89, %fd9, 0d7FF0000000000000;
	selp.f64 	%fd194, 0d0000000000000000, %fd89, %p21;
	setp.geu.f32 	%p22, %f1, 0f40874800;
	@%p22 bra 	$L__BB16_12;

	shr.u32 	%r86, %r16, 31;
	add.s32 	%r87, %r16, %r86;
	shr.s32 	%r88, %r87, 1;
	shl.b32 	%r89, %r88, 20;
	add.s32 	%r90, %r18, %r89;
	mov.b64 	%fd90, {%r17, %r90};
	sub.s32 	%r91, %r16, %r88;
	shl.b32 	%r92, %r91, 20;
	add.s32 	%r93, %r92, 1072693248;
	mov.u32 	%r94, 0;
	mov.b64 	%fd91, {%r94, %r93};
	mul.f64 	%fd194, %fd90, %fd91;

$L__BB16_12:
	add.f64 	%fd200, %fd194, 0d0000000000000000;
	shl.b64 	%rd26, %rd8, 3;
	add.s64 	%rd27, %rd2, %rd26;
	st.global.f64 	[%rd27], %fd194;
	add.s32 	%r177, %r177, %r2;

$L__BB16_13:
	setp.gt.u32 	%p23, %r2, %r15;
	@%p23 bra 	$L__BB16_21;

$L__BB16_14:
	add.s32 	%r95, %r177, %r14;
	mul.wide.s32 	%rd28, %r95, 8;
	add.s64 	%rd29, %rd1, %rd28;
	ld.global.f64 	%fd92, [%rd29];
	sub.f64 	%fd18, %fd92, %fd8;
	mov.f64 	%fd93, 0d4338000000000000;
	mov.f64 	%fd94, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd95, %fd18, %fd94, %fd93;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd95;
	}
	mov.f64 	%fd96, 0dC338000000000000;
	add.rn.f64 	%fd97, %fd95, %fd96;
	mov.f64 	%fd98, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd99, %fd97, %fd98, %fd18;
	mov.f64 	%fd100, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd101, %fd97, %fd100, %fd99;
	mov.f64 	%fd102, 0d3E928AF3FCA213EA;
	mov.f64 	%fd103, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd104, %fd103, %fd101, %fd102;
	mov.f64 	%fd105, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd106, %fd104, %fd101, %fd105;
	mov.f64 	%fd107, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd108, %fd106, %fd101, %fd107;
	mov.f64 	%fd109, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd110, %fd108, %fd101, %fd109;
	mov.f64 	%fd111, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd112, %fd110, %fd101, %fd111;
	mov.f64 	%fd113, 0d3F81111111122322;
	fma.rn.f64 	%fd114, %fd112, %fd101, %fd113;
	mov.f64 	%fd115, 0d3FA55555555502A1;
	fma.rn.f64 	%fd116, %fd114, %fd101, %fd115;
	mov.f64 	%fd117, 0d3FC5555555555511;
	fma.rn.f64 	%fd118, %fd116, %fd101, %fd117;
	mov.f64 	%fd119, 0d3FE000000000000B;
	fma.rn.f64 	%fd120, %fd118, %fd101, %fd119;
	mov.f64 	%fd121, 0d3FF0000000000000;
	fma.rn.f64 	%fd122, %fd120, %fd101, %fd121;
	fma.rn.f64 	%fd123, %fd122, %fd101, %fd121;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd123;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd123;
	}
	shl.b32 	%r96, %r22, 20;
	add.s32 	%r97, %r24, %r96;
	mov.b64 	%fd198, {%r23, %r97};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r98}, %fd18;
	}
	mov.b32 	%f5, %r98;
	abs.f32 	%f2, %f5;
	setp.lt.f32 	%p24, %f2, 0f4086232B;
	@%p24 bra 	$L__BB16_17;

	sub.f64 	%fd188, %fd92, %fd8;
	setp.lt.f64 	%p25, %fd188, 0d0000000000000000;
	add.f64 	%fd124, %fd188, 0d7FF0000000000000;
	selp.f64 	%fd198, 0d0000000000000000, %fd124, %p25;
	setp.geu.f32 	%p26, %f2, 0f40874800;
	@%p26 bra 	$L__BB16_17;

	mov.f64 	%fd185, 0d4338000000000000;
	mov.f64 	%fd184, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd183, %fd18, %fd184, %fd185;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r156, %temp}, %fd183;
	}
	shr.u32 	%r99, %r156, 31;
	add.s32 	%r100, %r156, %r99;
	shr.s32 	%r101, %r100, 1;
	shl.b32 	%r102, %r101, 20;
	add.s32 	%r103, %r24, %r102;
	mov.b64 	%fd125, {%r23, %r103};
	sub.s32 	%r104, %r156, %r101;
	shl.b32 	%r105, %r104, 20;
	add.s32 	%r106, %r105, 1072693248;
	mov.u32 	%r107, 0;
	mov.b64 	%fd126, {%r107, %r106};
	mul.f64 	%fd198, %fd125, %fd126;

$L__BB16_17:
	mov.f64 	%fd187, 0d4338000000000000;
	mov.f64 	%fd186, 0d3FF71547652B82FE;
	add.s32 	%r157, %r177, %r14;
	cvt.s64.s32 	%rd42, %r157;
	add.f64 	%fd23, %fd200, %fd198;
	shl.b64 	%rd30, %rd42, 3;
	add.s64 	%rd31, %rd2, %rd30;
	st.global.f64 	[%rd31], %fd198;
	add.s32 	%r25, %r177, %r2;
	add.s32 	%r108, %r25, %r14;
	cvt.s64.s32 	%rd10, %r108;
	mul.wide.s32 	%rd32, %r108, 8;
	add.s64 	%rd33, %rd1, %rd32;
	ld.global.f64 	%fd127, [%rd33];
	sub.f64 	%fd24, %fd127, %fd8;
	fma.rn.f64 	%fd130, %fd24, %fd186, %fd187;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r26, %temp}, %fd130;
	}
	add.rn.f64 	%fd132, %fd130, %fd96;
	fma.rn.f64 	%fd134, %fd132, %fd98, %fd24;
	fma.rn.f64 	%fd136, %fd132, %fd100, %fd134;
	fma.rn.f64 	%fd139, %fd103, %fd136, %fd102;
	fma.rn.f64 	%fd141, %fd139, %fd136, %fd105;
	fma.rn.f64 	%fd143, %fd141, %fd136, %fd107;
	fma.rn.f64 	%fd145, %fd143, %fd136, %fd109;
	fma.rn.f64 	%fd147, %fd145, %fd136, %fd111;
	fma.rn.f64 	%fd149, %fd147, %fd136, %fd113;
	fma.rn.f64 	%fd151, %fd149, %fd136, %fd115;
	fma.rn.f64 	%fd153, %fd151, %fd136, %fd117;
	fma.rn.f64 	%fd155, %fd153, %fd136, %fd119;
	fma.rn.f64 	%fd157, %fd155, %fd136, %fd121;
	fma.rn.f64 	%fd158, %fd157, %fd136, %fd121;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r27, %temp}, %fd158;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd158;
	}
	shl.b32 	%r109, %r26, 20;
	add.s32 	%r110, %r28, %r109;
	mov.b64 	%fd199, {%r27, %r110};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r111}, %fd24;
	}
	mov.b32 	%f6, %r111;
	abs.f32 	%f3, %f6;
	setp.lt.f32 	%p27, %f3, 0f4086232B;
	@%p27 bra 	$L__BB16_20;

	setp.lt.f64 	%p28, %fd24, 0d0000000000000000;
	add.f64 	%fd159, %fd24, 0d7FF0000000000000;
	selp.f64 	%fd199, 0d0000000000000000, %fd159, %p28;
	setp.geu.f32 	%p29, %f3, 0f40874800;
	@%p29 bra 	$L__BB16_20;

	shr.u32 	%r112, %r26, 31;
	add.s32 	%r113, %r26, %r112;
	shr.s32 	%r114, %r113, 1;
	shl.b32 	%r115, %r114, 20;
	add.s32 	%r116, %r28, %r115;
	mov.b64 	%fd160, {%r27, %r116};
	sub.s32 	%r117, %r26, %r114;
	shl.b32 	%r118, %r117, 20;
	add.s32 	%r119, %r118, 1072693248;
	mov.u32 	%r120, 0;
	mov.b64 	%fd161, {%r120, %r119};
	mul.f64 	%fd199, %fd160, %fd161;

$L__BB16_20:
	add.f64 	%fd200, %fd23, %fd199;
	shl.b64 	%rd34, %rd10, 3;
	add.s64 	%rd35, %rd2, %rd34;
	st.global.f64 	[%rd35], %fd199;
	add.s32 	%r177, %r25, %r2;
	setp.lt.s32 	%p30, %r177, %r40;
	@%p30 bra 	$L__BB16_14;

$L__BB16_21:
	mov.u32 	%r165, 1;
	mov.u32 	%r164, 2;
	mov.u32 	%r163, 4;
	mov.u32 	%r162, 8;
	mov.u32 	%r161, 31;
	mov.u32 	%r160, 16;
	mov.u32 	%r159, -1;
	mov.u32 	%r158, %tid.y;
	setp.ge.s32 	%p46, %r158, %r40;
	// begin inline asm
	mov.b64 {%r121,%r122}, %fd200;
	// end inline asm
	shfl.sync.bfly.b32 	%r124|%p31, %r122, %r160, %r161, %r159;
	shfl.sync.bfly.b32 	%r123|%p32, %r121, %r160, %r161, %r159;
	// begin inline asm
	mov.b64 %fd163, {%r123,%r124};
	// end inline asm
	add.f64 	%fd164, %fd200, %fd163;
	// begin inline asm
	mov.b64 {%r125,%r126}, %fd164;
	// end inline asm
	shfl.sync.bfly.b32 	%r128|%p33, %r126, %r162, %r161, %r159;
	shfl.sync.bfly.b32 	%r127|%p34, %r125, %r162, %r161, %r159;
	// begin inline asm
	mov.b64 %fd165, {%r127,%r128};
	// end inline asm
	add.f64 	%fd166, %fd164, %fd165;
	// begin inline asm
	mov.b64 {%r129,%r130}, %fd166;
	// end inline asm
	shfl.sync.bfly.b32 	%r132|%p35, %r130, %r163, %r161, %r159;
	shfl.sync.bfly.b32 	%r131|%p36, %r129, %r163, %r161, %r159;
	// begin inline asm
	mov.b64 %fd167, {%r131,%r132};
	// end inline asm
	add.f64 	%fd168, %fd166, %fd167;
	// begin inline asm
	mov.b64 {%r133,%r134}, %fd168;
	// end inline asm
	shfl.sync.bfly.b32 	%r136|%p37, %r134, %r164, %r161, %r159;
	shfl.sync.bfly.b32 	%r135|%p38, %r133, %r164, %r161, %r159;
	// begin inline asm
	mov.b64 %fd169, {%r135,%r136};
	// end inline asm
	add.f64 	%fd170, %fd168, %fd169;
	// begin inline asm
	mov.b64 {%r137,%r138}, %fd170;
	// end inline asm
	shfl.sync.bfly.b32 	%r140|%p39, %r138, %r165, %r161, %r159;
	shfl.sync.bfly.b32 	%r139|%p40, %r137, %r165, %r161, %r159;
	// begin inline asm
	mov.b64 %fd171, {%r139,%r140};
	// end inline asm
	add.f64 	%fd172, %fd170, %fd171;
	rcp.rn.f64 	%fd31, %fd172;
	@%p46 bra 	$L__BB16_28;

	mov.u32 	%r180, %tid.y;
	mov.u32 	%r169, %tid.x;
	mov.u32 	%r168, %ctaid.x;
	mov.u32 	%r167, %ntid.x;
	mad.lo.s32 	%r166, %r167, %r168, %r169;
	mul.lo.s32 	%r30, %r166, %r40;
	not.b32 	%r148, %r180;
	add.s32 	%r149, %r148, %r40;
	div.u32 	%r31, %r149, %r2;
	add.s32 	%r150, %r31, 1;
	and.b32  	%r179, %r150, 3;
	setp.eq.s32 	%p42, %r179, 0;
	@%p42 bra 	$L__BB16_25;

	mov.u32 	%r180, %tid.y;
	add.s32 	%r151, %r180, %r30;
	mul.wide.s32 	%rd36, %r151, 8;
	add.s64 	%rd44, %rd2, %rd36;
	mul.wide.s32 	%rd12, %r2, 8;

$L__BB16_24:
	.pragma "nounroll";
	ld.global.f64 	%fd173, [%rd44];
	mul.f64 	%fd174, %fd31, %fd173;
	st.global.f64 	[%rd44], %fd174;
	add.s32 	%r180, %r180, %r2;
	add.s64 	%rd44, %rd44, %rd12;
	add.s32 	%r179, %r179, -1;
	setp.ne.s32 	%p43, %r179, 0;
	@%p43 bra 	$L__BB16_24;

$L__BB16_25:
	setp.lt.u32 	%p44, %r31, 3;
	@%p44 bra 	$L__BB16_28;

	mul.wide.s32 	%rd15, %r2, 8;

$L__BB16_27:
	add.s32 	%r152, %r180, %r30;
	mul.wide.s32 	%rd37, %r152, 8;
	add.s64 	%rd38, %rd2, %rd37;
	ld.global.f64 	%fd175, [%rd38];
	mul.f64 	%fd176, %fd31, %fd175;
	st.global.f64 	[%rd38], %fd176;
	add.s64 	%rd39, %rd38, %rd15;
	ld.global.f64 	%fd177, [%rd39];
	mul.f64 	%fd178, %fd31, %fd177;
	st.global.f64 	[%rd39], %fd178;
	add.s32 	%r153, %r180, %r2;
	add.s32 	%r154, %r153, %r2;
	add.s64 	%rd40, %rd39, %rd15;
	ld.global.f64 	%fd179, [%rd40];
	mul.f64 	%fd180, %fd31, %fd179;
	st.global.f64 	[%rd40], %fd180;
	add.s32 	%r155, %r154, %r2;
	add.s64 	%rd41, %rd40, %rd15;
	ld.global.f64 	%fd181, [%rd41];
	mul.f64 	%fd182, %fd31, %fd181;
	st.global.f64 	[%rd41], %fd182;
	add.s32 	%r180, %r155, %r2;
	setp.lt.s32 	%p45, %r180, %r40;
	@%p45 bra 	$L__BB16_27;

$L__BB16_28:
	ret;

}
	// .globl	rmsnorm_f32
.visible .entry rmsnorm_f32(
	.param .u64 rmsnorm_f32_param_0,
	.param .u64 rmsnorm_f32_param_1,
	.param .u64 rmsnorm_f32_param_2,
	.param .u32 rmsnorm_f32_param_3,
	.param .f32 rmsnorm_f32_param_4
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<83>;
	.reg .b32 	%r<116>;
	.reg .b64 	%rd<69>;
	// demoted variable
	.shared .align 4 .b8 _ZZ7rmsnormIfEvPKT_PS0_S2_ifE5s_sum[128];

	ld.param.u64 	%rd29, [rmsnorm_f32_param_0];
	ld.param.u64 	%rd30, [rmsnorm_f32_param_1];
	ld.param.u64 	%rd28, [rmsnorm_f32_param_2];
	ld.param.u32 	%r35, [rmsnorm_f32_param_3];
	ld.param.f32 	%f12, [rmsnorm_f32_param_4];
	cvta.to.global.u64 	%rd1, %rd30;
	cvta.to.global.u64 	%rd2, %rd29;
	cvta.to.global.u64 	%rd3, %rd28;
	mov.u32 	%r36, %ntid.y;
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %tid.y;
	mad.lo.s32 	%r1, %r37, %r36, %r38;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r114, %tid.x;
	setp.ge.s32 	%p1, %r114, %r35;
	mov.f32 	%f81, 0f00000000;
	@%p1 bra 	$L__BB17_7;

	mul.lo.s32 	%r4, %r1, %r35;
	not.b32 	%r39, %r114;
	add.s32 	%r40, %r39, %r35;
	div.u32 	%r5, %r40, %r2;
	add.s32 	%r41, %r5, 1;
	and.b32  	%r105, %r41, 3;
	setp.eq.s32 	%p2, %r105, 0;
	mov.f32 	%f81, 0f00000000;
	mov.u32 	%r106, %r114;
	@%p2 bra 	$L__BB17_4;

	add.s32 	%r42, %r114, %r4;
	mul.wide.s32 	%rd31, %r42, 4;
	add.s64 	%rd63, %rd2, %rd31;
	mul.wide.s32 	%rd5, %r2, 4;
	mov.f32 	%f81, 0f00000000;
	mov.u32 	%r106, %r114;

$L__BB17_3:
	.pragma "nounroll";
	ld.global.f32 	%f17, [%rd63];
	fma.rn.f32 	%f81, %f17, %f17, %f81;
	add.s32 	%r106, %r106, %r2;
	add.s64 	%rd63, %rd63, %rd5;
	add.s32 	%r105, %r105, -1;
	setp.ne.s32 	%p3, %r105, 0;
	@%p3 bra 	$L__BB17_3;

$L__BB17_4:
	setp.lt.u32 	%p4, %r5, 3;
	@%p4 bra 	$L__BB17_7;

	mul.wide.s32 	%rd8, %r2, 4;

$L__BB17_6:
	add.s32 	%r43, %r106, %r4;
	mul.wide.s32 	%rd32, %r43, 4;
	add.s64 	%rd33, %rd2, %rd32;
	ld.global.f32 	%f18, [%rd33];
	fma.rn.f32 	%f19, %f18, %f18, %f81;
	add.s64 	%rd34, %rd33, %rd8;
	ld.global.f32 	%f20, [%rd34];
	fma.rn.f32 	%f21, %f20, %f20, %f19;
	add.s32 	%r44, %r106, %r2;
	add.s32 	%r45, %r44, %r2;
	add.s64 	%rd35, %rd34, %rd8;
	ld.global.f32 	%f22, [%rd35];
	fma.rn.f32 	%f23, %f22, %f22, %f21;
	add.s32 	%r46, %r45, %r2;
	add.s64 	%rd36, %rd35, %rd8;
	ld.global.f32 	%f24, [%rd36];
	fma.rn.f32 	%f81, %f24, %f24, %f23;
	add.s32 	%r106, %r46, %r2;
	setp.lt.s32 	%p5, %r106, %r35;
	@%p5 bra 	$L__BB17_6;

$L__BB17_7:
	mov.b32 	%r47, %f81;
	mov.u32 	%r48, 31;
	mov.u32 	%r49, 16;
	mov.u32 	%r50, -1;
	shfl.sync.bfly.b32 	%r51|%p6, %r47, %r49, %r48, %r50;
	mov.b32 	%f25, %r51;
	add.f32 	%f26, %f81, %f25;
	mov.b32 	%r52, %f26;
	mov.u32 	%r53, 8;
	shfl.sync.bfly.b32 	%r54|%p7, %r52, %r53, %r48, %r50;
	mov.b32 	%f27, %r54;
	add.f32 	%f28, %f26, %f27;
	mov.b32 	%r55, %f28;
	mov.u32 	%r56, 4;
	shfl.sync.bfly.b32 	%r57|%p8, %r55, %r56, %r48, %r50;
	mov.b32 	%f29, %r57;
	add.f32 	%f30, %f28, %f29;
	mov.b32 	%r58, %f30;
	mov.u32 	%r59, 2;
	shfl.sync.bfly.b32 	%r60|%p9, %r58, %r59, %r48, %r50;
	mov.b32 	%f31, %r60;
	add.f32 	%f32, %f30, %f31;
	mov.b32 	%r61, %f32;
	mov.u32 	%r62, 1;
	shfl.sync.bfly.b32 	%r63|%p10, %r61, %r62, %r48, %r50;
	mov.b32 	%f33, %r63;
	add.f32 	%f82, %f32, %f33;
	setp.lt.s32 	%p11, %r2, 33;
	@%p11 bra 	$L__BB17_11;

	and.b32  	%r14, %r114, 31;
	setp.ne.s32 	%p12, %r14, 0;
	@%p12 bra 	$L__BB17_10;

	shr.u32 	%r64, %r114, 3;
	and.b32  	%r65, %r64, 536870908;
	mov.u32 	%r66, _ZZ7rmsnormIfEvPKT_PS0_S2_ifE5s_sum;
	add.s32 	%r67, %r66, %r65;
	st.shared.f32 	[%r67], %f82;

$L__BB17_10:
	bar.sync 	0;
	shl.b32 	%r68, %r14, 2;
	mov.u32 	%r69, _ZZ7rmsnormIfEvPKT_PS0_S2_ifE5s_sum;
	add.s32 	%r70, %r69, %r68;
	mov.u32 	%r71, 2;
	ld.shared.f32 	%f34, [%r70];
	mov.b32 	%r72, %f34;
	mov.u32 	%r73, 31;
	mov.u32 	%r74, 16;
	mov.u32 	%r75, -1;
	shfl.sync.bfly.b32 	%r76|%p13, %r72, %r74, %r73, %r75;
	mov.b32 	%f35, %r76;
	add.f32 	%f36, %f34, %f35;
	mov.b32 	%r77, %f36;
	mov.u32 	%r78, 8;
	shfl.sync.bfly.b32 	%r79|%p14, %r77, %r78, %r73, %r75;
	mov.b32 	%f37, %r79;
	add.f32 	%f38, %f36, %f37;
	mov.b32 	%r80, %f38;
	mov.u32 	%r81, 4;
	shfl.sync.bfly.b32 	%r82|%p15, %r80, %r81, %r73, %r75;
	mov.b32 	%f39, %r82;
	add.f32 	%f40, %f38, %f39;
	mov.b32 	%r83, %f40;
	shfl.sync.bfly.b32 	%r84|%p16, %r83, %r71, %r73, %r75;
	mov.b32 	%f41, %r84;
	add.f32 	%f42, %f40, %f41;
	mov.b32 	%r85, %f42;
	mov.u32 	%r86, 1;
	shfl.sync.bfly.b32 	%r87|%p17, %r85, %r86, %r73, %r75;
	mov.b32 	%f43, %r87;
	add.f32 	%f82, %f42, %f43;

$L__BB17_11:
	cvt.rn.f32.s32 	%f44, %r35;
	div.rn.f32 	%f45, %f82, %f44;
	add.f32 	%f46, %f45, %f12;
	rsqrt.approx.f32 	%f11, %f46;
	setp.eq.s64 	%p18, %rd28, 0;
	@%p18 bra 	$L__BB17_19;

	@%p1 bra 	$L__BB17_26;

	mul.lo.s32 	%r15, %r1, %r35;
	not.b32 	%r88, %r114;
	add.s32 	%r89, %r88, %r35;
	div.u32 	%r16, %r89, %r2;
	add.s32 	%r90, %r16, 1;
	and.b32  	%r109, %r90, 3;
	setp.eq.s32 	%p20, %r109, 0;
	@%p20 bra 	$L__BB17_16;

	add.s32 	%r91, %r114, %r15;
	mul.wide.s32 	%rd37, %r91, 4;
	add.s64 	%rd66, %rd1, %rd37;
	mul.wide.s32 	%rd10, %r2, 4;
	add.s64 	%rd65, %rd2, %rd37;
	mul.wide.s32 	%rd38, %r114, 4;
	add.s64 	%rd64, %rd3, %rd38;

$L__BB17_15:
	.pragma "nounroll";
	ld.global.f32 	%f47, [%rd65];
	mul.f32 	%f48, %f11, %f47;
	ld.global.f32 	%f49, [%rd64];
	mul.f32 	%f50, %f49, %f48;
	st.global.f32 	[%rd66], %f50;
	add.s32 	%r114, %r114, %r2;
	add.s64 	%rd66, %rd66, %rd10;
	add.s64 	%rd65, %rd65, %rd10;
	add.s64 	%rd64, %rd64, %rd10;
	add.s32 	%r109, %r109, -1;
	setp.ne.s32 	%p21, %r109, 0;
	@%p21 bra 	$L__BB17_15;

$L__BB17_16:
	setp.lt.u32 	%p22, %r16, 3;
	@%p22 bra 	$L__BB17_26;

	mul.wide.s32 	%rd19, %r2, 4;

$L__BB17_18:
	mul.wide.s32 	%rd39, %r114, 4;
	add.s64 	%rd40, %rd3, %rd39;
	add.s32 	%r92, %r114, %r15;
	mul.wide.s32 	%rd41, %r92, 4;
	add.s64 	%rd42, %rd2, %rd41;
	ld.global.f32 	%f51, [%rd42];
	mul.f32 	%f52, %f11, %f51;
	ld.global.f32 	%f53, [%rd40];
	mul.f32 	%f54, %f53, %f52;
	add.s64 	%rd43, %rd1, %rd41;
	st.global.f32 	[%rd43], %f54;
	add.s64 	%rd44, %rd40, %rd19;
	add.s64 	%rd45, %rd42, %rd19;
	ld.global.f32 	%f55, [%rd45];
	mul.f32 	%f56, %f11, %f55;
	ld.global.f32 	%f57, [%rd44];
	mul.f32 	%f58, %f57, %f56;
	add.s64 	%rd46, %rd43, %rd19;
	st.global.f32 	[%rd46], %f58;
	add.s32 	%r93, %r114, %r2;
	add.s32 	%r94, %r93, %r2;
	add.s64 	%rd47, %rd44, %rd19;
	add.s64 	%rd48, %rd45, %rd19;
	ld.global.f32 	%f59, [%rd48];
	mul.f32 	%f60, %f11, %f59;
	ld.global.f32 	%f61, [%rd47];
	mul.f32 	%f62, %f61, %f60;
	add.s64 	%rd49, %rd46, %rd19;
	st.global.f32 	[%rd49], %f62;
	add.s32 	%r95, %r94, %r2;
	add.s64 	%rd50, %rd47, %rd19;
	add.s64 	%rd51, %rd48, %rd19;
	ld.global.f32 	%f63, [%rd51];
	mul.f32 	%f64, %f11, %f63;
	ld.global.f32 	%f65, [%rd50];
	mul.f32 	%f66, %f65, %f64;
	add.s64 	%rd52, %rd49, %rd19;
	st.global.f32 	[%rd52], %f66;
	add.s32 	%r114, %r95, %r2;
	setp.lt.s32 	%p23, %r114, %r35;
	@%p23 bra 	$L__BB17_18;
	bra.uni 	$L__BB17_26;

$L__BB17_19:
	@%p1 bra 	$L__BB17_26;

	mul.lo.s32 	%r25, %r1, %r35;
	not.b32 	%r96, %r114;
	add.s32 	%r97, %r96, %r35;
	div.u32 	%r26, %r97, %r2;
	add.s32 	%r98, %r26, 1;
	and.b32  	%r113, %r98, 3;
	setp.eq.s32 	%p25, %r113, 0;
	@%p25 bra 	$L__BB17_23;

	add.s32 	%r99, %r114, %r25;
	mul.wide.s32 	%rd53, %r99, 4;
	add.s64 	%rd68, %rd1, %rd53;
	mul.wide.s32 	%rd21, %r2, 4;
	add.s64 	%rd67, %rd2, %rd53;

$L__BB17_22:
	.pragma "nounroll";
	ld.global.f32 	%f67, [%rd67];
	mul.f32 	%f68, %f11, %f67;
	st.global.f32 	[%rd68], %f68;
	add.s32 	%r114, %r114, %r2;
	add.s64 	%rd68, %rd68, %rd21;
	add.s64 	%rd67, %rd67, %rd21;
	add.s32 	%r113, %r113, -1;
	setp.ne.s32 	%p26, %r113, 0;
	@%p26 bra 	$L__BB17_22;

$L__BB17_23:
	setp.lt.u32 	%p27, %r26, 3;
	@%p27 bra 	$L__BB17_26;

	mul.wide.s32 	%rd27, %r2, 4;

$L__BB17_25:
	add.s32 	%r100, %r114, %r25;
	mul.wide.s32 	%rd54, %r100, 4;
	add.s64 	%rd55, %rd2, %rd54;
	ld.global.f32 	%f69, [%rd55];
	mul.f32 	%f70, %f11, %f69;
	add.s64 	%rd56, %rd1, %rd54;
	st.global.f32 	[%rd56], %f70;
	add.s64 	%rd57, %rd55, %rd27;
	ld.global.f32 	%f71, [%rd57];
	mul.f32 	%f72, %f11, %f71;
	add.s64 	%rd58, %rd56, %rd27;
	st.global.f32 	[%rd58], %f72;
	add.s32 	%r101, %r114, %r2;
	add.s32 	%r102, %r101, %r2;
	add.s64 	%rd59, %rd57, %rd27;
	ld.global.f32 	%f73, [%rd59];
	mul.f32 	%f74, %f11, %f73;
	add.s64 	%rd60, %rd58, %rd27;
	st.global.f32 	[%rd60], %f74;
	add.s32 	%r103, %r102, %r2;
	add.s64 	%rd61, %rd59, %rd27;
	ld.global.f32 	%f75, [%rd61];
	mul.f32 	%f76, %f11, %f75;
	add.s64 	%rd62, %rd60, %rd27;
	st.global.f32 	[%rd62], %f76;
	add.s32 	%r114, %r103, %r2;
	setp.lt.s32 	%p28, %r114, %r35;
	@%p28 bra 	$L__BB17_25;

$L__BB17_26:
	ret;

}
	// .globl	rmsnorm_f64
.visible .entry rmsnorm_f64(
	.param .u64 rmsnorm_f64_param_0,
	.param .u64 rmsnorm_f64_param_1,
	.param .u64 rmsnorm_f64_param_2,
	.param .u32 rmsnorm_f64_param_3,
	.param .f32 rmsnorm_f64_param_4
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<83>;
	.reg .b32 	%r<116>;
	.reg .f64 	%fd<31>;
	.reg .b64 	%rd<69>;
	// demoted variable
	.shared .align 4 .b8 _ZZ7rmsnormIdEvPKT_PS0_S2_ifE5s_sum[128];

	ld.param.u64 	%rd29, [rmsnorm_f64_param_0];
	ld.param.u64 	%rd30, [rmsnorm_f64_param_1];
	ld.param.u64 	%rd28, [rmsnorm_f64_param_2];
	ld.param.u32 	%r35, [rmsnorm_f64_param_3];
	ld.param.f32 	%f12, [rmsnorm_f64_param_4];
	cvta.to.global.u64 	%rd1, %rd30;
	cvta.to.global.u64 	%rd2, %rd29;
	cvta.to.global.u64 	%rd3, %rd28;
	mov.u32 	%r36, %ntid.y;
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %tid.y;
	mad.lo.s32 	%r1, %r37, %r36, %r38;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r114, %tid.x;
	setp.ge.s32 	%p1, %r114, %r35;
	mov.f32 	%f81, 0f00000000;
	@%p1 bra 	$L__BB18_7;

	mul.lo.s32 	%r4, %r1, %r35;
	not.b32 	%r39, %r114;
	add.s32 	%r40, %r39, %r35;
	div.u32 	%r5, %r40, %r2;
	add.s32 	%r41, %r5, 1;
	and.b32  	%r105, %r41, 3;
	setp.eq.s32 	%p2, %r105, 0;
	mov.f32 	%f81, 0f00000000;
	mov.u32 	%r106, %r114;
	@%p2 bra 	$L__BB18_4;

	add.s32 	%r42, %r114, %r4;
	mul.wide.s32 	%rd31, %r42, 8;
	add.s64 	%rd63, %rd2, %rd31;
	mul.wide.s32 	%rd5, %r2, 8;
	mov.f32 	%f81, 0f00000000;
	mov.u32 	%r106, %r114;

$L__BB18_3:
	.pragma "nounroll";
	ld.global.f64 	%fd1, [%rd63];
	cvt.rn.f32.f64 	%f17, %fd1;
	fma.rn.f32 	%f81, %f17, %f17, %f81;
	add.s32 	%r106, %r106, %r2;
	add.s64 	%rd63, %rd63, %rd5;
	add.s32 	%r105, %r105, -1;
	setp.ne.s32 	%p3, %r105, 0;
	@%p3 bra 	$L__BB18_3;

$L__BB18_4:
	setp.lt.u32 	%p4, %r5, 3;
	@%p4 bra 	$L__BB18_7;

	mul.wide.s32 	%rd8, %r2, 8;

$L__BB18_6:
	add.s32 	%r43, %r106, %r4;
	mul.wide.s32 	%rd32, %r43, 8;
	add.s64 	%rd33, %rd2, %rd32;
	ld.global.f64 	%fd2, [%rd33];
	cvt.rn.f32.f64 	%f18, %fd2;
	fma.rn.f32 	%f19, %f18, %f18, %f81;
	add.s64 	%rd34, %rd33, %rd8;
	ld.global.f64 	%fd3, [%rd34];
	cvt.rn.f32.f64 	%f20, %fd3;
	fma.rn.f32 	%f21, %f20, %f20, %f19;
	add.s32 	%r44, %r106, %r2;
	add.s32 	%r45, %r44, %r2;
	add.s64 	%rd35, %rd34, %rd8;
	ld.global.f64 	%fd4, [%rd35];
	cvt.rn.f32.f64 	%f22, %fd4;
	fma.rn.f32 	%f23, %f22, %f22, %f21;
	add.s32 	%r46, %r45, %r2;
	add.s64 	%rd36, %rd35, %rd8;
	ld.global.f64 	%fd5, [%rd36];
	cvt.rn.f32.f64 	%f24, %fd5;
	fma.rn.f32 	%f81, %f24, %f24, %f23;
	add.s32 	%r106, %r46, %r2;
	setp.lt.s32 	%p5, %r106, %r35;
	@%p5 bra 	$L__BB18_6;

$L__BB18_7:
	mov.b32 	%r47, %f81;
	mov.u32 	%r48, 31;
	mov.u32 	%r49, 16;
	mov.u32 	%r50, -1;
	shfl.sync.bfly.b32 	%r51|%p6, %r47, %r49, %r48, %r50;
	mov.b32 	%f25, %r51;
	add.f32 	%f26, %f81, %f25;
	mov.b32 	%r52, %f26;
	mov.u32 	%r53, 8;
	shfl.sync.bfly.b32 	%r54|%p7, %r52, %r53, %r48, %r50;
	mov.b32 	%f27, %r54;
	add.f32 	%f28, %f26, %f27;
	mov.b32 	%r55, %f28;
	mov.u32 	%r56, 4;
	shfl.sync.bfly.b32 	%r57|%p8, %r55, %r56, %r48, %r50;
	mov.b32 	%f29, %r57;
	add.f32 	%f30, %f28, %f29;
	mov.b32 	%r58, %f30;
	mov.u32 	%r59, 2;
	shfl.sync.bfly.b32 	%r60|%p9, %r58, %r59, %r48, %r50;
	mov.b32 	%f31, %r60;
	add.f32 	%f32, %f30, %f31;
	mov.b32 	%r61, %f32;
	mov.u32 	%r62, 1;
	shfl.sync.bfly.b32 	%r63|%p10, %r61, %r62, %r48, %r50;
	mov.b32 	%f33, %r63;
	add.f32 	%f82, %f32, %f33;
	setp.lt.s32 	%p11, %r2, 33;
	@%p11 bra 	$L__BB18_11;

	and.b32  	%r14, %r114, 31;
	setp.ne.s32 	%p12, %r14, 0;
	@%p12 bra 	$L__BB18_10;

	shr.u32 	%r64, %r114, 3;
	and.b32  	%r65, %r64, 536870908;
	mov.u32 	%r66, _ZZ7rmsnormIdEvPKT_PS0_S2_ifE5s_sum;
	add.s32 	%r67, %r66, %r65;
	st.shared.f32 	[%r67], %f82;

$L__BB18_10:
	bar.sync 	0;
	shl.b32 	%r68, %r14, 2;
	mov.u32 	%r69, _ZZ7rmsnormIdEvPKT_PS0_S2_ifE5s_sum;
	add.s32 	%r70, %r69, %r68;
	mov.u32 	%r71, 2;
	ld.shared.f32 	%f34, [%r70];
	mov.b32 	%r72, %f34;
	mov.u32 	%r73, 31;
	mov.u32 	%r74, 16;
	mov.u32 	%r75, -1;
	shfl.sync.bfly.b32 	%r76|%p13, %r72, %r74, %r73, %r75;
	mov.b32 	%f35, %r76;
	add.f32 	%f36, %f34, %f35;
	mov.b32 	%r77, %f36;
	mov.u32 	%r78, 8;
	shfl.sync.bfly.b32 	%r79|%p14, %r77, %r78, %r73, %r75;
	mov.b32 	%f37, %r79;
	add.f32 	%f38, %f36, %f37;
	mov.b32 	%r80, %f38;
	mov.u32 	%r81, 4;
	shfl.sync.bfly.b32 	%r82|%p15, %r80, %r81, %r73, %r75;
	mov.b32 	%f39, %r82;
	add.f32 	%f40, %f38, %f39;
	mov.b32 	%r83, %f40;
	shfl.sync.bfly.b32 	%r84|%p16, %r83, %r71, %r73, %r75;
	mov.b32 	%f41, %r84;
	add.f32 	%f42, %f40, %f41;
	mov.b32 	%r85, %f42;
	mov.u32 	%r86, 1;
	shfl.sync.bfly.b32 	%r87|%p17, %r85, %r86, %r73, %r75;
	mov.b32 	%f43, %r87;
	add.f32 	%f82, %f42, %f43;

$L__BB18_11:
	cvt.rn.f32.s32 	%f44, %r35;
	div.rn.f32 	%f45, %f82, %f44;
	add.f32 	%f46, %f45, %f12;
	rsqrt.approx.f32 	%f11, %f46;
	setp.eq.s64 	%p18, %rd28, 0;
	@%p18 bra 	$L__BB18_19;

	@%p1 bra 	$L__BB18_26;

	mul.lo.s32 	%r15, %r1, %r35;
	not.b32 	%r88, %r114;
	add.s32 	%r89, %r88, %r35;
	div.u32 	%r16, %r89, %r2;
	add.s32 	%r90, %r16, 1;
	and.b32  	%r109, %r90, 3;
	setp.eq.s32 	%p20, %r109, 0;
	@%p20 bra 	$L__BB18_16;

	add.s32 	%r91, %r114, %r15;
	mul.wide.s32 	%rd37, %r91, 8;
	add.s64 	%rd66, %rd1, %rd37;
	mul.wide.s32 	%rd10, %r2, 8;
	add.s64 	%rd65, %rd2, %rd37;
	mul.wide.s32 	%rd38, %r114, 8;
	add.s64 	%rd64, %rd3, %rd38;

$L__BB18_15:
	.pragma "nounroll";
	ld.global.f64 	%fd6, [%rd64];
	cvt.rn.f32.f64 	%f47, %fd6;
	ld.global.f64 	%fd7, [%rd65];
	cvt.rn.f32.f64 	%f48, %fd7;
	mul.f32 	%f49, %f11, %f48;
	mul.f32 	%f50, %f49, %f47;
	cvt.f64.f32 	%fd8, %f50;
	st.global.f64 	[%rd66], %fd8;
	add.s32 	%r114, %r114, %r2;
	add.s64 	%rd66, %rd66, %rd10;
	add.s64 	%rd65, %rd65, %rd10;
	add.s64 	%rd64, %rd64, %rd10;
	add.s32 	%r109, %r109, -1;
	setp.ne.s32 	%p21, %r109, 0;
	@%p21 bra 	$L__BB18_15;

$L__BB18_16:
	setp.lt.u32 	%p22, %r16, 3;
	@%p22 bra 	$L__BB18_26;

	mul.wide.s32 	%rd19, %r2, 8;

$L__BB18_18:
	mul.wide.s32 	%rd39, %r114, 8;
	add.s64 	%rd40, %rd3, %rd39;
	ld.global.f64 	%fd9, [%rd40];
	cvt.rn.f32.f64 	%f51, %fd9;
	add.s32 	%r92, %r114, %r15;
	mul.wide.s32 	%rd41, %r92, 8;
	add.s64 	%rd42, %rd2, %rd41;
	ld.global.f64 	%fd10, [%rd42];
	cvt.rn.f32.f64 	%f52, %fd10;
	mul.f32 	%f53, %f11, %f52;
	mul.f32 	%f54, %f53, %f51;
	cvt.f64.f32 	%fd11, %f54;
	add.s64 	%rd43, %rd1, %rd41;
	st.global.f64 	[%rd43], %fd11;
	add.s64 	%rd44, %rd40, %rd19;
	ld.global.f64 	%fd12, [%rd44];
	cvt.rn.f32.f64 	%f55, %fd12;
	add.s64 	%rd45, %rd42, %rd19;
	ld.global.f64 	%fd13, [%rd45];
	cvt.rn.f32.f64 	%f56, %fd13;
	mul.f32 	%f57, %f11, %f56;
	mul.f32 	%f58, %f57, %f55;
	cvt.f64.f32 	%fd14, %f58;
	add.s64 	%rd46, %rd43, %rd19;
	st.global.f64 	[%rd46], %fd14;
	add.s32 	%r93, %r114, %r2;
	add.s32 	%r94, %r93, %r2;
	add.s64 	%rd47, %rd44, %rd19;
	ld.global.f64 	%fd15, [%rd47];
	cvt.rn.f32.f64 	%f59, %fd15;
	add.s64 	%rd48, %rd45, %rd19;
	ld.global.f64 	%fd16, [%rd48];
	cvt.rn.f32.f64 	%f60, %fd16;
	mul.f32 	%f61, %f11, %f60;
	mul.f32 	%f62, %f61, %f59;
	cvt.f64.f32 	%fd17, %f62;
	add.s64 	%rd49, %rd46, %rd19;
	st.global.f64 	[%rd49], %fd17;
	add.s32 	%r95, %r94, %r2;
	add.s64 	%rd50, %rd47, %rd19;
	ld.global.f64 	%fd18, [%rd50];
	cvt.rn.f32.f64 	%f63, %fd18;
	add.s64 	%rd51, %rd48, %rd19;
	ld.global.f64 	%fd19, [%rd51];
	cvt.rn.f32.f64 	%f64, %fd19;
	mul.f32 	%f65, %f11, %f64;
	mul.f32 	%f66, %f65, %f63;
	cvt.f64.f32 	%fd20, %f66;
	add.s64 	%rd52, %rd49, %rd19;
	st.global.f64 	[%rd52], %fd20;
	add.s32 	%r114, %r95, %r2;
	setp.lt.s32 	%p23, %r114, %r35;
	@%p23 bra 	$L__BB18_18;
	bra.uni 	$L__BB18_26;

$L__BB18_19:
	@%p1 bra 	$L__BB18_26;

	mul.lo.s32 	%r25, %r1, %r35;
	not.b32 	%r96, %r114;
	add.s32 	%r97, %r96, %r35;
	div.u32 	%r26, %r97, %r2;
	add.s32 	%r98, %r26, 1;
	and.b32  	%r113, %r98, 3;
	setp.eq.s32 	%p25, %r113, 0;
	@%p25 bra 	$L__BB18_23;

	add.s32 	%r99, %r114, %r25;
	mul.wide.s32 	%rd53, %r99, 8;
	add.s64 	%rd68, %rd1, %rd53;
	mul.wide.s32 	%rd21, %r2, 8;
	add.s64 	%rd67, %rd2, %rd53;

$L__BB18_22:
	.pragma "nounroll";
	ld.global.f64 	%fd21, [%rd67];
	cvt.rn.f32.f64 	%f67, %fd21;
	mul.f32 	%f68, %f11, %f67;
	cvt.f64.f32 	%fd22, %f68;
	st.global.f64 	[%rd68], %fd22;
	add.s32 	%r114, %r114, %r2;
	add.s64 	%rd68, %rd68, %rd21;
	add.s64 	%rd67, %rd67, %rd21;
	add.s32 	%r113, %r113, -1;
	setp.ne.s32 	%p26, %r113, 0;
	@%p26 bra 	$L__BB18_22;

$L__BB18_23:
	setp.lt.u32 	%p27, %r26, 3;
	@%p27 bra 	$L__BB18_26;

	mul.wide.s32 	%rd27, %r2, 8;

$L__BB18_25:
	add.s32 	%r100, %r114, %r25;
	mul.wide.s32 	%rd54, %r100, 8;
	add.s64 	%rd55, %rd2, %rd54;
	ld.global.f64 	%fd23, [%rd55];
	cvt.rn.f32.f64 	%f69, %fd23;
	mul.f32 	%f70, %f11, %f69;
	cvt.f64.f32 	%fd24, %f70;
	add.s64 	%rd56, %rd1, %rd54;
	st.global.f64 	[%rd56], %fd24;
	add.s64 	%rd57, %rd55, %rd27;
	ld.global.f64 	%fd25, [%rd57];
	cvt.rn.f32.f64 	%f71, %fd25;
	mul.f32 	%f72, %f11, %f71;
	cvt.f64.f32 	%fd26, %f72;
	add.s64 	%rd58, %rd56, %rd27;
	st.global.f64 	[%rd58], %fd26;
	add.s32 	%r101, %r114, %r2;
	add.s32 	%r102, %r101, %r2;
	add.s64 	%rd59, %rd57, %rd27;
	ld.global.f64 	%fd27, [%rd59];
	cvt.rn.f32.f64 	%f73, %fd27;
	mul.f32 	%f74, %f11, %f73;
	cvt.f64.f32 	%fd28, %f74;
	add.s64 	%rd60, %rd58, %rd27;
	st.global.f64 	[%rd60], %fd28;
	add.s32 	%r103, %r102, %r2;
	add.s64 	%rd61, %rd59, %rd27;
	ld.global.f64 	%fd29, [%rd61];
	cvt.rn.f32.f64 	%f75, %fd29;
	mul.f32 	%f76, %f11, %f75;
	cvt.f64.f32 	%fd30, %f76;
	add.s64 	%rd62, %rd60, %rd27;
	st.global.f64 	[%rd62], %fd30;
	add.s32 	%r114, %r103, %r2;
	setp.lt.s32 	%p28, %r114, %r35;
	@%p28 bra 	$L__BB18_25;

$L__BB18_26:
	ret;

}
	// .globl	layernorm_f32
.visible .entry layernorm_f32(
	.param .u64 layernorm_f32_param_0,
	.param .u64 layernorm_f32_param_1,
	.param .u64 layernorm_f32_param_2,
	.param .u64 layernorm_f32_param_3,
	.param .u32 layernorm_f32_param_4,
	.param .f32 layernorm_f32_param_5
)
{
	.reg .pred 	%p<55>;
	.reg .f32 	%f<189>;
	.reg .b32 	%r<211>;
	.reg .b64 	%rd<147>;
	// demoted variable
	.shared .align 8 .b8 _ZZ9layernormIfEvPKT_PS0_S2_S2_ifE5s_sum[256];

	ld.param.u64 	%rd60, [layernorm_f32_param_0];
	ld.param.u64 	%rd57, [layernorm_f32_param_1];
	ld.param.u64 	%rd58, [layernorm_f32_param_2];
	ld.param.u64 	%rd59, [layernorm_f32_param_3];
	ld.param.u32 	%r63, [layernorm_f32_param_4];
	ld.param.f32 	%f23, [layernorm_f32_param_5];
	cvta.to.global.u64 	%rd1, %rd60;
	cvta.to.global.u64 	%rd2, %rd59;
	cvta.to.global.u64 	%rd3, %rd58;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r193, %tid.x;
	setp.ge.s32 	%p1, %r193, %r63;
	mov.f32 	%f185, 0f00000000;
	mov.f32 	%f186, %f185;
	@%p1 bra 	$L__BB19_7;

	mov.u32 	%r64, %tid.y;
	mov.u32 	%r65, %ctaid.x;
	mov.u32 	%r66, %ntid.y;
	mad.lo.s32 	%r67, %r65, %r66, %r64;
	mul.lo.s32 	%r3, %r67, %r63;
	not.b32 	%r68, %r193;
	add.s32 	%r69, %r68, %r63;
	div.u32 	%r4, %r69, %r1;
	add.s32 	%r70, %r4, 1;
	and.b32  	%r192, %r70, 3;
	setp.eq.s32 	%p2, %r192, 0;
	mov.f32 	%f186, 0f00000000;
	mov.f32 	%f185, %f186;
	@%p2 bra 	$L__BB19_4;

	mov.u32 	%r193, %tid.x;
	add.s32 	%r71, %r193, %r3;
	mul.wide.s32 	%rd61, %r71, 4;
	add.s64 	%rd134, %rd1, %rd61;
	mul.wide.s32 	%rd5, %r1, 4;
	mov.f32 	%f186, 0f00000000;

$L__BB19_3:
	.pragma "nounroll";
	ld.global.f32 	%f31, [%rd134];
	add.f32 	%f186, %f186, %f31;
	fma.rn.f32 	%f185, %f31, %f31, %f185;
	add.s32 	%r193, %r193, %r1;
	add.s64 	%rd134, %rd134, %rd5;
	add.s32 	%r192, %r192, -1;
	setp.ne.s32 	%p3, %r192, 0;
	@%p3 bra 	$L__BB19_3;

$L__BB19_4:
	setp.lt.u32 	%p4, %r4, 3;
	@%p4 bra 	$L__BB19_7;

	mul.wide.s32 	%rd8, %r1, 4;

$L__BB19_6:
	add.s32 	%r72, %r193, %r3;
	mul.wide.s32 	%rd62, %r72, 4;
	add.s64 	%rd63, %rd1, %rd62;
	ld.global.f32 	%f32, [%rd63];
	add.f32 	%f33, %f186, %f32;
	fma.rn.f32 	%f34, %f32, %f32, %f185;
	add.s64 	%rd64, %rd63, %rd8;
	ld.global.f32 	%f35, [%rd64];
	add.f32 	%f36, %f33, %f35;
	fma.rn.f32 	%f37, %f35, %f35, %f34;
	add.s32 	%r73, %r193, %r1;
	add.s32 	%r74, %r73, %r1;
	add.s64 	%rd65, %rd64, %rd8;
	ld.global.f32 	%f38, [%rd65];
	add.f32 	%f39, %f36, %f38;
	fma.rn.f32 	%f40, %f38, %f38, %f37;
	add.s32 	%r75, %r74, %r1;
	add.s64 	%rd66, %rd65, %rd8;
	ld.global.f32 	%f41, [%rd66];
	add.f32 	%f186, %f39, %f41;
	fma.rn.f32 	%f185, %f41, %f41, %f40;
	add.s32 	%r193, %r75, %r1;
	setp.lt.s32 	%p5, %r193, %r63;
	@%p5 bra 	$L__BB19_6;

$L__BB19_7:
	mov.b32 	%r76, %f186;
	mov.u32 	%r77, 31;
	mov.u32 	%r78, 16;
	mov.u32 	%r79, -1;
	shfl.sync.bfly.b32 	%r80|%p6, %r76, %r78, %r77, %r79;
	mov.b32 	%f42, %r80;
	add.f32 	%f43, %f186, %f42;
	mov.b32 	%r81, %f185;
	shfl.sync.bfly.b32 	%r82|%p7, %r81, %r78, %r77, %r79;
	mov.b32 	%f44, %r82;
	add.f32 	%f45, %f185, %f44;
	mov.b32 	%r83, %f43;
	mov.u32 	%r84, 8;
	shfl.sync.bfly.b32 	%r85|%p8, %r83, %r84, %r77, %r79;
	mov.b32 	%f46, %r85;
	add.f32 	%f47, %f43, %f46;
	mov.b32 	%r86, %f45;
	shfl.sync.bfly.b32 	%r87|%p9, %r86, %r84, %r77, %r79;
	mov.b32 	%f48, %r87;
	add.f32 	%f49, %f45, %f48;
	mov.b32 	%r88, %f47;
	mov.u32 	%r89, 4;
	shfl.sync.bfly.b32 	%r90|%p10, %r88, %r89, %r77, %r79;
	mov.b32 	%f50, %r90;
	add.f32 	%f51, %f47, %f50;
	mov.b32 	%r91, %f49;
	shfl.sync.bfly.b32 	%r92|%p11, %r91, %r89, %r77, %r79;
	mov.b32 	%f52, %r92;
	add.f32 	%f53, %f49, %f52;
	mov.b32 	%r93, %f51;
	mov.u32 	%r94, 2;
	shfl.sync.bfly.b32 	%r95|%p12, %r93, %r94, %r77, %r79;
	mov.b32 	%f54, %r95;
	add.f32 	%f55, %f51, %f54;
	mov.b32 	%r96, %f53;
	shfl.sync.bfly.b32 	%r97|%p13, %r96, %r94, %r77, %r79;
	mov.b32 	%f56, %r97;
	add.f32 	%f57, %f53, %f56;
	mov.b32 	%r98, %f55;
	mov.u32 	%r99, 1;
	shfl.sync.bfly.b32 	%r100|%p14, %r98, %r99, %r77, %r79;
	mov.b32 	%f58, %r100;
	add.f32 	%f188, %f55, %f58;
	mov.b32 	%r101, %f57;
	shfl.sync.bfly.b32 	%r102|%p15, %r101, %r99, %r77, %r79;
	mov.b32 	%f59, %r102;
	add.f32 	%f187, %f57, %f59;
	setp.lt.s32 	%p16, %r1, 33;
	@%p16 bra 	$L__BB19_11;

	mov.u32 	%r103, %tid.x;
	and.b32  	%r14, %r103, 31;
	setp.ne.s32 	%p17, %r14, 0;
	@%p17 bra 	$L__BB19_10;

	shr.u32 	%r105, %r103, 2;
	and.b32  	%r106, %r105, 1073741816;
	mov.u32 	%r107, _ZZ9layernormIfEvPKT_PS0_S2_S2_ifE5s_sum;
	add.s32 	%r108, %r107, %r106;
	st.shared.v2.f32 	[%r108], {%f188, %f187};

$L__BB19_10:
	bar.sync 	0;
	shl.b32 	%r109, %r14, 3;
	mov.u32 	%r110, _ZZ9layernormIfEvPKT_PS0_S2_S2_ifE5s_sum;
	add.s32 	%r111, %r110, %r109;
	ld.shared.v2.f32 	{%f60, %f61}, [%r111];
	mov.u32 	%r112, 1;
	mov.b32 	%r113, %f60;
	mov.u32 	%r114, 31;
	mov.u32 	%r115, 16;
	mov.u32 	%r116, -1;
	shfl.sync.bfly.b32 	%r117|%p18, %r113, %r115, %r114, %r116;
	mov.b32 	%f64, %r117;
	add.f32 	%f65, %f60, %f64;
	mov.b32 	%r118, %f61;
	shfl.sync.bfly.b32 	%r119|%p19, %r118, %r115, %r114, %r116;
	mov.b32 	%f66, %r119;
	add.f32 	%f67, %f61, %f66;
	mov.b32 	%r120, %f65;
	mov.u32 	%r121, 8;
	shfl.sync.bfly.b32 	%r122|%p20, %r120, %r121, %r114, %r116;
	mov.b32 	%f68, %r122;
	add.f32 	%f69, %f65, %f68;
	mov.b32 	%r123, %f67;
	shfl.sync.bfly.b32 	%r124|%p21, %r123, %r121, %r114, %r116;
	mov.b32 	%f70, %r124;
	add.f32 	%f71, %f67, %f70;
	mov.b32 	%r125, %f69;
	mov.u32 	%r126, 4;
	shfl.sync.bfly.b32 	%r127|%p22, %r125, %r126, %r114, %r116;
	mov.b32 	%f72, %r127;
	add.f32 	%f73, %f69, %f72;
	mov.b32 	%r128, %f71;
	shfl.sync.bfly.b32 	%r129|%p23, %r128, %r126, %r114, %r116;
	mov.b32 	%f74, %r129;
	add.f32 	%f75, %f71, %f74;
	mov.b32 	%r130, %f73;
	mov.u32 	%r131, 2;
	shfl.sync.bfly.b32 	%r132|%p24, %r130, %r131, %r114, %r116;
	mov.b32 	%f76, %r132;
	add.f32 	%f77, %f73, %f76;
	mov.b32 	%r133, %f75;
	shfl.sync.bfly.b32 	%r134|%p25, %r133, %r131, %r114, %r116;
	mov.b32 	%f78, %r134;
	add.f32 	%f79, %f75, %f78;
	mov.b32 	%r135, %f77;
	shfl.sync.bfly.b32 	%r136|%p26, %r135, %r112, %r114, %r116;
	mov.b32 	%f80, %r136;
	add.f32 	%f188, %f77, %f80;
	mov.b32 	%r137, %f79;
	shfl.sync.bfly.b32 	%r138|%p27, %r137, %r112, %r114, %r116;
	mov.b32 	%f81, %r138;
	add.f32 	%f187, %f79, %f81;

$L__BB19_11:
	cvt.rn.f32.s32 	%f82, %r63;
	div.rn.f32 	%f21, %f188, %f82;
	div.rn.f32 	%f83, %f187, %f82;
	mul.f32 	%f84, %f21, %f21;
	sub.f32 	%f85, %f83, %f84;
	add.f32 	%f86, %f85, %f23;
	rsqrt.approx.f32 	%f22, %f86;
	or.b64  	%rd67, %rd58, %rd59;
	setp.eq.s64 	%p28, %rd67, 0;
	@%p28 bra 	$L__BB19_35;
	bra.uni 	$L__BB19_12;

$L__BB19_35:
	mov.u32 	%r209, %tid.x;
	setp.ge.s32 	%p50, %r209, %r63;
	@%p50 bra 	$L__BB19_42;

	mov.u32 	%r179, %ctaid.x;
	mov.u32 	%r180, %ntid.y;
	mov.u32 	%r181, %tid.y;
	mad.lo.s32 	%r182, %r179, %r180, %r181;
	mul.lo.s32 	%r51, %r182, %r63;
	not.b32 	%r183, %r209;
	add.s32 	%r184, %r183, %r63;
	div.u32 	%r53, %r184, %r1;
	add.s32 	%r185, %r53, 1;
	and.b32  	%r208, %r185, 3;
	setp.eq.s32 	%p51, %r208, 0;
	@%p51 bra 	$L__BB19_39;

	mov.u32 	%r209, %tid.x;
	add.s32 	%r186, %r209, %r51;
	cvta.to.global.u64 	%rd123, %rd57;
	mul.wide.s32 	%rd124, %r186, 4;
	add.s64 	%rd146, %rd123, %rd124;
	mul.wide.s32 	%rd49, %r1, 4;
	add.s64 	%rd145, %rd1, %rd124;

$L__BB19_38:
	.pragma "nounroll";
	ld.global.f32 	%f162, [%rd145];
	sub.f32 	%f163, %f162, %f21;
	mul.f32 	%f164, %f22, %f163;
	st.global.f32 	[%rd146], %f164;
	add.s32 	%r209, %r209, %r1;
	add.s64 	%rd146, %rd146, %rd49;
	add.s64 	%rd145, %rd145, %rd49;
	add.s32 	%r208, %r208, -1;
	setp.ne.s32 	%p52, %r208, 0;
	@%p52 bra 	$L__BB19_38;

$L__BB19_39:
	setp.lt.u32 	%p53, %r53, 3;
	@%p53 bra 	$L__BB19_42;

	mul.wide.s32 	%rd55, %r1, 4;
	cvta.to.global.u64 	%rd56, %rd57;

$L__BB19_41:
	add.s32 	%r187, %r209, %r51;
	mul.wide.s32 	%rd125, %r187, 4;
	add.s64 	%rd126, %rd1, %rd125;
	ld.global.f32 	%f165, [%rd126];
	sub.f32 	%f166, %f165, %f21;
	mul.f32 	%f167, %f22, %f166;
	add.s64 	%rd127, %rd56, %rd125;
	st.global.f32 	[%rd127], %f167;
	add.s64 	%rd128, %rd126, %rd55;
	ld.global.f32 	%f168, [%rd128];
	sub.f32 	%f169, %f168, %f21;
	mul.f32 	%f170, %f22, %f169;
	add.s64 	%rd129, %rd127, %rd55;
	st.global.f32 	[%rd129], %f170;
	add.s32 	%r188, %r209, %r1;
	add.s32 	%r189, %r188, %r1;
	add.s64 	%rd130, %rd128, %rd55;
	ld.global.f32 	%f171, [%rd130];
	sub.f32 	%f172, %f171, %f21;
	mul.f32 	%f173, %f22, %f172;
	add.s64 	%rd131, %rd129, %rd55;
	st.global.f32 	[%rd131], %f173;
	add.s32 	%r190, %r189, %r1;
	add.s64 	%rd132, %rd130, %rd55;
	ld.global.f32 	%f174, [%rd132];
	sub.f32 	%f175, %f174, %f21;
	mul.f32 	%f176, %f22, %f175;
	add.s64 	%rd133, %rd131, %rd55;
	st.global.f32 	[%rd133], %f176;
	add.s32 	%r209, %r190, %r1;
	setp.lt.s32 	%p54, %r209, %r63;
	@%p54 bra 	$L__BB19_41;
	bra.uni 	$L__BB19_42;

$L__BB19_12:
	setp.eq.s64 	%p29, %rd58, 0;
	setp.ne.s64 	%p30, %rd59, 0;
	and.pred  	%p31, %p29, %p30;
	@%p31 bra 	$L__BB19_28;
	bra.uni 	$L__BB19_13;

$L__BB19_28:
	mov.u32 	%r205, %tid.x;
	setp.ge.s32 	%p45, %r205, %r63;
	@%p45 bra 	$L__BB19_42;

	mov.u32 	%r166, %ctaid.x;
	mov.u32 	%r167, %ntid.y;
	mov.u32 	%r168, %tid.y;
	mad.lo.s32 	%r169, %r166, %r167, %r168;
	mul.lo.s32 	%r39, %r169, %r63;
	not.b32 	%r170, %r205;
	add.s32 	%r171, %r170, %r63;
	div.u32 	%r41, %r171, %r1;
	add.s32 	%r172, %r41, 1;
	and.b32  	%r204, %r172, 3;
	setp.eq.s32 	%p46, %r204, 0;
	@%p46 bra 	$L__BB19_32;

	mov.u32 	%r205, %tid.x;
	add.s32 	%r173, %r205, %r39;
	cvta.to.global.u64 	%rd106, %rd57;
	mul.wide.s32 	%rd107, %r173, 4;
	add.s64 	%rd144, %rd106, %rd107;
	mul.wide.s32 	%rd37, %r1, 4;
	add.s64 	%rd143, %rd1, %rd107;
	mul.wide.s32 	%rd108, %r205, 4;
	add.s64 	%rd142, %rd2, %rd108;

$L__BB19_31:
	.pragma "nounroll";
	ld.global.f32 	%f142, [%rd143];
	sub.f32 	%f143, %f142, %f21;
	ld.global.f32 	%f144, [%rd142];
	fma.rn.f32 	%f145, %f22, %f143, %f144;
	st.global.f32 	[%rd144], %f145;
	add.s32 	%r205, %r205, %r1;
	add.s64 	%rd144, %rd144, %rd37;
	add.s64 	%rd143, %rd143, %rd37;
	add.s64 	%rd142, %rd142, %rd37;
	add.s32 	%r204, %r204, -1;
	setp.ne.s32 	%p47, %r204, 0;
	@%p47 bra 	$L__BB19_31;

$L__BB19_32:
	setp.lt.u32 	%p48, %r41, 3;
	@%p48 bra 	$L__BB19_42;

	mul.wide.s32 	%rd46, %r1, 4;
	cvta.to.global.u64 	%rd47, %rd57;

$L__BB19_34:
	mul.wide.s32 	%rd109, %r205, 4;
	add.s64 	%rd110, %rd2, %rd109;
	add.s32 	%r174, %r205, %r39;
	mul.wide.s32 	%rd111, %r174, 4;
	add.s64 	%rd112, %rd1, %rd111;
	ld.global.f32 	%f146, [%rd112];
	sub.f32 	%f147, %f146, %f21;
	ld.global.f32 	%f148, [%rd110];
	fma.rn.f32 	%f149, %f22, %f147, %f148;
	add.s64 	%rd113, %rd47, %rd111;
	st.global.f32 	[%rd113], %f149;
	add.s64 	%rd114, %rd110, %rd46;
	add.s64 	%rd115, %rd112, %rd46;
	ld.global.f32 	%f150, [%rd115];
	sub.f32 	%f151, %f150, %f21;
	ld.global.f32 	%f152, [%rd114];
	fma.rn.f32 	%f153, %f22, %f151, %f152;
	add.s64 	%rd116, %rd113, %rd46;
	st.global.f32 	[%rd116], %f153;
	add.s32 	%r175, %r205, %r1;
	add.s32 	%r176, %r175, %r1;
	add.s64 	%rd117, %rd114, %rd46;
	add.s64 	%rd118, %rd115, %rd46;
	ld.global.f32 	%f154, [%rd118];
	sub.f32 	%f155, %f154, %f21;
	ld.global.f32 	%f156, [%rd117];
	fma.rn.f32 	%f157, %f22, %f155, %f156;
	add.s64 	%rd119, %rd116, %rd46;
	st.global.f32 	[%rd119], %f157;
	add.s32 	%r177, %r176, %r1;
	add.s64 	%rd120, %rd117, %rd46;
	add.s64 	%rd121, %rd118, %rd46;
	ld.global.f32 	%f158, [%rd121];
	sub.f32 	%f159, %f158, %f21;
	ld.global.f32 	%f160, [%rd120];
	fma.rn.f32 	%f161, %f22, %f159, %f160;
	add.s64 	%rd122, %rd119, %rd46;
	st.global.f32 	[%rd122], %f161;
	add.s32 	%r205, %r177, %r1;
	setp.lt.s32 	%p49, %r205, %r63;
	@%p49 bra 	$L__BB19_34;
	bra.uni 	$L__BB19_42;

$L__BB19_13:
	setp.eq.s64 	%p32, %rd59, 0;
	setp.ne.s64 	%p33, %rd58, 0;
	and.pred  	%p34, %p33, %p32;
	@%p34 bra 	$L__BB19_21;
	bra.uni 	$L__BB19_14;

$L__BB19_21:
	mov.u32 	%r201, %tid.x;
	setp.ge.s32 	%p40, %r201, %r63;
	@%p40 bra 	$L__BB19_42;

	mov.u32 	%r153, %ctaid.x;
	mov.u32 	%r154, %ntid.y;
	mov.u32 	%r155, %tid.y;
	mad.lo.s32 	%r156, %r153, %r154, %r155;
	mul.lo.s32 	%r27, %r156, %r63;
	not.b32 	%r157, %r201;
	add.s32 	%r158, %r157, %r63;
	div.u32 	%r29, %r158, %r1;
	add.s32 	%r159, %r29, 1;
	and.b32  	%r200, %r159, 3;
	setp.eq.s32 	%p41, %r200, 0;
	@%p41 bra 	$L__BB19_25;

	mov.u32 	%r201, %tid.x;
	add.s32 	%r160, %r201, %r27;
	cvta.to.global.u64 	%rd89, %rd57;
	mul.wide.s32 	%rd90, %r160, 4;
	add.s64 	%rd141, %rd89, %rd90;
	mul.wide.s32 	%rd25, %r1, 4;
	add.s64 	%rd140, %rd1, %rd90;
	mul.wide.s32 	%rd91, %r201, 4;
	add.s64 	%rd139, %rd3, %rd91;

$L__BB19_24:
	.pragma "nounroll";
	ld.global.f32 	%f117, [%rd140];
	sub.f32 	%f118, %f117, %f21;
	mul.f32 	%f119, %f22, %f118;
	ld.global.f32 	%f120, [%rd139];
	mul.f32 	%f121, %f120, %f119;
	st.global.f32 	[%rd141], %f121;
	add.s32 	%r201, %r201, %r1;
	add.s64 	%rd141, %rd141, %rd25;
	add.s64 	%rd140, %rd140, %rd25;
	add.s64 	%rd139, %rd139, %rd25;
	add.s32 	%r200, %r200, -1;
	setp.ne.s32 	%p42, %r200, 0;
	@%p42 bra 	$L__BB19_24;

$L__BB19_25:
	setp.lt.u32 	%p43, %r29, 3;
	@%p43 bra 	$L__BB19_42;

	mul.wide.s32 	%rd34, %r1, 4;
	cvta.to.global.u64 	%rd35, %rd57;

$L__BB19_27:
	mul.wide.s32 	%rd92, %r201, 4;
	add.s64 	%rd93, %rd3, %rd92;
	add.s32 	%r161, %r201, %r27;
	mul.wide.s32 	%rd94, %r161, 4;
	add.s64 	%rd95, %rd1, %rd94;
	ld.global.f32 	%f122, [%rd95];
	sub.f32 	%f123, %f122, %f21;
	mul.f32 	%f124, %f22, %f123;
	ld.global.f32 	%f125, [%rd93];
	mul.f32 	%f126, %f125, %f124;
	add.s64 	%rd96, %rd35, %rd94;
	st.global.f32 	[%rd96], %f126;
	add.s64 	%rd97, %rd93, %rd34;
	add.s64 	%rd98, %rd95, %rd34;
	ld.global.f32 	%f127, [%rd98];
	sub.f32 	%f128, %f127, %f21;
	mul.f32 	%f129, %f22, %f128;
	ld.global.f32 	%f130, [%rd97];
	mul.f32 	%f131, %f130, %f129;
	add.s64 	%rd99, %rd96, %rd34;
	st.global.f32 	[%rd99], %f131;
	add.s32 	%r162, %r201, %r1;
	add.s32 	%r163, %r162, %r1;
	add.s64 	%rd100, %rd97, %rd34;
	add.s64 	%rd101, %rd98, %rd34;
	ld.global.f32 	%f132, [%rd101];
	sub.f32 	%f133, %f132, %f21;
	mul.f32 	%f134, %f22, %f133;
	ld.global.f32 	%f135, [%rd100];
	mul.f32 	%f136, %f135, %f134;
	add.s64 	%rd102, %rd99, %rd34;
	st.global.f32 	[%rd102], %f136;
	add.s32 	%r164, %r163, %r1;
	add.s64 	%rd103, %rd100, %rd34;
	add.s64 	%rd104, %rd101, %rd34;
	ld.global.f32 	%f137, [%rd104];
	sub.f32 	%f138, %f137, %f21;
	mul.f32 	%f139, %f22, %f138;
	ld.global.f32 	%f140, [%rd103];
	mul.f32 	%f141, %f140, %f139;
	add.s64 	%rd105, %rd102, %rd34;
	st.global.f32 	[%rd105], %f141;
	add.s32 	%r201, %r164, %r1;
	setp.lt.s32 	%p44, %r201, %r63;
	@%p44 bra 	$L__BB19_27;
	bra.uni 	$L__BB19_42;

$L__BB19_14:
	mov.u32 	%r197, %tid.x;
	setp.ge.s32 	%p35, %r197, %r63;
	@%p35 bra 	$L__BB19_42;

	mov.u32 	%r140, %ctaid.x;
	mov.u32 	%r141, %ntid.y;
	mov.u32 	%r142, %tid.y;
	mad.lo.s32 	%r143, %r140, %r141, %r142;
	mul.lo.s32 	%r15, %r143, %r63;
	not.b32 	%r144, %r197;
	add.s32 	%r145, %r144, %r63;
	div.u32 	%r17, %r145, %r1;
	add.s32 	%r146, %r17, 1;
	and.b32  	%r196, %r146, 3;
	setp.eq.s32 	%p36, %r196, 0;
	@%p36 bra 	$L__BB19_18;

	mov.u32 	%r197, %tid.x;
	add.s32 	%r147, %r197, %r15;
	cvta.to.global.u64 	%rd68, %rd57;
	mul.wide.s32 	%rd69, %r147, 4;
	add.s64 	%rd138, %rd68, %rd69;
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd137, %rd1, %rd69;
	mul.wide.s32 	%rd70, %r197, 4;
	add.s64 	%rd136, %rd2, %rd70;
	add.s64 	%rd135, %rd3, %rd70;

$L__BB19_17:
	.pragma "nounroll";
	ld.global.f32 	%f87, [%rd137];
	sub.f32 	%f88, %f87, %f21;
	mul.f32 	%f89, %f22, %f88;
	ld.global.f32 	%f90, [%rd135];
	ld.global.f32 	%f91, [%rd136];
	fma.rn.f32 	%f92, %f90, %f89, %f91;
	st.global.f32 	[%rd138], %f92;
	add.s32 	%r197, %r197, %r1;
	add.s64 	%rd138, %rd138, %rd10;
	add.s64 	%rd137, %rd137, %rd10;
	add.s64 	%rd136, %rd136, %rd10;
	add.s64 	%rd135, %rd135, %rd10;
	add.s32 	%r196, %r196, -1;
	setp.ne.s32 	%p37, %r196, 0;
	@%p37 bra 	$L__BB19_17;

$L__BB19_18:
	setp.lt.u32 	%p38, %r17, 3;
	@%p38 bra 	$L__BB19_42;

	mul.wide.s32 	%rd22, %r1, 4;
	cvta.to.global.u64 	%rd23, %rd57;

$L__BB19_20:
	mul.wide.s32 	%rd71, %r197, 4;
	add.s64 	%rd72, %rd3, %rd71;
	add.s64 	%rd73, %rd2, %rd71;
	add.s32 	%r148, %r197, %r15;
	mul.wide.s32 	%rd74, %r148, 4;
	add.s64 	%rd75, %rd1, %rd74;
	ld.global.f32 	%f93, [%rd75];
	sub.f32 	%f94, %f93, %f21;
	mul.f32 	%f95, %f22, %f94;
	ld.global.f32 	%f96, [%rd72];
	ld.global.f32 	%f97, [%rd73];
	fma.rn.f32 	%f98, %f96, %f95, %f97;
	add.s64 	%rd76, %rd23, %rd74;
	st.global.f32 	[%rd76], %f98;
	add.s64 	%rd77, %rd72, %rd22;
	add.s64 	%rd78, %rd73, %rd22;
	add.s64 	%rd79, %rd75, %rd22;
	ld.global.f32 	%f99, [%rd79];
	sub.f32 	%f100, %f99, %f21;
	mul.f32 	%f101, %f22, %f100;
	ld.global.f32 	%f102, [%rd77];
	ld.global.f32 	%f103, [%rd78];
	fma.rn.f32 	%f104, %f102, %f101, %f103;
	add.s64 	%rd80, %rd76, %rd22;
	st.global.f32 	[%rd80], %f104;
	add.s32 	%r149, %r197, %r1;
	add.s32 	%r150, %r149, %r1;
	add.s64 	%rd81, %rd77, %rd22;
	add.s64 	%rd82, %rd78, %rd22;
	add.s64 	%rd83, %rd79, %rd22;
	ld.global.f32 	%f105, [%rd83];
	sub.f32 	%f106, %f105, %f21;
	mul.f32 	%f107, %f22, %f106;
	ld.global.f32 	%f108, [%rd81];
	ld.global.f32 	%f109, [%rd82];
	fma.rn.f32 	%f110, %f108, %f107, %f109;
	add.s64 	%rd84, %rd80, %rd22;
	st.global.f32 	[%rd84], %f110;
	add.s32 	%r151, %r150, %r1;
	add.s64 	%rd85, %rd81, %rd22;
	add.s64 	%rd86, %rd82, %rd22;
	add.s64 	%rd87, %rd83, %rd22;
	ld.global.f32 	%f111, [%rd87];
	sub.f32 	%f112, %f111, %f21;
	mul.f32 	%f113, %f22, %f112;
	ld.global.f32 	%f114, [%rd85];
	ld.global.f32 	%f115, [%rd86];
	fma.rn.f32 	%f116, %f114, %f113, %f115;
	add.s64 	%rd88, %rd84, %rd22;
	st.global.f32 	[%rd88], %f116;
	add.s32 	%r197, %r151, %r1;
	setp.lt.s32 	%p39, %r197, %r63;
	@%p39 bra 	$L__BB19_20;

$L__BB19_42:
	ret;

}
	// .globl	layernorm_f64
.visible .entry layernorm_f64(
	.param .u64 layernorm_f64_param_0,
	.param .u64 layernorm_f64_param_1,
	.param .u64 layernorm_f64_param_2,
	.param .u64 layernorm_f64_param_3,
	.param .u32 layernorm_f64_param_4,
	.param .f32 layernorm_f64_param_5
)
{
	.reg .pred 	%p<55>;
	.reg .f32 	%f<189>;
	.reg .b32 	%r<211>;
	.reg .f64 	%fd<66>;
	.reg .b64 	%rd<143>;
	// demoted variable
	.shared .align 8 .b8 _ZZ9layernormIdEvPKT_PS0_S2_S2_ifE5s_sum[256];

	ld.param.u64 	%rd57, [layernorm_f64_param_0];
	ld.param.u64 	%rd58, [layernorm_f64_param_1];
	ld.param.u64 	%rd55, [layernorm_f64_param_2];
	ld.param.u64 	%rd56, [layernorm_f64_param_3];
	ld.param.u32 	%r63, [layernorm_f64_param_4];
	ld.param.f32 	%f23, [layernorm_f64_param_5];
	cvta.to.global.u64 	%rd1, %rd58;
	cvta.to.global.u64 	%rd2, %rd57;
	cvta.to.global.u64 	%rd3, %rd55;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r193, %tid.x;
	setp.ge.s32 	%p1, %r193, %r63;
	mov.f32 	%f185, 0f00000000;
	mov.f32 	%f186, %f185;
	@%p1 bra 	$L__BB20_7;

	mov.u32 	%r64, %tid.y;
	mov.u32 	%r65, %ctaid.x;
	mov.u32 	%r66, %ntid.y;
	mad.lo.s32 	%r67, %r65, %r66, %r64;
	mul.lo.s32 	%r3, %r67, %r63;
	not.b32 	%r68, %r193;
	add.s32 	%r69, %r68, %r63;
	div.u32 	%r4, %r69, %r1;
	add.s32 	%r70, %r4, 1;
	and.b32  	%r192, %r70, 3;
	setp.eq.s32 	%p2, %r192, 0;
	mov.f32 	%f186, 0f00000000;
	mov.f32 	%f185, %f186;
	@%p2 bra 	$L__BB20_4;

	mov.u32 	%r193, %tid.x;
	add.s32 	%r71, %r193, %r3;
	mul.wide.s32 	%rd59, %r71, 8;
	add.s64 	%rd130, %rd2, %rd59;
	mul.wide.s32 	%rd5, %r1, 8;
	mov.f32 	%f186, 0f00000000;

$L__BB20_3:
	.pragma "nounroll";
	ld.global.f64 	%fd1, [%rd130];
	cvt.rn.f32.f64 	%f31, %fd1;
	add.f32 	%f186, %f186, %f31;
	fma.rn.f32 	%f185, %f31, %f31, %f185;
	add.s32 	%r193, %r193, %r1;
	add.s64 	%rd130, %rd130, %rd5;
	add.s32 	%r192, %r192, -1;
	setp.ne.s32 	%p3, %r192, 0;
	@%p3 bra 	$L__BB20_3;

$L__BB20_4:
	setp.lt.u32 	%p4, %r4, 3;
	@%p4 bra 	$L__BB20_7;

	mul.wide.s32 	%rd8, %r1, 8;

$L__BB20_6:
	add.s32 	%r72, %r193, %r3;
	mul.wide.s32 	%rd60, %r72, 8;
	add.s64 	%rd61, %rd2, %rd60;
	ld.global.f64 	%fd2, [%rd61];
	cvt.rn.f32.f64 	%f32, %fd2;
	add.f32 	%f33, %f186, %f32;
	fma.rn.f32 	%f34, %f32, %f32, %f185;
	add.s64 	%rd62, %rd61, %rd8;
	ld.global.f64 	%fd3, [%rd62];
	cvt.rn.f32.f64 	%f35, %fd3;
	add.f32 	%f36, %f33, %f35;
	fma.rn.f32 	%f37, %f35, %f35, %f34;
	add.s32 	%r73, %r193, %r1;
	add.s32 	%r74, %r73, %r1;
	add.s64 	%rd63, %rd62, %rd8;
	ld.global.f64 	%fd4, [%rd63];
	cvt.rn.f32.f64 	%f38, %fd4;
	add.f32 	%f39, %f36, %f38;
	fma.rn.f32 	%f40, %f38, %f38, %f37;
	add.s32 	%r75, %r74, %r1;
	add.s64 	%rd64, %rd63, %rd8;
	ld.global.f64 	%fd5, [%rd64];
	cvt.rn.f32.f64 	%f41, %fd5;
	add.f32 	%f186, %f39, %f41;
	fma.rn.f32 	%f185, %f41, %f41, %f40;
	add.s32 	%r193, %r75, %r1;
	setp.lt.s32 	%p5, %r193, %r63;
	@%p5 bra 	$L__BB20_6;

$L__BB20_7:
	mov.b32 	%r76, %f186;
	mov.u32 	%r77, 31;
	mov.u32 	%r78, 16;
	mov.u32 	%r79, -1;
	shfl.sync.bfly.b32 	%r80|%p6, %r76, %r78, %r77, %r79;
	mov.b32 	%f42, %r80;
	add.f32 	%f43, %f186, %f42;
	mov.b32 	%r81, %f185;
	shfl.sync.bfly.b32 	%r82|%p7, %r81, %r78, %r77, %r79;
	mov.b32 	%f44, %r82;
	add.f32 	%f45, %f185, %f44;
	mov.b32 	%r83, %f43;
	mov.u32 	%r84, 8;
	shfl.sync.bfly.b32 	%r85|%p8, %r83, %r84, %r77, %r79;
	mov.b32 	%f46, %r85;
	add.f32 	%f47, %f43, %f46;
	mov.b32 	%r86, %f45;
	shfl.sync.bfly.b32 	%r87|%p9, %r86, %r84, %r77, %r79;
	mov.b32 	%f48, %r87;
	add.f32 	%f49, %f45, %f48;
	mov.b32 	%r88, %f47;
	mov.u32 	%r89, 4;
	shfl.sync.bfly.b32 	%r90|%p10, %r88, %r89, %r77, %r79;
	mov.b32 	%f50, %r90;
	add.f32 	%f51, %f47, %f50;
	mov.b32 	%r91, %f49;
	shfl.sync.bfly.b32 	%r92|%p11, %r91, %r89, %r77, %r79;
	mov.b32 	%f52, %r92;
	add.f32 	%f53, %f49, %f52;
	mov.b32 	%r93, %f51;
	mov.u32 	%r94, 2;
	shfl.sync.bfly.b32 	%r95|%p12, %r93, %r94, %r77, %r79;
	mov.b32 	%f54, %r95;
	add.f32 	%f55, %f51, %f54;
	mov.b32 	%r96, %f53;
	shfl.sync.bfly.b32 	%r97|%p13, %r96, %r94, %r77, %r79;
	mov.b32 	%f56, %r97;
	add.f32 	%f57, %f53, %f56;
	mov.b32 	%r98, %f55;
	mov.u32 	%r99, 1;
	shfl.sync.bfly.b32 	%r100|%p14, %r98, %r99, %r77, %r79;
	mov.b32 	%f58, %r100;
	add.f32 	%f188, %f55, %f58;
	mov.b32 	%r101, %f57;
	shfl.sync.bfly.b32 	%r102|%p15, %r101, %r99, %r77, %r79;
	mov.b32 	%f59, %r102;
	add.f32 	%f187, %f57, %f59;
	setp.lt.s32 	%p16, %r1, 33;
	@%p16 bra 	$L__BB20_11;

	mov.u32 	%r103, %tid.x;
	and.b32  	%r14, %r103, 31;
	setp.ne.s32 	%p17, %r14, 0;
	@%p17 bra 	$L__BB20_10;

	shr.u32 	%r105, %r103, 2;
	and.b32  	%r106, %r105, 1073741816;
	mov.u32 	%r107, _ZZ9layernormIdEvPKT_PS0_S2_S2_ifE5s_sum;
	add.s32 	%r108, %r107, %r106;
	st.shared.v2.f32 	[%r108], {%f188, %f187};

$L__BB20_10:
	bar.sync 	0;
	shl.b32 	%r109, %r14, 3;
	mov.u32 	%r110, _ZZ9layernormIdEvPKT_PS0_S2_S2_ifE5s_sum;
	add.s32 	%r111, %r110, %r109;
	ld.shared.v2.f32 	{%f60, %f61}, [%r111];
	mov.u32 	%r112, 1;
	mov.b32 	%r113, %f60;
	mov.u32 	%r114, 31;
	mov.u32 	%r115, 16;
	mov.u32 	%r116, -1;
	shfl.sync.bfly.b32 	%r117|%p18, %r113, %r115, %r114, %r116;
	mov.b32 	%f64, %r117;
	add.f32 	%f65, %f60, %f64;
	mov.b32 	%r118, %f61;
	shfl.sync.bfly.b32 	%r119|%p19, %r118, %r115, %r114, %r116;
	mov.b32 	%f66, %r119;
	add.f32 	%f67, %f61, %f66;
	mov.b32 	%r120, %f65;
	mov.u32 	%r121, 8;
	shfl.sync.bfly.b32 	%r122|%p20, %r120, %r121, %r114, %r116;
	mov.b32 	%f68, %r122;
	add.f32 	%f69, %f65, %f68;
	mov.b32 	%r123, %f67;
	shfl.sync.bfly.b32 	%r124|%p21, %r123, %r121, %r114, %r116;
	mov.b32 	%f70, %r124;
	add.f32 	%f71, %f67, %f70;
	mov.b32 	%r125, %f69;
	mov.u32 	%r126, 4;
	shfl.sync.bfly.b32 	%r127|%p22, %r125, %r126, %r114, %r116;
	mov.b32 	%f72, %r127;
	add.f32 	%f73, %f69, %f72;
	mov.b32 	%r128, %f71;
	shfl.sync.bfly.b32 	%r129|%p23, %r128, %r126, %r114, %r116;
	mov.b32 	%f74, %r129;
	add.f32 	%f75, %f71, %f74;
	mov.b32 	%r130, %f73;
	mov.u32 	%r131, 2;
	shfl.sync.bfly.b32 	%r132|%p24, %r130, %r131, %r114, %r116;
	mov.b32 	%f76, %r132;
	add.f32 	%f77, %f73, %f76;
	mov.b32 	%r133, %f75;
	shfl.sync.bfly.b32 	%r134|%p25, %r133, %r131, %r114, %r116;
	mov.b32 	%f78, %r134;
	add.f32 	%f79, %f75, %f78;
	mov.b32 	%r135, %f77;
	shfl.sync.bfly.b32 	%r136|%p26, %r135, %r112, %r114, %r116;
	mov.b32 	%f80, %r136;
	add.f32 	%f188, %f77, %f80;
	mov.b32 	%r137, %f79;
	shfl.sync.bfly.b32 	%r138|%p27, %r137, %r112, %r114, %r116;
	mov.b32 	%f81, %r138;
	add.f32 	%f187, %f79, %f81;

$L__BB20_11:
	cvt.rn.f32.s32 	%f82, %r63;
	div.rn.f32 	%f21, %f188, %f82;
	div.rn.f32 	%f83, %f187, %f82;
	mul.f32 	%f84, %f21, %f21;
	sub.f32 	%f85, %f83, %f84;
	add.f32 	%f86, %f85, %f23;
	rsqrt.approx.f32 	%f22, %f86;
	or.b64  	%rd65, %rd55, %rd56;
	setp.eq.s64 	%p28, %rd65, 0;
	@%p28 bra 	$L__BB20_35;
	bra.uni 	$L__BB20_12;

$L__BB20_35:
	mov.u32 	%r209, %tid.x;
	setp.ge.s32 	%p50, %r209, %r63;
	@%p50 bra 	$L__BB20_42;

	mov.u32 	%r179, %ctaid.x;
	mov.u32 	%r180, %ntid.y;
	mov.u32 	%r181, %tid.y;
	mad.lo.s32 	%r182, %r179, %r180, %r181;
	mul.lo.s32 	%r51, %r182, %r63;
	not.b32 	%r183, %r209;
	add.s32 	%r184, %r183, %r63;
	div.u32 	%r53, %r184, %r1;
	add.s32 	%r185, %r53, 1;
	and.b32  	%r208, %r185, 3;
	setp.eq.s32 	%p51, %r208, 0;
	@%p51 bra 	$L__BB20_39;

	mov.u32 	%r209, %tid.x;
	add.s32 	%r186, %r209, %r51;
	mul.wide.s32 	%rd120, %r186, 8;
	add.s64 	%rd142, %rd1, %rd120;
	mul.wide.s32 	%rd48, %r1, 8;
	add.s64 	%rd141, %rd2, %rd120;

$L__BB20_38:
	.pragma "nounroll";
	ld.global.f64 	%fd56, [%rd141];
	cvt.rn.f32.f64 	%f162, %fd56;
	sub.f32 	%f163, %f162, %f21;
	mul.f32 	%f164, %f22, %f163;
	cvt.f64.f32 	%fd57, %f164;
	st.global.f64 	[%rd142], %fd57;
	add.s32 	%r209, %r209, %r1;
	add.s64 	%rd142, %rd142, %rd48;
	add.s64 	%rd141, %rd141, %rd48;
	add.s32 	%r208, %r208, -1;
	setp.ne.s32 	%p52, %r208, 0;
	@%p52 bra 	$L__BB20_38;

$L__BB20_39:
	setp.lt.u32 	%p53, %r53, 3;
	@%p53 bra 	$L__BB20_42;

	mul.wide.s32 	%rd54, %r1, 8;

$L__BB20_41:
	add.s32 	%r187, %r209, %r51;
	mul.wide.s32 	%rd121, %r187, 8;
	add.s64 	%rd122, %rd2, %rd121;
	ld.global.f64 	%fd58, [%rd122];
	cvt.rn.f32.f64 	%f165, %fd58;
	sub.f32 	%f166, %f165, %f21;
	mul.f32 	%f167, %f22, %f166;
	cvt.f64.f32 	%fd59, %f167;
	add.s64 	%rd123, %rd1, %rd121;
	st.global.f64 	[%rd123], %fd59;
	add.s64 	%rd124, %rd122, %rd54;
	ld.global.f64 	%fd60, [%rd124];
	cvt.rn.f32.f64 	%f168, %fd60;
	sub.f32 	%f169, %f168, %f21;
	mul.f32 	%f170, %f22, %f169;
	cvt.f64.f32 	%fd61, %f170;
	add.s64 	%rd125, %rd123, %rd54;
	st.global.f64 	[%rd125], %fd61;
	add.s32 	%r188, %r209, %r1;
	add.s32 	%r189, %r188, %r1;
	add.s64 	%rd126, %rd124, %rd54;
	ld.global.f64 	%fd62, [%rd126];
	cvt.rn.f32.f64 	%f171, %fd62;
	sub.f32 	%f172, %f171, %f21;
	mul.f32 	%f173, %f22, %f172;
	cvt.f64.f32 	%fd63, %f173;
	add.s64 	%rd127, %rd125, %rd54;
	st.global.f64 	[%rd127], %fd63;
	add.s32 	%r190, %r189, %r1;
	add.s64 	%rd128, %rd126, %rd54;
	ld.global.f64 	%fd64, [%rd128];
	cvt.rn.f32.f64 	%f174, %fd64;
	sub.f32 	%f175, %f174, %f21;
	mul.f32 	%f176, %f22, %f175;
	cvt.f64.f32 	%fd65, %f176;
	add.s64 	%rd129, %rd127, %rd54;
	st.global.f64 	[%rd129], %fd65;
	add.s32 	%r209, %r190, %r1;
	setp.lt.s32 	%p54, %r209, %r63;
	@%p54 bra 	$L__BB20_41;
	bra.uni 	$L__BB20_42;

$L__BB20_12:
	setp.eq.s64 	%p29, %rd55, 0;
	setp.ne.s64 	%p30, %rd56, 0;
	and.pred  	%p31, %p29, %p30;
	@%p31 bra 	$L__BB20_28;
	bra.uni 	$L__BB20_13;

$L__BB20_28:
	mov.u32 	%r205, %tid.x;
	setp.ge.s32 	%p45, %r205, %r63;
	@%p45 bra 	$L__BB20_42;

	mov.u32 	%r166, %ctaid.x;
	mov.u32 	%r167, %ntid.y;
	mov.u32 	%r168, %tid.y;
	mad.lo.s32 	%r169, %r166, %r167, %r168;
	mul.lo.s32 	%r39, %r169, %r63;
	not.b32 	%r170, %r205;
	add.s32 	%r171, %r170, %r63;
	div.u32 	%r41, %r171, %r1;
	add.s32 	%r172, %r41, 1;
	and.b32  	%r204, %r172, 3;
	setp.eq.s32 	%p46, %r204, 0;
	@%p46 bra 	$L__BB20_32;

	mov.u32 	%r205, %tid.x;
	add.s32 	%r173, %r205, %r39;
	mul.wide.s32 	%rd103, %r173, 8;
	add.s64 	%rd140, %rd1, %rd103;
	mul.wide.s32 	%rd36, %r1, 8;
	add.s64 	%rd139, %rd2, %rd103;
	cvta.to.global.u64 	%rd104, %rd56;
	mul.wide.s32 	%rd105, %r205, 8;
	add.s64 	%rd138, %rd104, %rd105;

$L__BB20_31:
	.pragma "nounroll";
	ld.global.f64 	%fd41, [%rd138];
	cvt.rn.f32.f64 	%f142, %fd41;
	ld.global.f64 	%fd42, [%rd139];
	cvt.rn.f32.f64 	%f143, %fd42;
	sub.f32 	%f144, %f143, %f21;
	fma.rn.f32 	%f145, %f22, %f144, %f142;
	cvt.f64.f32 	%fd43, %f145;
	st.global.f64 	[%rd140], %fd43;
	add.s32 	%r205, %r205, %r1;
	add.s64 	%rd140, %rd140, %rd36;
	add.s64 	%rd139, %rd139, %rd36;
	add.s64 	%rd138, %rd138, %rd36;
	add.s32 	%r204, %r204, -1;
	setp.ne.s32 	%p47, %r204, 0;
	@%p47 bra 	$L__BB20_31;

$L__BB20_32:
	setp.lt.u32 	%p48, %r41, 3;
	@%p48 bra 	$L__BB20_42;

	mul.wide.s32 	%rd45, %r1, 8;
	cvta.to.global.u64 	%rd46, %rd56;

$L__BB20_34:
	mul.wide.s32 	%rd106, %r205, 8;
	add.s64 	%rd107, %rd46, %rd106;
	ld.global.f64 	%fd44, [%rd107];
	cvt.rn.f32.f64 	%f146, %fd44;
	add.s32 	%r174, %r205, %r39;
	mul.wide.s32 	%rd108, %r174, 8;
	add.s64 	%rd109, %rd2, %rd108;
	ld.global.f64 	%fd45, [%rd109];
	cvt.rn.f32.f64 	%f147, %fd45;
	sub.f32 	%f148, %f147, %f21;
	fma.rn.f32 	%f149, %f22, %f148, %f146;
	cvt.f64.f32 	%fd46, %f149;
	add.s64 	%rd110, %rd1, %rd108;
	st.global.f64 	[%rd110], %fd46;
	add.s64 	%rd111, %rd107, %rd45;
	ld.global.f64 	%fd47, [%rd111];
	cvt.rn.f32.f64 	%f150, %fd47;
	add.s64 	%rd112, %rd109, %rd45;
	ld.global.f64 	%fd48, [%rd112];
	cvt.rn.f32.f64 	%f151, %fd48;
	sub.f32 	%f152, %f151, %f21;
	fma.rn.f32 	%f153, %f22, %f152, %f150;
	cvt.f64.f32 	%fd49, %f153;
	add.s64 	%rd113, %rd110, %rd45;
	st.global.f64 	[%rd113], %fd49;
	add.s32 	%r175, %r205, %r1;
	add.s32 	%r176, %r175, %r1;
	add.s64 	%rd114, %rd111, %rd45;
	ld.global.f64 	%fd50, [%rd114];
	cvt.rn.f32.f64 	%f154, %fd50;
	add.s64 	%rd115, %rd112, %rd45;
	ld.global.f64 	%fd51, [%rd115];
	cvt.rn.f32.f64 	%f155, %fd51;
	sub.f32 	%f156, %f155, %f21;
	fma.rn.f32 	%f157, %f22, %f156, %f154;
	cvt.f64.f32 	%fd52, %f157;
	add.s64 	%rd116, %rd113, %rd45;
	st.global.f64 	[%rd116], %fd52;
	add.s32 	%r177, %r176, %r1;
	add.s64 	%rd117, %rd114, %rd45;
	ld.global.f64 	%fd53, [%rd117];
	cvt.rn.f32.f64 	%f158, %fd53;
	add.s64 	%rd118, %rd115, %rd45;
	ld.global.f64 	%fd54, [%rd118];
	cvt.rn.f32.f64 	%f159, %fd54;
	sub.f32 	%f160, %f159, %f21;
	fma.rn.f32 	%f161, %f22, %f160, %f158;
	cvt.f64.f32 	%fd55, %f161;
	add.s64 	%rd119, %rd116, %rd45;
	st.global.f64 	[%rd119], %fd55;
	add.s32 	%r205, %r177, %r1;
	setp.lt.s32 	%p49, %r205, %r63;
	@%p49 bra 	$L__BB20_34;
	bra.uni 	$L__BB20_42;

$L__BB20_13:
	setp.eq.s64 	%p32, %rd56, 0;
	setp.ne.s64 	%p33, %rd55, 0;
	and.pred  	%p34, %p33, %p32;
	@%p34 bra 	$L__BB20_21;
	bra.uni 	$L__BB20_14;

$L__BB20_21:
	mov.u32 	%r201, %tid.x;
	setp.ge.s32 	%p40, %r201, %r63;
	@%p40 bra 	$L__BB20_42;

	mov.u32 	%r153, %ctaid.x;
	mov.u32 	%r154, %ntid.y;
	mov.u32 	%r155, %tid.y;
	mad.lo.s32 	%r156, %r153, %r154, %r155;
	mul.lo.s32 	%r27, %r156, %r63;
	not.b32 	%r157, %r201;
	add.s32 	%r158, %r157, %r63;
	div.u32 	%r29, %r158, %r1;
	add.s32 	%r159, %r29, 1;
	and.b32  	%r200, %r159, 3;
	setp.eq.s32 	%p41, %r200, 0;
	@%p41 bra 	$L__BB20_25;

	mov.u32 	%r201, %tid.x;
	add.s32 	%r160, %r201, %r27;
	mul.wide.s32 	%rd87, %r160, 8;
	add.s64 	%rd137, %rd1, %rd87;
	mul.wide.s32 	%rd25, %r1, 8;
	add.s64 	%rd136, %rd2, %rd87;
	mul.wide.s32 	%rd88, %r201, 8;
	add.s64 	%rd135, %rd3, %rd88;

$L__BB20_24:
	.pragma "nounroll";
	ld.global.f64 	%fd26, [%rd135];
	cvt.rn.f32.f64 	%f117, %fd26;
	ld.global.f64 	%fd27, [%rd136];
	cvt.rn.f32.f64 	%f118, %fd27;
	sub.f32 	%f119, %f118, %f21;
	mul.f32 	%f120, %f22, %f119;
	mul.f32 	%f121, %f120, %f117;
	cvt.f64.f32 	%fd28, %f121;
	st.global.f64 	[%rd137], %fd28;
	add.s32 	%r201, %r201, %r1;
	add.s64 	%rd137, %rd137, %rd25;
	add.s64 	%rd136, %rd136, %rd25;
	add.s64 	%rd135, %rd135, %rd25;
	add.s32 	%r200, %r200, -1;
	setp.ne.s32 	%p42, %r200, 0;
	@%p42 bra 	$L__BB20_24;

$L__BB20_25:
	setp.lt.u32 	%p43, %r29, 3;
	@%p43 bra 	$L__BB20_42;

	mul.wide.s32 	%rd34, %r1, 8;

$L__BB20_27:
	mul.wide.s32 	%rd89, %r201, 8;
	add.s64 	%rd90, %rd3, %rd89;
	ld.global.f64 	%fd29, [%rd90];
	cvt.rn.f32.f64 	%f122, %fd29;
	add.s32 	%r161, %r201, %r27;
	mul.wide.s32 	%rd91, %r161, 8;
	add.s64 	%rd92, %rd2, %rd91;
	ld.global.f64 	%fd30, [%rd92];
	cvt.rn.f32.f64 	%f123, %fd30;
	sub.f32 	%f124, %f123, %f21;
	mul.f32 	%f125, %f22, %f124;
	mul.f32 	%f126, %f125, %f122;
	cvt.f64.f32 	%fd31, %f126;
	add.s64 	%rd93, %rd1, %rd91;
	st.global.f64 	[%rd93], %fd31;
	add.s64 	%rd94, %rd90, %rd34;
	ld.global.f64 	%fd32, [%rd94];
	cvt.rn.f32.f64 	%f127, %fd32;
	add.s64 	%rd95, %rd92, %rd34;
	ld.global.f64 	%fd33, [%rd95];
	cvt.rn.f32.f64 	%f128, %fd33;
	sub.f32 	%f129, %f128, %f21;
	mul.f32 	%f130, %f22, %f129;
	mul.f32 	%f131, %f130, %f127;
	cvt.f64.f32 	%fd34, %f131;
	add.s64 	%rd96, %rd93, %rd34;
	st.global.f64 	[%rd96], %fd34;
	add.s32 	%r162, %r201, %r1;
	add.s32 	%r163, %r162, %r1;
	add.s64 	%rd97, %rd94, %rd34;
	ld.global.f64 	%fd35, [%rd97];
	cvt.rn.f32.f64 	%f132, %fd35;
	add.s64 	%rd98, %rd95, %rd34;
	ld.global.f64 	%fd36, [%rd98];
	cvt.rn.f32.f64 	%f133, %fd36;
	sub.f32 	%f134, %f133, %f21;
	mul.f32 	%f135, %f22, %f134;
	mul.f32 	%f136, %f135, %f132;
	cvt.f64.f32 	%fd37, %f136;
	add.s64 	%rd99, %rd96, %rd34;
	st.global.f64 	[%rd99], %fd37;
	add.s32 	%r164, %r163, %r1;
	add.s64 	%rd100, %rd97, %rd34;
	ld.global.f64 	%fd38, [%rd100];
	cvt.rn.f32.f64 	%f137, %fd38;
	add.s64 	%rd101, %rd98, %rd34;
	ld.global.f64 	%fd39, [%rd101];
	cvt.rn.f32.f64 	%f138, %fd39;
	sub.f32 	%f139, %f138, %f21;
	mul.f32 	%f140, %f22, %f139;
	mul.f32 	%f141, %f140, %f137;
	cvt.f64.f32 	%fd40, %f141;
	add.s64 	%rd102, %rd99, %rd34;
	st.global.f64 	[%rd102], %fd40;
	add.s32 	%r201, %r164, %r1;
	setp.lt.s32 	%p44, %r201, %r63;
	@%p44 bra 	$L__BB20_27;
	bra.uni 	$L__BB20_42;

$L__BB20_14:
	mov.u32 	%r197, %tid.x;
	setp.ge.s32 	%p35, %r197, %r63;
	@%p35 bra 	$L__BB20_42;

	mov.u32 	%r140, %ctaid.x;
	mov.u32 	%r141, %ntid.y;
	mov.u32 	%r142, %tid.y;
	mad.lo.s32 	%r143, %r140, %r141, %r142;
	mul.lo.s32 	%r15, %r143, %r63;
	not.b32 	%r144, %r197;
	add.s32 	%r145, %r144, %r63;
	div.u32 	%r17, %r145, %r1;
	add.s32 	%r146, %r17, 1;
	and.b32  	%r196, %r146, 3;
	setp.eq.s32 	%p36, %r196, 0;
	@%p36 bra 	$L__BB20_18;

	mov.u32 	%r197, %tid.x;
	add.s32 	%r147, %r197, %r15;
	mul.wide.s32 	%rd66, %r147, 8;
	add.s64 	%rd134, %rd1, %rd66;
	mul.wide.s32 	%rd10, %r1, 8;
	add.s64 	%rd133, %rd2, %rd66;
	cvta.to.global.u64 	%rd67, %rd56;
	mul.wide.s32 	%rd68, %r197, 8;
	add.s64 	%rd132, %rd67, %rd68;
	add.s64 	%rd131, %rd3, %rd68;

$L__BB20_17:
	.pragma "nounroll";
	ld.global.f64 	%fd6, [%rd131];
	cvt.rn.f32.f64 	%f87, %fd6;
	ld.global.f64 	%fd7, [%rd132];
	cvt.rn.f32.f64 	%f88, %fd7;
	ld.global.f64 	%fd8, [%rd133];
	cvt.rn.f32.f64 	%f89, %fd8;
	sub.f32 	%f90, %f89, %f21;
	mul.f32 	%f91, %f22, %f90;
	fma.rn.f32 	%f92, %f91, %f87, %f88;
	cvt.f64.f32 	%fd9, %f92;
	st.global.f64 	[%rd134], %fd9;
	add.s32 	%r197, %r197, %r1;
	add.s64 	%rd134, %rd134, %rd10;
	add.s64 	%rd133, %rd133, %rd10;
	add.s64 	%rd132, %rd132, %rd10;
	add.s64 	%rd131, %rd131, %rd10;
	add.s32 	%r196, %r196, -1;
	setp.ne.s32 	%p37, %r196, 0;
	@%p37 bra 	$L__BB20_17;

$L__BB20_18:
	setp.lt.u32 	%p38, %r17, 3;
	@%p38 bra 	$L__BB20_42;

	mul.wide.s32 	%rd22, %r1, 8;
	cvta.to.global.u64 	%rd23, %rd56;

$L__BB20_20:
	mul.wide.s32 	%rd69, %r197, 8;
	add.s64 	%rd70, %rd3, %rd69;
	ld.global.f64 	%fd10, [%rd70];
	cvt.rn.f32.f64 	%f93, %fd10;
	add.s64 	%rd71, %rd23, %rd69;
	ld.global.f64 	%fd11, [%rd71];
	cvt.rn.f32.f64 	%f94, %fd11;
	add.s32 	%r148, %r197, %r15;
	mul.wide.s32 	%rd72, %r148, 8;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.f64 	%fd12, [%rd73];
	cvt.rn.f32.f64 	%f95, %fd12;
	sub.f32 	%f96, %f95, %f21;
	mul.f32 	%f97, %f22, %f96;
	fma.rn.f32 	%f98, %f97, %f93, %f94;
	cvt.f64.f32 	%fd13, %f98;
	add.s64 	%rd74, %rd1, %rd72;
	st.global.f64 	[%rd74], %fd13;
	add.s64 	%rd75, %rd70, %rd22;
	ld.global.f64 	%fd14, [%rd75];
	cvt.rn.f32.f64 	%f99, %fd14;
	add.s64 	%rd76, %rd71, %rd22;
	ld.global.f64 	%fd15, [%rd76];
	cvt.rn.f32.f64 	%f100, %fd15;
	add.s64 	%rd77, %rd73, %rd22;
	ld.global.f64 	%fd16, [%rd77];
	cvt.rn.f32.f64 	%f101, %fd16;
	sub.f32 	%f102, %f101, %f21;
	mul.f32 	%f103, %f22, %f102;
	fma.rn.f32 	%f104, %f103, %f99, %f100;
	cvt.f64.f32 	%fd17, %f104;
	add.s64 	%rd78, %rd74, %rd22;
	st.global.f64 	[%rd78], %fd17;
	add.s32 	%r149, %r197, %r1;
	add.s32 	%r150, %r149, %r1;
	add.s64 	%rd79, %rd75, %rd22;
	ld.global.f64 	%fd18, [%rd79];
	cvt.rn.f32.f64 	%f105, %fd18;
	add.s64 	%rd80, %rd76, %rd22;
	ld.global.f64 	%fd19, [%rd80];
	cvt.rn.f32.f64 	%f106, %fd19;
	add.s64 	%rd81, %rd77, %rd22;
	ld.global.f64 	%fd20, [%rd81];
	cvt.rn.f32.f64 	%f107, %fd20;
	sub.f32 	%f108, %f107, %f21;
	mul.f32 	%f109, %f22, %f108;
	fma.rn.f32 	%f110, %f109, %f105, %f106;
	cvt.f64.f32 	%fd21, %f110;
	add.s64 	%rd82, %rd78, %rd22;
	st.global.f64 	[%rd82], %fd21;
	add.s32 	%r151, %r150, %r1;
	add.s64 	%rd83, %rd79, %rd22;
	ld.global.f64 	%fd22, [%rd83];
	cvt.rn.f32.f64 	%f111, %fd22;
	add.s64 	%rd84, %rd80, %rd22;
	ld.global.f64 	%fd23, [%rd84];
	cvt.rn.f32.f64 	%f112, %fd23;
	add.s64 	%rd85, %rd81, %rd22;
	ld.global.f64 	%fd24, [%rd85];
	cvt.rn.f32.f64 	%f113, %fd24;
	sub.f32 	%f114, %f113, %f21;
	mul.f32 	%f115, %f22, %f114;
	fma.rn.f32 	%f116, %f115, %f111, %f112;
	cvt.f64.f32 	%fd25, %f116;
	add.s64 	%rd86, %rd82, %rd22;
	st.global.f64 	[%rd86], %fd25;
	add.s32 	%r197, %r151, %r1;
	setp.lt.s32 	%p39, %r197, %r63;
	@%p39 bra 	$L__BB20_20;

$L__BB20_42:
	ret;

}
	// .globl	rope_i_f32
.visible .entry rope_i_f32(
	.param .u64 rope_i_f32_param_0,
	.param .u64 rope_i_f32_param_1,
	.param .u64 rope_i_f32_param_2,
	.param .u64 rope_i_f32_param_3,
	.param .u32 rope_i_f32_param_4,
	.param .u32 rope_i_f32_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [rope_i_f32_param_0];
	ld.param.u64 	%rd2, [rope_i_f32_param_1];
	ld.param.u64 	%rd3, [rope_i_f32_param_2];
	ld.param.u64 	%rd4, [rope_i_f32_param_3];
	ld.param.u32 	%r4, [rope_i_f32_param_4];
	ld.param.u32 	%r3, [rope_i_f32_param_5];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	shl.b32 	%r2, %r1, 1;
	mul.lo.s32 	%r8, %r3, %r4;
	setp.ge.u32 	%p1, %r2, %r8;
	@%p1 bra 	$L__BB21_2;

	cvta.to.global.u64 	%rd5, %rd2;
	shr.u32 	%r9, %r3, 1;
	rem.u32 	%r10, %r1, %r9;
	mul.wide.u32 	%rd6, %r10, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	cvta.to.global.u64 	%rd10, %rd1;
	mul.wide.s32 	%rd11, %r2, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f1, [%rd12];
	ld.global.f32 	%f2, [%rd7];
	mul.f32 	%f3, %f2, %f1;
	ld.global.f32 	%f4, [%rd12+4];
	ld.global.f32 	%f5, [%rd9];
	mul.f32 	%f6, %f5, %f4;
	sub.f32 	%f7, %f3, %f6;
	cvta.to.global.u64 	%rd13, %rd4;
	add.s64 	%rd14, %rd13, %rd11;
	st.global.f32 	[%rd14], %f7;
	ld.global.f32 	%f8, [%rd12];
	ld.global.f32 	%f9, [%rd12+4];
	mul.f32 	%f10, %f2, %f9;
	fma.rn.f32 	%f11, %f5, %f8, %f10;
	st.global.f32 	[%rd14+4], %f11;

$L__BB21_2:
	ret;

}
	// .globl	rope_f32
.visible .entry rope_f32(
	.param .u64 rope_f32_param_0,
	.param .u64 rope_f32_param_1,
	.param .u64 rope_f32_param_2,
	.param .u64 rope_f32_param_3,
	.param .u32 rope_f32_param_4,
	.param .u32 rope_f32_param_5,
	.param .u32 rope_f32_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd1, [rope_f32_param_0];
	ld.param.u64 	%rd2, [rope_f32_param_1];
	ld.param.u64 	%rd3, [rope_f32_param_2];
	ld.param.u64 	%rd4, [rope_f32_param_3];
	ld.param.u32 	%r4, [rope_f32_param_4];
	ld.param.u32 	%r2, [rope_f32_param_5];
	ld.param.u32 	%r3, [rope_f32_param_6];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	shl.b32 	%r8, %r1, 1;
	mul.lo.s32 	%r9, %r2, %r4;
	setp.ge.u32 	%p1, %r8, %r9;
	@%p1 bra 	$L__BB22_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	shr.u32 	%r10, %r2, 1;
	div.u32 	%r11, %r1, %r10;
	mul.lo.s32 	%r12, %r11, %r10;
	sub.s32 	%r13, %r1, %r12;
	shr.u32 	%r14, %r3, 1;
	div.u32 	%r15, %r13, %r14;
	mul.lo.s32 	%r16, %r15, %r14;
	sub.s32 	%r17, %r13, %r16;
	mul.lo.s32 	%r18, %r11, %r2;
	mad.lo.s32 	%r19, %r15, %r3, %r18;
	add.s32 	%r20, %r19, %r17;
	add.s32 	%r21, %r20, %r14;
	mul.wide.u32 	%rd8, %r13, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	mul.wide.u32 	%rd12, %r20, 4;
	add.s64 	%rd13, %rd6, %rd12;
	ld.global.f32 	%f1, [%rd13];
	ld.global.f32 	%f2, [%rd9];
	mul.f32 	%f3, %f2, %f1;
	mul.wide.u32 	%rd14, %r21, 4;
	add.s64 	%rd15, %rd6, %rd14;
	ld.global.f32 	%f4, [%rd15];
	ld.global.f32 	%f5, [%rd11];
	mul.f32 	%f6, %f5, %f4;
	sub.f32 	%f7, %f3, %f6;
	add.s64 	%rd16, %rd5, %rd12;
	st.global.f32 	[%rd16], %f7;
	ld.global.f32 	%f8, [%rd13];
	ld.global.f32 	%f9, [%rd15];
	mul.f32 	%f10, %f2, %f9;
	fma.rn.f32 	%f11, %f5, %f8, %f10;
	add.s64 	%rd17, %rd5, %rd14;
	st.global.f32 	[%rd17], %f11;

$L__BB22_2:
	ret;

}
	// .globl	rope_thd_f32
.visible .entry rope_thd_f32(
	.param .u64 rope_thd_f32_param_0,
	.param .u64 rope_thd_f32_param_1,
	.param .u64 rope_thd_f32_param_2,
	.param .u64 rope_thd_f32_param_3,
	.param .u32 rope_thd_f32_param_4,
	.param .u32 rope_thd_f32_param_5,
	.param .u32 rope_thd_f32_param_6,
	.param .u32 rope_thd_f32_param_7
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd1, [rope_thd_f32_param_0];
	ld.param.u64 	%rd2, [rope_thd_f32_param_1];
	ld.param.u64 	%rd3, [rope_thd_f32_param_2];
	ld.param.u64 	%rd4, [rope_thd_f32_param_3];
	ld.param.u32 	%r5, [rope_thd_f32_param_4];
	ld.param.u32 	%r2, [rope_thd_f32_param_5];
	ld.param.u32 	%r3, [rope_thd_f32_param_6];
	ld.param.u32 	%r4, [rope_thd_f32_param_7];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	shl.b32 	%r9, %r1, 1;
	mul.lo.s32 	%r10, %r2, %r5;
	mul.lo.s32 	%r11, %r10, %r3;
	mul.lo.s32 	%r12, %r11, %r4;
	setp.ge.u32 	%p1, %r9, %r12;
	@%p1 bra 	$L__BB23_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	shr.u32 	%r13, %r4, 1;
	div.u32 	%r14, %r1, %r13;
	mul.lo.s32 	%r15, %r14, %r13;
	sub.s32 	%r16, %r1, %r15;
	div.u32 	%r17, %r14, %r3;
	rem.u32 	%r18, %r17, %r2;
	mad.lo.s32 	%r19, %r14, %r4, %r16;
	add.s32 	%r20, %r19, %r13;
	mad.lo.s32 	%r21, %r18, %r13, %r16;
	mul.wide.u32 	%rd8, %r21, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	mul.wide.u32 	%rd12, %r19, 4;
	add.s64 	%rd13, %rd6, %rd12;
	ld.global.f32 	%f1, [%rd13];
	ld.global.f32 	%f2, [%rd9];
	mul.f32 	%f3, %f2, %f1;
	mul.wide.u32 	%rd14, %r20, 4;
	add.s64 	%rd15, %rd6, %rd14;
	ld.global.f32 	%f4, [%rd15];
	ld.global.f32 	%f5, [%rd11];
	mul.f32 	%f6, %f5, %f4;
	sub.f32 	%f7, %f3, %f6;
	add.s64 	%rd16, %rd5, %rd12;
	st.global.f32 	[%rd16], %f7;
	ld.global.f32 	%f8, [%rd13];
	ld.global.f32 	%f9, [%rd15];
	mul.f32 	%f10, %f2, %f9;
	fma.rn.f32 	%f11, %f5, %f8, %f10;
	add.s64 	%rd17, %rd5, %rd14;
	st.global.f32 	[%rd17], %f11;

$L__BB23_2:
	ret;

}
	// .globl	rope_i_f64
.visible .entry rope_i_f64(
	.param .u64 rope_i_f64_param_0,
	.param .u64 rope_i_f64_param_1,
	.param .u64 rope_i_f64_param_2,
	.param .u64 rope_i_f64_param_3,
	.param .u32 rope_i_f64_param_4,
	.param .u32 rope_i_f64_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<12>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [rope_i_f64_param_0];
	ld.param.u64 	%rd2, [rope_i_f64_param_1];
	ld.param.u64 	%rd3, [rope_i_f64_param_2];
	ld.param.u64 	%rd4, [rope_i_f64_param_3];
	ld.param.u32 	%r4, [rope_i_f64_param_4];
	ld.param.u32 	%r3, [rope_i_f64_param_5];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	shl.b32 	%r2, %r1, 1;
	mul.lo.s32 	%r8, %r3, %r4;
	setp.ge.u32 	%p1, %r2, %r8;
	@%p1 bra 	$L__BB24_2;

	cvta.to.global.u64 	%rd5, %rd2;
	shr.u32 	%r9, %r3, 1;
	rem.u32 	%r10, %r1, %r9;
	mul.wide.u32 	%rd6, %r10, 8;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	cvta.to.global.u64 	%rd10, %rd1;
	mul.wide.s32 	%rd11, %r2, 8;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f64 	%fd1, [%rd12];
	ld.global.f64 	%fd2, [%rd7];
	mul.f64 	%fd3, %fd2, %fd1;
	ld.global.f64 	%fd4, [%rd12+8];
	ld.global.f64 	%fd5, [%rd9];
	mul.f64 	%fd6, %fd5, %fd4;
	sub.f64 	%fd7, %fd3, %fd6;
	cvta.to.global.u64 	%rd13, %rd4;
	add.s64 	%rd14, %rd13, %rd11;
	st.global.f64 	[%rd14], %fd7;
	ld.global.f64 	%fd8, [%rd12];
	ld.global.f64 	%fd9, [%rd12+8];
	mul.f64 	%fd10, %fd2, %fd9;
	fma.rn.f64 	%fd11, %fd5, %fd8, %fd10;
	st.global.f64 	[%rd14+8], %fd11;

$L__BB24_2:
	ret;

}
	// .globl	rope_f64
.visible .entry rope_f64(
	.param .u64 rope_f64_param_0,
	.param .u64 rope_f64_param_1,
	.param .u64 rope_f64_param_2,
	.param .u64 rope_f64_param_3,
	.param .u32 rope_f64_param_4,
	.param .u32 rope_f64_param_5,
	.param .u32 rope_f64_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<12>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd1, [rope_f64_param_0];
	ld.param.u64 	%rd2, [rope_f64_param_1];
	ld.param.u64 	%rd3, [rope_f64_param_2];
	ld.param.u64 	%rd4, [rope_f64_param_3];
	ld.param.u32 	%r4, [rope_f64_param_4];
	ld.param.u32 	%r2, [rope_f64_param_5];
	ld.param.u32 	%r3, [rope_f64_param_6];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	shl.b32 	%r8, %r1, 1;
	mul.lo.s32 	%r9, %r2, %r4;
	setp.ge.u32 	%p1, %r8, %r9;
	@%p1 bra 	$L__BB25_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	shr.u32 	%r10, %r2, 1;
	div.u32 	%r11, %r1, %r10;
	mul.lo.s32 	%r12, %r11, %r10;
	sub.s32 	%r13, %r1, %r12;
	shr.u32 	%r14, %r3, 1;
	div.u32 	%r15, %r13, %r14;
	mul.lo.s32 	%r16, %r15, %r14;
	sub.s32 	%r17, %r13, %r16;
	mul.lo.s32 	%r18, %r11, %r2;
	mad.lo.s32 	%r19, %r15, %r3, %r18;
	add.s32 	%r20, %r19, %r17;
	add.s32 	%r21, %r20, %r14;
	mul.wide.u32 	%rd8, %r13, 8;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	mul.wide.u32 	%rd12, %r20, 8;
	add.s64 	%rd13, %rd6, %rd12;
	ld.global.f64 	%fd1, [%rd13];
	ld.global.f64 	%fd2, [%rd9];
	mul.f64 	%fd3, %fd2, %fd1;
	mul.wide.u32 	%rd14, %r21, 8;
	add.s64 	%rd15, %rd6, %rd14;
	ld.global.f64 	%fd4, [%rd15];
	ld.global.f64 	%fd5, [%rd11];
	mul.f64 	%fd6, %fd5, %fd4;
	sub.f64 	%fd7, %fd3, %fd6;
	add.s64 	%rd16, %rd5, %rd12;
	st.global.f64 	[%rd16], %fd7;
	ld.global.f64 	%fd8, [%rd13];
	ld.global.f64 	%fd9, [%rd15];
	mul.f64 	%fd10, %fd2, %fd9;
	fma.rn.f64 	%fd11, %fd5, %fd8, %fd10;
	add.s64 	%rd17, %rd5, %rd14;
	st.global.f64 	[%rd17], %fd11;

$L__BB25_2:
	ret;

}
	// .globl	rope_thd_f64
.visible .entry rope_thd_f64(
	.param .u64 rope_thd_f64_param_0,
	.param .u64 rope_thd_f64_param_1,
	.param .u64 rope_thd_f64_param_2,
	.param .u64 rope_thd_f64_param_3,
	.param .u32 rope_thd_f64_param_4,
	.param .u32 rope_thd_f64_param_5,
	.param .u32 rope_thd_f64_param_6,
	.param .u32 rope_thd_f64_param_7
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<12>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd1, [rope_thd_f64_param_0];
	ld.param.u64 	%rd2, [rope_thd_f64_param_1];
	ld.param.u64 	%rd3, [rope_thd_f64_param_2];
	ld.param.u64 	%rd4, [rope_thd_f64_param_3];
	ld.param.u32 	%r5, [rope_thd_f64_param_4];
	ld.param.u32 	%r2, [rope_thd_f64_param_5];
	ld.param.u32 	%r3, [rope_thd_f64_param_6];
	ld.param.u32 	%r4, [rope_thd_f64_param_7];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	shl.b32 	%r9, %r1, 1;
	mul.lo.s32 	%r10, %r2, %r5;
	mul.lo.s32 	%r11, %r10, %r3;
	mul.lo.s32 	%r12, %r11, %r4;
	setp.ge.u32 	%p1, %r9, %r12;
	@%p1 bra 	$L__BB26_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	shr.u32 	%r13, %r4, 1;
	div.u32 	%r14, %r1, %r13;
	mul.lo.s32 	%r15, %r14, %r13;
	sub.s32 	%r16, %r1, %r15;
	div.u32 	%r17, %r14, %r3;
	rem.u32 	%r18, %r17, %r2;
	mad.lo.s32 	%r19, %r14, %r4, %r16;
	add.s32 	%r20, %r19, %r13;
	mad.lo.s32 	%r21, %r18, %r13, %r16;
	mul.wide.u32 	%rd8, %r21, 8;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	mul.wide.u32 	%rd12, %r19, 8;
	add.s64 	%rd13, %rd6, %rd12;
	ld.global.f64 	%fd1, [%rd13];
	ld.global.f64 	%fd2, [%rd9];
	mul.f64 	%fd3, %fd2, %fd1;
	mul.wide.u32 	%rd14, %r20, 8;
	add.s64 	%rd15, %rd6, %rd14;
	ld.global.f64 	%fd4, [%rd15];
	ld.global.f64 	%fd5, [%rd11];
	mul.f64 	%fd6, %fd5, %fd4;
	sub.f64 	%fd7, %fd3, %fd6;
	add.s64 	%rd16, %rd5, %rd12;
	st.global.f64 	[%rd16], %fd7;
	ld.global.f64 	%fd8, [%rd13];
	ld.global.f64 	%fd9, [%rd15];
	mul.f64 	%fd10, %fd2, %fd9;
	fma.rn.f64 	%fd11, %fd5, %fd8, %fd10;
	add.s64 	%rd17, %rd5, %rd14;
	st.global.f64 	[%rd17], %fd11;

$L__BB26_2:
	ret;

}
	// .globl	fast_argmin_f32
.visible .entry fast_argmin_f32(
	.param .u64 fast_argmin_f32_param_0,
	.param .u64 fast_argmin_f32_param_1,
	.param .u64 fast_argmin_f32_param_2,
	.param .u64 fast_argmin_f32_param_3,
	.param .u64 fast_argmin_f32_param_4,
	.param .u64 fast_argmin_f32_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<69>;
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argminIfEvmmmPKmPKT_PjE3shr[4096];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argminIfEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd33, [fast_argmin_f32_param_0];
	ld.param.u64 	%rd34, [fast_argmin_f32_param_1];
	ld.param.u64 	%rd31, [fast_argmin_f32_param_2];
	ld.param.u64 	%rd35, [fast_argmin_f32_param_3];
	ld.param.u64 	%rd36, [fast_argmin_f32_param_4];
	ld.param.u64 	%rd32, [fast_argmin_f32_param_5];
	cvta.to.global.u64 	%rd1, %rd35;
	cvta.to.global.u64 	%rd2, %rd36;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd37, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	shl.b32 	%r12, %r1, 2;
	mov.u32 	%r13, _ZZ11fast_argminIfEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r12;
	mov.u32 	%r14, 2139095040;
	st.shared.u32 	[%r2], %r14;
	mov.u32 	%r15, _ZZ11fast_argminIfEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r12;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd38, %rd3, %rd34;
	add.s64 	%rd39, %rd38, %rd34;
	min.u64 	%rd4, %rd39, %rd33;
	add.s64 	%rd62, %rd38, %rd37;
	setp.lt.u64 	%p1, %rd62, %rd4;
	@%p1 bra 	$L__BB27_1;
	bra.uni 	$L__BB27_19;

$L__BB27_1:
	setp.eq.s64 	%p2, %rd31, 0;
	shl.b64 	%rd40, %rd31, 3;
	add.s64 	%rd41, %rd1, %rd40;
	add.s64 	%rd6, %rd41, -8;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd7, %r17;
	@%p2 bra 	$L__BB27_14;

	mov.u16 	%rs5, 1;
	mov.f32 	%f8, 0f7F800000;

$L__BB27_3:
	mov.u32 	%r40, 0;
	mov.u64 	%rd63, %rd62;
	mov.u32 	%r41, %r40;

$L__BB27_4:
	not.b32 	%r20, %r40;
	cvt.u64.u32 	%rd42, %r20;
	add.s64 	%rd43, %rd42, %rd31;
	and.b64  	%rd10, %rd63, 4294967295;
	shl.b64 	%rd44, %rd43, 3;
	and.b64  	%rd45, %rd44, 34359738360;
	add.s64 	%rd11, %rd1, %rd45;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd46, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd46, 0;
	@%p3 bra 	$L__BB27_6;

	div.u64 	%rd63, %rd10, %rd12;
	mul.lo.s64 	%rd47, %rd63, %rd12;
	sub.s64 	%rd65, %rd10, %rd47;
	bra.uni 	$L__BB27_7;

$L__BB27_6:
	cvt.u32.u64 	%r21, %rd12;
	cvt.u32.u64 	%r22, %rd10;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd63, %r23;
	cvt.u64.u32 	%rd65, %r25;

$L__BB27_7:
	add.s64 	%rd49, %rd11, %rd40;
	ld.global.u64 	%rd50, [%rd49];
	mul.lo.s64 	%rd51, %rd50, %rd65;
	cvt.u32.u64 	%r26, %rd51;
	add.s32 	%r41, %r41, %r26;
	add.s32 	%r40, %r40, 1;
	cvt.u64.u32 	%rd52, %r40;
	setp.lt.u64 	%p4, %rd52, %rd31;
	@%p4 bra 	$L__BB27_4;

	mul.wide.u32 	%rd53, %r41, 4;
	add.s64 	%rd54, %rd2, %rd53;
	ld.global.f32 	%f2, [%rd54];
	setp.geu.f32 	%p5, %f2, %f8;
	and.b16  	%rs3, %rs5, 255;
	setp.eq.s16 	%p6, %rs3, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB27_13;

	st.shared.f32 	[%r2], %f2;
	ld.global.u64 	%rd19, [%rd6];
	or.b64  	%rd55, %rd62, %rd19;
	and.b64  	%rd56, %rd55, -4294967296;
	setp.eq.s64 	%p8, %rd56, 0;
	@%p8 bra 	$L__BB27_11;

	rem.u64 	%rd66, %rd62, %rd19;
	bra.uni 	$L__BB27_12;

$L__BB27_11:
	cvt.u32.u64 	%r27, %rd19;
	cvt.u32.u64 	%r28, %rd62;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd66, %r29;

$L__BB27_12:
	st.shared.u32 	[%r3], %rd66;
	mov.f32 	%f8, %f2;

$L__BB27_13:
	add.s64 	%rd62, %rd62, %rd7;
	setp.lt.u64 	%p9, %rd62, %rd4;
	mov.u16 	%rs5, 0;
	@%p9 bra 	$L__BB27_3;
	bra.uni 	$L__BB27_19;

$L__BB27_14:
	ld.global.f32 	%f6, [%rd2];
	st.shared.f32 	[%r2], %f6;
	ld.global.u64 	%rd24, [%rd6];
	or.b64  	%rd57, %rd62, %rd24;
	and.b64  	%rd58, %rd57, -4294967296;
	setp.eq.s64 	%p10, %rd58, 0;
	@%p10 bra 	$L__BB27_16;

	rem.u64 	%rd67, %rd62, %rd24;
	bra.uni 	$L__BB27_17;

$L__BB27_16:
	cvt.u32.u64 	%r30, %rd24;
	cvt.u32.u64 	%r31, %rd62;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd67, %r32;

$L__BB27_17:
	st.shared.u32 	[%r3], %rd67;
	add.s64 	%rd68, %rd62, %rd7;
	setp.ge.u64 	%p11, %rd68, %rd4;
	@%p11 bra 	$L__BB27_19;

$L__BB27_18:
	.pragma "nounroll";
	add.s64 	%rd68, %rd68, %rd7;
	setp.lt.u64 	%p12, %rd68, %rd4;
	@%p12 bra 	$L__BB27_18;

$L__BB27_19:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r42, %r33, 1;
	setp.eq.s32 	%p13, %r42, 0;
	@%p13 bra 	$L__BB27_24;

$L__BB27_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r42;
	@%p14 bra 	$L__BB27_23;

	shl.b32 	%r34, %r42, 2;
	add.s32 	%r35, %r2, %r34;
	ld.shared.f32 	%f7, [%r2];
	ld.shared.f32 	%f4, [%r35];
	setp.geu.f32 	%p15, %f4, %f7;
	@%p15 bra 	$L__BB27_23;

	st.shared.f32 	[%r2], %f4;
	add.s32 	%r37, %r3, %r34;
	ld.shared.u32 	%r38, [%r37];
	st.shared.u32 	[%r3], %r38;

$L__BB27_23:
	shr.u32 	%r42, %r42, 1;
	setp.ne.s32 	%p16, %r42, 0;
	@%p16 bra 	$L__BB27_20;

$L__BB27_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB27_26;

	ld.shared.u32 	%r39, [_ZZ11fast_argminIfEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd59, %rd32;
	shl.b64 	%rd60, %rd3, 2;
	add.s64 	%rd61, %rd59, %rd60;
	st.global.u32 	[%rd61], %r39;

$L__BB27_26:
	ret;

}
	// .globl	fast_argmax_f32
.visible .entry fast_argmax_f32(
	.param .u64 fast_argmax_f32_param_0,
	.param .u64 fast_argmax_f32_param_1,
	.param .u64 fast_argmax_f32_param_2,
	.param .u64 fast_argmax_f32_param_3,
	.param .u64 fast_argmax_f32_param_4,
	.param .u64 fast_argmax_f32_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<69>;
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argmaxIfEvmmmPKmPKT_PjE3shr[4096];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argmaxIfEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd33, [fast_argmax_f32_param_0];
	ld.param.u64 	%rd34, [fast_argmax_f32_param_1];
	ld.param.u64 	%rd31, [fast_argmax_f32_param_2];
	ld.param.u64 	%rd35, [fast_argmax_f32_param_3];
	ld.param.u64 	%rd36, [fast_argmax_f32_param_4];
	ld.param.u64 	%rd32, [fast_argmax_f32_param_5];
	cvta.to.global.u64 	%rd1, %rd35;
	cvta.to.global.u64 	%rd2, %rd36;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd37, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	shl.b32 	%r12, %r1, 2;
	mov.u32 	%r13, _ZZ11fast_argmaxIfEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r12;
	mov.u32 	%r14, -8388608;
	st.shared.u32 	[%r2], %r14;
	mov.u32 	%r15, _ZZ11fast_argmaxIfEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r12;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd38, %rd3, %rd34;
	add.s64 	%rd39, %rd38, %rd34;
	min.u64 	%rd4, %rd39, %rd33;
	add.s64 	%rd62, %rd38, %rd37;
	setp.lt.u64 	%p1, %rd62, %rd4;
	@%p1 bra 	$L__BB28_1;
	bra.uni 	$L__BB28_19;

$L__BB28_1:
	setp.eq.s64 	%p2, %rd31, 0;
	shl.b64 	%rd40, %rd31, 3;
	add.s64 	%rd41, %rd1, %rd40;
	add.s64 	%rd6, %rd41, -8;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd7, %r17;
	@%p2 bra 	$L__BB28_14;

	mov.u16 	%rs5, 1;
	mov.f32 	%f8, 0fFF800000;

$L__BB28_3:
	mov.u32 	%r40, 0;
	mov.u64 	%rd63, %rd62;
	mov.u32 	%r41, %r40;

$L__BB28_4:
	not.b32 	%r20, %r40;
	cvt.u64.u32 	%rd42, %r20;
	add.s64 	%rd43, %rd42, %rd31;
	and.b64  	%rd10, %rd63, 4294967295;
	shl.b64 	%rd44, %rd43, 3;
	and.b64  	%rd45, %rd44, 34359738360;
	add.s64 	%rd11, %rd1, %rd45;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd46, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd46, 0;
	@%p3 bra 	$L__BB28_6;

	div.u64 	%rd63, %rd10, %rd12;
	mul.lo.s64 	%rd47, %rd63, %rd12;
	sub.s64 	%rd65, %rd10, %rd47;
	bra.uni 	$L__BB28_7;

$L__BB28_6:
	cvt.u32.u64 	%r21, %rd12;
	cvt.u32.u64 	%r22, %rd10;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd63, %r23;
	cvt.u64.u32 	%rd65, %r25;

$L__BB28_7:
	add.s64 	%rd49, %rd11, %rd40;
	ld.global.u64 	%rd50, [%rd49];
	mul.lo.s64 	%rd51, %rd50, %rd65;
	cvt.u32.u64 	%r26, %rd51;
	add.s32 	%r41, %r41, %r26;
	add.s32 	%r40, %r40, 1;
	cvt.u64.u32 	%rd52, %r40;
	setp.lt.u64 	%p4, %rd52, %rd31;
	@%p4 bra 	$L__BB28_4;

	mul.wide.u32 	%rd53, %r41, 4;
	add.s64 	%rd54, %rd2, %rd53;
	ld.global.f32 	%f2, [%rd54];
	setp.leu.f32 	%p5, %f2, %f8;
	and.b16  	%rs3, %rs5, 255;
	setp.eq.s16 	%p6, %rs3, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB28_13;

	st.shared.f32 	[%r2], %f2;
	ld.global.u64 	%rd19, [%rd6];
	or.b64  	%rd55, %rd62, %rd19;
	and.b64  	%rd56, %rd55, -4294967296;
	setp.eq.s64 	%p8, %rd56, 0;
	@%p8 bra 	$L__BB28_11;

	rem.u64 	%rd66, %rd62, %rd19;
	bra.uni 	$L__BB28_12;

$L__BB28_11:
	cvt.u32.u64 	%r27, %rd19;
	cvt.u32.u64 	%r28, %rd62;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd66, %r29;

$L__BB28_12:
	st.shared.u32 	[%r3], %rd66;
	mov.f32 	%f8, %f2;

$L__BB28_13:
	add.s64 	%rd62, %rd62, %rd7;
	setp.lt.u64 	%p9, %rd62, %rd4;
	mov.u16 	%rs5, 0;
	@%p9 bra 	$L__BB28_3;
	bra.uni 	$L__BB28_19;

$L__BB28_14:
	ld.global.f32 	%f6, [%rd2];
	st.shared.f32 	[%r2], %f6;
	ld.global.u64 	%rd24, [%rd6];
	or.b64  	%rd57, %rd62, %rd24;
	and.b64  	%rd58, %rd57, -4294967296;
	setp.eq.s64 	%p10, %rd58, 0;
	@%p10 bra 	$L__BB28_16;

	rem.u64 	%rd67, %rd62, %rd24;
	bra.uni 	$L__BB28_17;

$L__BB28_16:
	cvt.u32.u64 	%r30, %rd24;
	cvt.u32.u64 	%r31, %rd62;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd67, %r32;

$L__BB28_17:
	st.shared.u32 	[%r3], %rd67;
	add.s64 	%rd68, %rd62, %rd7;
	setp.ge.u64 	%p11, %rd68, %rd4;
	@%p11 bra 	$L__BB28_19;

$L__BB28_18:
	.pragma "nounroll";
	add.s64 	%rd68, %rd68, %rd7;
	setp.lt.u64 	%p12, %rd68, %rd4;
	@%p12 bra 	$L__BB28_18;

$L__BB28_19:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r42, %r33, 1;
	setp.eq.s32 	%p13, %r42, 0;
	@%p13 bra 	$L__BB28_24;

$L__BB28_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r42;
	@%p14 bra 	$L__BB28_23;

	shl.b32 	%r34, %r42, 2;
	add.s32 	%r35, %r2, %r34;
	ld.shared.f32 	%f7, [%r2];
	ld.shared.f32 	%f4, [%r35];
	setp.leu.f32 	%p15, %f4, %f7;
	@%p15 bra 	$L__BB28_23;

	st.shared.f32 	[%r2], %f4;
	add.s32 	%r37, %r3, %r34;
	ld.shared.u32 	%r38, [%r37];
	st.shared.u32 	[%r3], %r38;

$L__BB28_23:
	shr.u32 	%r42, %r42, 1;
	setp.ne.s32 	%p16, %r42, 0;
	@%p16 bra 	$L__BB28_20;

$L__BB28_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB28_26;

	ld.shared.u32 	%r39, [_ZZ11fast_argmaxIfEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd59, %rd32;
	shl.b64 	%rd60, %rd3, 2;
	add.s64 	%rd61, %rd59, %rd60;
	st.global.u32 	[%rd61], %r39;

$L__BB28_26:
	ret;

}
	// .globl	fast_min_f32
.visible .entry fast_min_f32(
	.param .u64 fast_min_f32_param_0,
	.param .u64 fast_min_f32_param_1,
	.param .u64 fast_min_f32_param_2,
	.param .u64 fast_min_f32_param_3,
	.param .u64 fast_min_f32_param_4,
	.param .u64 fast_min_f32_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 4 .b8 _ZZ8fast_minIfEvmmmPKmPKT_PS2_E3shr[4096];

	ld.param.u64 	%rd23, [fast_min_f32_param_0];
	ld.param.u64 	%rd24, [fast_min_f32_param_1];
	ld.param.u64 	%rd20, [fast_min_f32_param_2];
	ld.param.u64 	%rd21, [fast_min_f32_param_3];
	ld.param.u64 	%rd25, [fast_min_f32_param_4];
	ld.param.u64 	%rd22, [fast_min_f32_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	shl.b32 	%r11, %r1, 2;
	mov.u32 	%r12, _ZZ8fast_minIfEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.u32 	%r13, 2139095040;
	st.shared.u32 	[%r2], %r13;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB29_1;
	bra.uni 	$L__BB29_12;

$L__BB29_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r14, %ntid.x;
	cvt.u64.u32 	%rd4, %r14;
	@%p2 bra 	$L__BB29_9;

	cvta.to.global.u64 	%rd5, %rd21;
	mov.f32 	%f16, 0f7F800000;

$L__BB29_3:
	mov.u32 	%r28, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r29, %r28;

$L__BB29_4:
	not.b32 	%r17, %r28;
	cvt.u64.u32 	%rd30, %r17;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB29_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB29_7;

$L__BB29_6:
	cvt.u32.u64 	%r18, %rd10;
	cvt.u32.u64 	%r19, %rd8;
	div.u32 	%r20, %r19, %r18;
	mul.lo.s32 	%r21, %r20, %r18;
	sub.s32 	%r22, %r19, %r21;
	cvt.u64.u32 	%rd47, %r20;
	cvt.u64.u32 	%rd49, %r22;

$L__BB29_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r23, %rd39;
	add.s32 	%r29, %r29, %r23;
	add.s32 	%r28, %r28, 1;
	cvt.u64.u32 	%rd40, %r28;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB29_4;

	mul.wide.u32 	%rd41, %r29, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.f32 	%f8, [%rd42];
	min.f32 	%f16, %f16, %f8;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB29_3;
	bra.uni 	$L__BB29_11;

$L__BB29_9:
	ld.global.f32 	%f3, [%rd1];
	mov.f32 	%f16, 0f7F800000;

$L__BB29_10:
	min.f32 	%f16, %f16, %f3;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB29_10;

$L__BB29_11:
	st.shared.f32 	[%r2], %f16;

$L__BB29_12:
	mov.u32 	%r24, %ntid.x;
	shr.u32 	%r30, %r24, 1;
	setp.eq.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB29_16;

$L__BB29_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r30;
	@%p8 bra 	$L__BB29_15;

	ld.shared.f32 	%f10, [%r2];
	shl.b32 	%r25, %r30, 2;
	add.s32 	%r26, %r2, %r25;
	ld.shared.f32 	%f11, [%r26];
	min.f32 	%f12, %f10, %f11;
	st.shared.f32 	[%r2], %f12;

$L__BB29_15:
	shr.u32 	%r30, %r30, 1;
	setp.ne.s32 	%p9, %r30, 0;
	@%p9 bra 	$L__BB29_13;

$L__BB29_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB29_18;

	ld.shared.f32 	%f13, [_ZZ8fast_minIfEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r10, 4;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.f32 	[%rd45], %f13;

$L__BB29_18:
	ret;

}
	// .globl	fast_max_f32
.visible .entry fast_max_f32(
	.param .u64 fast_max_f32_param_0,
	.param .u64 fast_max_f32_param_1,
	.param .u64 fast_max_f32_param_2,
	.param .u64 fast_max_f32_param_3,
	.param .u64 fast_max_f32_param_4,
	.param .u64 fast_max_f32_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 4 .b8 _ZZ8fast_maxIfEvmmmPKmPKT_PS2_E3shr[4096];

	ld.param.u64 	%rd23, [fast_max_f32_param_0];
	ld.param.u64 	%rd24, [fast_max_f32_param_1];
	ld.param.u64 	%rd20, [fast_max_f32_param_2];
	ld.param.u64 	%rd21, [fast_max_f32_param_3];
	ld.param.u64 	%rd25, [fast_max_f32_param_4];
	ld.param.u64 	%rd22, [fast_max_f32_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	shl.b32 	%r11, %r1, 2;
	mov.u32 	%r12, _ZZ8fast_maxIfEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.u32 	%r13, -8388608;
	st.shared.u32 	[%r2], %r13;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB30_1;
	bra.uni 	$L__BB30_12;

$L__BB30_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r14, %ntid.x;
	cvt.u64.u32 	%rd4, %r14;
	@%p2 bra 	$L__BB30_9;

	cvta.to.global.u64 	%rd5, %rd21;
	mov.f32 	%f16, 0fFF800000;

$L__BB30_3:
	mov.u32 	%r28, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r29, %r28;

$L__BB30_4:
	not.b32 	%r17, %r28;
	cvt.u64.u32 	%rd30, %r17;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB30_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB30_7;

$L__BB30_6:
	cvt.u32.u64 	%r18, %rd10;
	cvt.u32.u64 	%r19, %rd8;
	div.u32 	%r20, %r19, %r18;
	mul.lo.s32 	%r21, %r20, %r18;
	sub.s32 	%r22, %r19, %r21;
	cvt.u64.u32 	%rd47, %r20;
	cvt.u64.u32 	%rd49, %r22;

$L__BB30_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r23, %rd39;
	add.s32 	%r29, %r29, %r23;
	add.s32 	%r28, %r28, 1;
	cvt.u64.u32 	%rd40, %r28;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB30_4;

	mul.wide.u32 	%rd41, %r29, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.f32 	%f8, [%rd42];
	max.f32 	%f16, %f16, %f8;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB30_3;
	bra.uni 	$L__BB30_11;

$L__BB30_9:
	ld.global.f32 	%f3, [%rd1];
	mov.f32 	%f16, 0fFF800000;

$L__BB30_10:
	max.f32 	%f16, %f16, %f3;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB30_10;

$L__BB30_11:
	st.shared.f32 	[%r2], %f16;

$L__BB30_12:
	mov.u32 	%r24, %ntid.x;
	shr.u32 	%r30, %r24, 1;
	setp.eq.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB30_16;

$L__BB30_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r30;
	@%p8 bra 	$L__BB30_15;

	ld.shared.f32 	%f10, [%r2];
	shl.b32 	%r25, %r30, 2;
	add.s32 	%r26, %r2, %r25;
	ld.shared.f32 	%f11, [%r26];
	max.f32 	%f12, %f10, %f11;
	st.shared.f32 	[%r2], %f12;

$L__BB30_15:
	shr.u32 	%r30, %r30, 1;
	setp.ne.s32 	%p9, %r30, 0;
	@%p9 bra 	$L__BB30_13;

$L__BB30_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB30_18;

	ld.shared.f32 	%f13, [_ZZ8fast_maxIfEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r10, 4;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.f32 	[%rd45], %f13;

$L__BB30_18:
	ret;

}
	// .globl	fast_sum_f32
.visible .entry fast_sum_f32(
	.param .u64 fast_sum_f32_param_0,
	.param .u64 fast_sum_f32_param_1,
	.param .u64 fast_sum_f32_param_2,
	.param .u64 fast_sum_f32_param_3,
	.param .u64 fast_sum_f32_param_4,
	.param .u64 fast_sum_f32_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 4 .b8 _ZZ8fast_sumIfEvmmmPKmPKT_PS2_E3shr[4096];

	ld.param.u64 	%rd23, [fast_sum_f32_param_0];
	ld.param.u64 	%rd24, [fast_sum_f32_param_1];
	ld.param.u64 	%rd20, [fast_sum_f32_param_2];
	ld.param.u64 	%rd21, [fast_sum_f32_param_3];
	ld.param.u64 	%rd25, [fast_sum_f32_param_4];
	ld.param.u64 	%rd22, [fast_sum_f32_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	shl.b32 	%r11, %r1, 2;
	mov.u32 	%r12, _ZZ8fast_sumIfEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.u32 	%r13, 0;
	st.shared.u32 	[%r2], %r13;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB31_1;
	bra.uni 	$L__BB31_12;

$L__BB31_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r14, %ntid.x;
	cvt.u64.u32 	%rd4, %r14;
	@%p2 bra 	$L__BB31_9;

	cvta.to.global.u64 	%rd5, %rd21;
	mov.f32 	%f16, 0f00000000;

$L__BB31_3:
	mov.u32 	%r28, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r29, %r28;

$L__BB31_4:
	not.b32 	%r17, %r28;
	cvt.u64.u32 	%rd30, %r17;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB31_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB31_7;

$L__BB31_6:
	cvt.u32.u64 	%r18, %rd10;
	cvt.u32.u64 	%r19, %rd8;
	div.u32 	%r20, %r19, %r18;
	mul.lo.s32 	%r21, %r20, %r18;
	sub.s32 	%r22, %r19, %r21;
	cvt.u64.u32 	%rd47, %r20;
	cvt.u64.u32 	%rd49, %r22;

$L__BB31_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r23, %rd39;
	add.s32 	%r29, %r29, %r23;
	add.s32 	%r28, %r28, 1;
	cvt.u64.u32 	%rd40, %r28;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB31_4;

	mul.wide.u32 	%rd41, %r29, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.f32 	%f8, [%rd42];
	add.f32 	%f16, %f8, %f16;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB31_3;
	bra.uni 	$L__BB31_11;

$L__BB31_9:
	ld.global.f32 	%f3, [%rd1];
	mov.f32 	%f16, 0f00000000;

$L__BB31_10:
	add.f32 	%f16, %f3, %f16;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB31_10;

$L__BB31_11:
	st.shared.f32 	[%r2], %f16;

$L__BB31_12:
	mov.u32 	%r24, %ntid.x;
	shr.u32 	%r30, %r24, 1;
	setp.eq.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB31_16;

$L__BB31_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r30;
	@%p8 bra 	$L__BB31_15;

	shl.b32 	%r25, %r30, 2;
	add.s32 	%r26, %r2, %r25;
	ld.shared.f32 	%f10, [%r2];
	ld.shared.f32 	%f11, [%r26];
	add.f32 	%f12, %f11, %f10;
	st.shared.f32 	[%r2], %f12;

$L__BB31_15:
	shr.u32 	%r30, %r30, 1;
	setp.ne.s32 	%p9, %r30, 0;
	@%p9 bra 	$L__BB31_13;

$L__BB31_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB31_18;

	ld.shared.f32 	%f13, [_ZZ8fast_sumIfEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r10, 4;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.f32 	[%rd45], %f13;

$L__BB31_18:
	ret;

}
	// .globl	fast_argmin_f64
.visible .entry fast_argmin_f64(
	.param .u64 fast_argmin_f64_param_0,
	.param .u64 fast_argmin_f64_param_1,
	.param .u64 fast_argmin_f64_param_2,
	.param .u64 fast_argmin_f64_param_3,
	.param .u64 fast_argmin_f64_param_4,
	.param .u64 fast_argmin_f64_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<43>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<70>;
	// demoted variable
	.shared .align 8 .b8 _ZZ11fast_argminIdEvmmmPKmPKT_PjE3shr[8192];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argminIdEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd33, [fast_argmin_f64_param_0];
	ld.param.u64 	%rd34, [fast_argmin_f64_param_1];
	ld.param.u64 	%rd31, [fast_argmin_f64_param_2];
	ld.param.u64 	%rd35, [fast_argmin_f64_param_3];
	ld.param.u64 	%rd36, [fast_argmin_f64_param_4];
	ld.param.u64 	%rd32, [fast_argmin_f64_param_5];
	cvta.to.global.u64 	%rd1, %rd35;
	cvta.to.global.u64 	%rd2, %rd36;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd37, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	shl.b32 	%r12, %r1, 3;
	mov.u32 	%r13, _ZZ11fast_argminIdEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r12;
	mov.u64 	%rd38, 9218868437227405312;
	st.shared.u64 	[%r2], %rd38;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ11fast_argminIdEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r14;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd39, %rd3, %rd34;
	add.s64 	%rd40, %rd39, %rd34;
	min.u64 	%rd4, %rd40, %rd33;
	add.s64 	%rd63, %rd39, %rd37;
	setp.lt.u64 	%p1, %rd63, %rd4;
	@%p1 bra 	$L__BB32_1;
	bra.uni 	$L__BB32_19;

$L__BB32_1:
	setp.eq.s64 	%p2, %rd31, 0;
	shl.b64 	%rd41, %rd31, 3;
	add.s64 	%rd42, %rd1, %rd41;
	add.s64 	%rd6, %rd42, -8;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd7, %r17;
	@%p2 bra 	$L__BB32_14;

	mov.u16 	%rs5, 1;
	mov.f64 	%fd8, 0d7FF0000000000000;

$L__BB32_3:
	mov.u32 	%r40, 0;
	mov.u64 	%rd64, %rd63;
	mov.u32 	%r41, %r40;

$L__BB32_4:
	not.b32 	%r20, %r40;
	cvt.u64.u32 	%rd43, %r20;
	add.s64 	%rd44, %rd43, %rd31;
	and.b64  	%rd10, %rd64, 4294967295;
	shl.b64 	%rd45, %rd44, 3;
	and.b64  	%rd46, %rd45, 34359738360;
	add.s64 	%rd11, %rd1, %rd46;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd47, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd47, 0;
	@%p3 bra 	$L__BB32_6;

	div.u64 	%rd64, %rd10, %rd12;
	mul.lo.s64 	%rd48, %rd64, %rd12;
	sub.s64 	%rd66, %rd10, %rd48;
	bra.uni 	$L__BB32_7;

$L__BB32_6:
	cvt.u32.u64 	%r21, %rd12;
	cvt.u32.u64 	%r22, %rd10;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd64, %r23;
	cvt.u64.u32 	%rd66, %r25;

$L__BB32_7:
	add.s64 	%rd50, %rd11, %rd41;
	ld.global.u64 	%rd51, [%rd50];
	mul.lo.s64 	%rd52, %rd51, %rd66;
	cvt.u32.u64 	%r26, %rd52;
	add.s32 	%r41, %r41, %r26;
	add.s32 	%r40, %r40, 1;
	cvt.u64.u32 	%rd53, %r40;
	setp.lt.u64 	%p4, %rd53, %rd31;
	@%p4 bra 	$L__BB32_4;

	mul.wide.u32 	%rd54, %r41, 8;
	add.s64 	%rd55, %rd2, %rd54;
	ld.global.f64 	%fd2, [%rd55];
	setp.geu.f64 	%p5, %fd2, %fd8;
	and.b16  	%rs3, %rs5, 255;
	setp.eq.s16 	%p6, %rs3, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB32_13;

	st.shared.f64 	[%r2], %fd2;
	ld.global.u64 	%rd19, [%rd6];
	or.b64  	%rd56, %rd63, %rd19;
	and.b64  	%rd57, %rd56, -4294967296;
	setp.eq.s64 	%p8, %rd57, 0;
	@%p8 bra 	$L__BB32_11;

	rem.u64 	%rd67, %rd63, %rd19;
	bra.uni 	$L__BB32_12;

$L__BB32_11:
	cvt.u32.u64 	%r27, %rd19;
	cvt.u32.u64 	%r28, %rd63;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd67, %r29;

$L__BB32_12:
	st.shared.u32 	[%r3], %rd67;
	mov.f64 	%fd8, %fd2;

$L__BB32_13:
	add.s64 	%rd63, %rd63, %rd7;
	setp.lt.u64 	%p9, %rd63, %rd4;
	mov.u16 	%rs5, 0;
	@%p9 bra 	$L__BB32_3;
	bra.uni 	$L__BB32_19;

$L__BB32_14:
	ld.global.f64 	%fd6, [%rd2];
	st.shared.f64 	[%r2], %fd6;
	ld.global.u64 	%rd24, [%rd6];
	or.b64  	%rd58, %rd63, %rd24;
	and.b64  	%rd59, %rd58, -4294967296;
	setp.eq.s64 	%p10, %rd59, 0;
	@%p10 bra 	$L__BB32_16;

	rem.u64 	%rd68, %rd63, %rd24;
	bra.uni 	$L__BB32_17;

$L__BB32_16:
	cvt.u32.u64 	%r30, %rd24;
	cvt.u32.u64 	%r31, %rd63;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd68, %r32;

$L__BB32_17:
	st.shared.u32 	[%r3], %rd68;
	add.s64 	%rd69, %rd63, %rd7;
	setp.ge.u64 	%p11, %rd69, %rd4;
	@%p11 bra 	$L__BB32_19;

$L__BB32_18:
	.pragma "nounroll";
	add.s64 	%rd69, %rd69, %rd7;
	setp.lt.u64 	%p12, %rd69, %rd4;
	@%p12 bra 	$L__BB32_18;

$L__BB32_19:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r42, %r33, 1;
	setp.eq.s32 	%p13, %r42, 0;
	@%p13 bra 	$L__BB32_24;

$L__BB32_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r42;
	@%p14 bra 	$L__BB32_23;

	shl.b32 	%r34, %r42, 3;
	add.s32 	%r35, %r2, %r34;
	ld.shared.f64 	%fd7, [%r2];
	ld.shared.f64 	%fd4, [%r35];
	setp.geu.f64 	%p15, %fd4, %fd7;
	@%p15 bra 	$L__BB32_23;

	st.shared.f64 	[%r2], %fd4;
	shl.b32 	%r36, %r42, 2;
	add.s32 	%r37, %r3, %r36;
	ld.shared.u32 	%r38, [%r37];
	st.shared.u32 	[%r3], %r38;

$L__BB32_23:
	shr.u32 	%r42, %r42, 1;
	setp.ne.s32 	%p16, %r42, 0;
	@%p16 bra 	$L__BB32_20;

$L__BB32_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB32_26;

	ld.shared.u32 	%r39, [_ZZ11fast_argminIdEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd60, %rd32;
	shl.b64 	%rd61, %rd3, 2;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.u32 	[%rd62], %r39;

$L__BB32_26:
	ret;

}
	// .globl	fast_argmax_f64
.visible .entry fast_argmax_f64(
	.param .u64 fast_argmax_f64_param_0,
	.param .u64 fast_argmax_f64_param_1,
	.param .u64 fast_argmax_f64_param_2,
	.param .u64 fast_argmax_f64_param_3,
	.param .u64 fast_argmax_f64_param_4,
	.param .u64 fast_argmax_f64_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<43>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<70>;
	// demoted variable
	.shared .align 8 .b8 _ZZ11fast_argmaxIdEvmmmPKmPKT_PjE3shr[8192];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argmaxIdEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd33, [fast_argmax_f64_param_0];
	ld.param.u64 	%rd34, [fast_argmax_f64_param_1];
	ld.param.u64 	%rd31, [fast_argmax_f64_param_2];
	ld.param.u64 	%rd35, [fast_argmax_f64_param_3];
	ld.param.u64 	%rd36, [fast_argmax_f64_param_4];
	ld.param.u64 	%rd32, [fast_argmax_f64_param_5];
	cvta.to.global.u64 	%rd1, %rd35;
	cvta.to.global.u64 	%rd2, %rd36;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd37, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	shl.b32 	%r12, %r1, 3;
	mov.u32 	%r13, _ZZ11fast_argmaxIdEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r12;
	mov.u64 	%rd38, -4503599627370496;
	st.shared.u64 	[%r2], %rd38;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ11fast_argmaxIdEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r14;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd39, %rd3, %rd34;
	add.s64 	%rd40, %rd39, %rd34;
	min.u64 	%rd4, %rd40, %rd33;
	add.s64 	%rd63, %rd39, %rd37;
	setp.lt.u64 	%p1, %rd63, %rd4;
	@%p1 bra 	$L__BB33_1;
	bra.uni 	$L__BB33_19;

$L__BB33_1:
	setp.eq.s64 	%p2, %rd31, 0;
	shl.b64 	%rd41, %rd31, 3;
	add.s64 	%rd42, %rd1, %rd41;
	add.s64 	%rd6, %rd42, -8;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd7, %r17;
	@%p2 bra 	$L__BB33_14;

	mov.u16 	%rs5, 1;
	mov.f64 	%fd8, 0dFFF0000000000000;

$L__BB33_3:
	mov.u32 	%r40, 0;
	mov.u64 	%rd64, %rd63;
	mov.u32 	%r41, %r40;

$L__BB33_4:
	not.b32 	%r20, %r40;
	cvt.u64.u32 	%rd43, %r20;
	add.s64 	%rd44, %rd43, %rd31;
	and.b64  	%rd10, %rd64, 4294967295;
	shl.b64 	%rd45, %rd44, 3;
	and.b64  	%rd46, %rd45, 34359738360;
	add.s64 	%rd11, %rd1, %rd46;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd47, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd47, 0;
	@%p3 bra 	$L__BB33_6;

	div.u64 	%rd64, %rd10, %rd12;
	mul.lo.s64 	%rd48, %rd64, %rd12;
	sub.s64 	%rd66, %rd10, %rd48;
	bra.uni 	$L__BB33_7;

$L__BB33_6:
	cvt.u32.u64 	%r21, %rd12;
	cvt.u32.u64 	%r22, %rd10;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd64, %r23;
	cvt.u64.u32 	%rd66, %r25;

$L__BB33_7:
	add.s64 	%rd50, %rd11, %rd41;
	ld.global.u64 	%rd51, [%rd50];
	mul.lo.s64 	%rd52, %rd51, %rd66;
	cvt.u32.u64 	%r26, %rd52;
	add.s32 	%r41, %r41, %r26;
	add.s32 	%r40, %r40, 1;
	cvt.u64.u32 	%rd53, %r40;
	setp.lt.u64 	%p4, %rd53, %rd31;
	@%p4 bra 	$L__BB33_4;

	mul.wide.u32 	%rd54, %r41, 8;
	add.s64 	%rd55, %rd2, %rd54;
	ld.global.f64 	%fd2, [%rd55];
	setp.leu.f64 	%p5, %fd2, %fd8;
	and.b16  	%rs3, %rs5, 255;
	setp.eq.s16 	%p6, %rs3, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB33_13;

	st.shared.f64 	[%r2], %fd2;
	ld.global.u64 	%rd19, [%rd6];
	or.b64  	%rd56, %rd63, %rd19;
	and.b64  	%rd57, %rd56, -4294967296;
	setp.eq.s64 	%p8, %rd57, 0;
	@%p8 bra 	$L__BB33_11;

	rem.u64 	%rd67, %rd63, %rd19;
	bra.uni 	$L__BB33_12;

$L__BB33_11:
	cvt.u32.u64 	%r27, %rd19;
	cvt.u32.u64 	%r28, %rd63;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd67, %r29;

$L__BB33_12:
	st.shared.u32 	[%r3], %rd67;
	mov.f64 	%fd8, %fd2;

$L__BB33_13:
	add.s64 	%rd63, %rd63, %rd7;
	setp.lt.u64 	%p9, %rd63, %rd4;
	mov.u16 	%rs5, 0;
	@%p9 bra 	$L__BB33_3;
	bra.uni 	$L__BB33_19;

$L__BB33_14:
	ld.global.f64 	%fd6, [%rd2];
	st.shared.f64 	[%r2], %fd6;
	ld.global.u64 	%rd24, [%rd6];
	or.b64  	%rd58, %rd63, %rd24;
	and.b64  	%rd59, %rd58, -4294967296;
	setp.eq.s64 	%p10, %rd59, 0;
	@%p10 bra 	$L__BB33_16;

	rem.u64 	%rd68, %rd63, %rd24;
	bra.uni 	$L__BB33_17;

$L__BB33_16:
	cvt.u32.u64 	%r30, %rd24;
	cvt.u32.u64 	%r31, %rd63;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd68, %r32;

$L__BB33_17:
	st.shared.u32 	[%r3], %rd68;
	add.s64 	%rd69, %rd63, %rd7;
	setp.ge.u64 	%p11, %rd69, %rd4;
	@%p11 bra 	$L__BB33_19;

$L__BB33_18:
	.pragma "nounroll";
	add.s64 	%rd69, %rd69, %rd7;
	setp.lt.u64 	%p12, %rd69, %rd4;
	@%p12 bra 	$L__BB33_18;

$L__BB33_19:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r42, %r33, 1;
	setp.eq.s32 	%p13, %r42, 0;
	@%p13 bra 	$L__BB33_24;

$L__BB33_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r42;
	@%p14 bra 	$L__BB33_23;

	shl.b32 	%r34, %r42, 3;
	add.s32 	%r35, %r2, %r34;
	ld.shared.f64 	%fd7, [%r2];
	ld.shared.f64 	%fd4, [%r35];
	setp.leu.f64 	%p15, %fd4, %fd7;
	@%p15 bra 	$L__BB33_23;

	st.shared.f64 	[%r2], %fd4;
	shl.b32 	%r36, %r42, 2;
	add.s32 	%r37, %r3, %r36;
	ld.shared.u32 	%r38, [%r37];
	st.shared.u32 	[%r3], %r38;

$L__BB33_23:
	shr.u32 	%r42, %r42, 1;
	setp.ne.s32 	%p16, %r42, 0;
	@%p16 bra 	$L__BB33_20;

$L__BB33_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB33_26;

	ld.shared.u32 	%r39, [_ZZ11fast_argmaxIdEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd60, %rd32;
	shl.b64 	%rd61, %rd3, 2;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.u32 	[%rd62], %r39;

$L__BB33_26:
	ret;

}
	// .globl	fast_min_f64
.visible .entry fast_min_f64(
	.param .u64 fast_min_f64_param_0,
	.param .u64 fast_min_f64_param_1,
	.param .u64 fast_min_f64_param_2,
	.param .u64 fast_min_f64_param_3,
	.param .u64 fast_min_f64_param_4,
	.param .u64 fast_min_f64_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<30>;
	.reg .f64 	%fd<17>;
	.reg .b64 	%rd<52>;
	// demoted variable
	.shared .align 8 .b8 _ZZ8fast_minIdEvmmmPKmPKT_PS2_E3shr[8192];

	ld.param.u64 	%rd23, [fast_min_f64_param_0];
	ld.param.u64 	%rd24, [fast_min_f64_param_1];
	ld.param.u64 	%rd20, [fast_min_f64_param_2];
	ld.param.u64 	%rd21, [fast_min_f64_param_3];
	ld.param.u64 	%rd25, [fast_min_f64_param_4];
	ld.param.u64 	%rd22, [fast_min_f64_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	shl.b32 	%r11, %r1, 3;
	mov.u32 	%r12, _ZZ8fast_minIdEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.u64 	%rd28, 9218868437227405312;
	st.shared.u64 	[%r2], %rd28;
	mul.lo.s64 	%rd29, %rd27, %rd24;
	add.s64 	%rd30, %rd29, %rd24;
	min.u64 	%rd2, %rd30, %rd23;
	add.s64 	%rd47, %rd29, %rd26;
	setp.lt.u64 	%p1, %rd47, %rd2;
	@%p1 bra 	$L__BB34_1;
	bra.uni 	$L__BB34_12;

$L__BB34_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r13, %ntid.x;
	cvt.u64.u32 	%rd4, %r13;
	@%p2 bra 	$L__BB34_9;

	cvta.to.global.u64 	%rd5, %rd21;
	mov.f64 	%fd16, 0d7FF0000000000000;

$L__BB34_3:
	mov.u32 	%r27, 0;
	mov.u64 	%rd48, %rd47;
	mov.u32 	%r28, %r27;

$L__BB34_4:
	not.b32 	%r16, %r27;
	cvt.u64.u32 	%rd31, %r16;
	add.s64 	%rd32, %rd31, %rd20;
	and.b64  	%rd8, %rd48, 4294967295;
	shl.b64 	%rd33, %rd32, 3;
	and.b64  	%rd34, %rd33, 34359738360;
	add.s64 	%rd9, %rd5, %rd34;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd35, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd35, 0;
	@%p3 bra 	$L__BB34_6;

	div.u64 	%rd48, %rd8, %rd10;
	mul.lo.s64 	%rd36, %rd48, %rd10;
	sub.s64 	%rd50, %rd8, %rd36;
	bra.uni 	$L__BB34_7;

$L__BB34_6:
	cvt.u32.u64 	%r17, %rd10;
	cvt.u32.u64 	%r18, %rd8;
	div.u32 	%r19, %r18, %r17;
	mul.lo.s32 	%r20, %r19, %r17;
	sub.s32 	%r21, %r18, %r20;
	cvt.u64.u32 	%rd48, %r19;
	cvt.u64.u32 	%rd50, %r21;

$L__BB34_7:
	shl.b64 	%rd37, %rd20, 3;
	add.s64 	%rd38, %rd9, %rd37;
	ld.global.u64 	%rd39, [%rd38];
	mul.lo.s64 	%rd40, %rd39, %rd50;
	cvt.u32.u64 	%r22, %rd40;
	add.s32 	%r28, %r28, %r22;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd41, %r27;
	setp.lt.u64 	%p4, %rd41, %rd20;
	@%p4 bra 	$L__BB34_4;

	mul.wide.u32 	%rd42, %r28, 8;
	add.s64 	%rd43, %rd1, %rd42;
	ld.global.f64 	%fd8, [%rd43];
	min.f64 	%fd16, %fd16, %fd8;
	add.s64 	%rd47, %rd47, %rd4;
	setp.lt.u64 	%p5, %rd47, %rd2;
	@%p5 bra 	$L__BB34_3;
	bra.uni 	$L__BB34_11;

$L__BB34_9:
	ld.global.f64 	%fd3, [%rd1];
	mov.f64 	%fd16, 0d7FF0000000000000;

$L__BB34_10:
	min.f64 	%fd16, %fd16, %fd3;
	add.s64 	%rd47, %rd47, %rd4;
	setp.lt.u64 	%p6, %rd47, %rd2;
	@%p6 bra 	$L__BB34_10;

$L__BB34_11:
	st.shared.f64 	[%r2], %fd16;

$L__BB34_12:
	mov.u32 	%r23, %ntid.x;
	shr.u32 	%r29, %r23, 1;
	setp.eq.s32 	%p7, %r29, 0;
	@%p7 bra 	$L__BB34_16;

$L__BB34_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r29;
	@%p8 bra 	$L__BB34_15;

	ld.shared.f64 	%fd10, [%r2];
	shl.b32 	%r24, %r29, 3;
	add.s32 	%r25, %r2, %r24;
	ld.shared.f64 	%fd11, [%r25];
	min.f64 	%fd12, %fd10, %fd11;
	st.shared.f64 	[%r2], %fd12;

$L__BB34_15:
	shr.u32 	%r29, %r29, 1;
	setp.ne.s32 	%p9, %r29, 0;
	@%p9 bra 	$L__BB34_13;

$L__BB34_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB34_18;

	ld.shared.f64 	%fd13, [_ZZ8fast_minIdEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd44, %rd22;
	mul.wide.u32 	%rd45, %r10, 8;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.f64 	[%rd46], %fd13;

$L__BB34_18:
	ret;

}
	// .globl	fast_max_f64
.visible .entry fast_max_f64(
	.param .u64 fast_max_f64_param_0,
	.param .u64 fast_max_f64_param_1,
	.param .u64 fast_max_f64_param_2,
	.param .u64 fast_max_f64_param_3,
	.param .u64 fast_max_f64_param_4,
	.param .u64 fast_max_f64_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<30>;
	.reg .f64 	%fd<17>;
	.reg .b64 	%rd<52>;
	// demoted variable
	.shared .align 8 .b8 _ZZ8fast_maxIdEvmmmPKmPKT_PS2_E3shr[8192];

	ld.param.u64 	%rd23, [fast_max_f64_param_0];
	ld.param.u64 	%rd24, [fast_max_f64_param_1];
	ld.param.u64 	%rd20, [fast_max_f64_param_2];
	ld.param.u64 	%rd21, [fast_max_f64_param_3];
	ld.param.u64 	%rd25, [fast_max_f64_param_4];
	ld.param.u64 	%rd22, [fast_max_f64_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	shl.b32 	%r11, %r1, 3;
	mov.u32 	%r12, _ZZ8fast_maxIdEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.u64 	%rd28, -4503599627370496;
	st.shared.u64 	[%r2], %rd28;
	mul.lo.s64 	%rd29, %rd27, %rd24;
	add.s64 	%rd30, %rd29, %rd24;
	min.u64 	%rd2, %rd30, %rd23;
	add.s64 	%rd47, %rd29, %rd26;
	setp.lt.u64 	%p1, %rd47, %rd2;
	@%p1 bra 	$L__BB35_1;
	bra.uni 	$L__BB35_12;

$L__BB35_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r13, %ntid.x;
	cvt.u64.u32 	%rd4, %r13;
	@%p2 bra 	$L__BB35_9;

	cvta.to.global.u64 	%rd5, %rd21;
	mov.f64 	%fd16, 0dFFF0000000000000;

$L__BB35_3:
	mov.u32 	%r27, 0;
	mov.u64 	%rd48, %rd47;
	mov.u32 	%r28, %r27;

$L__BB35_4:
	not.b32 	%r16, %r27;
	cvt.u64.u32 	%rd31, %r16;
	add.s64 	%rd32, %rd31, %rd20;
	and.b64  	%rd8, %rd48, 4294967295;
	shl.b64 	%rd33, %rd32, 3;
	and.b64  	%rd34, %rd33, 34359738360;
	add.s64 	%rd9, %rd5, %rd34;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd35, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd35, 0;
	@%p3 bra 	$L__BB35_6;

	div.u64 	%rd48, %rd8, %rd10;
	mul.lo.s64 	%rd36, %rd48, %rd10;
	sub.s64 	%rd50, %rd8, %rd36;
	bra.uni 	$L__BB35_7;

$L__BB35_6:
	cvt.u32.u64 	%r17, %rd10;
	cvt.u32.u64 	%r18, %rd8;
	div.u32 	%r19, %r18, %r17;
	mul.lo.s32 	%r20, %r19, %r17;
	sub.s32 	%r21, %r18, %r20;
	cvt.u64.u32 	%rd48, %r19;
	cvt.u64.u32 	%rd50, %r21;

$L__BB35_7:
	shl.b64 	%rd37, %rd20, 3;
	add.s64 	%rd38, %rd9, %rd37;
	ld.global.u64 	%rd39, [%rd38];
	mul.lo.s64 	%rd40, %rd39, %rd50;
	cvt.u32.u64 	%r22, %rd40;
	add.s32 	%r28, %r28, %r22;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd41, %r27;
	setp.lt.u64 	%p4, %rd41, %rd20;
	@%p4 bra 	$L__BB35_4;

	mul.wide.u32 	%rd42, %r28, 8;
	add.s64 	%rd43, %rd1, %rd42;
	ld.global.f64 	%fd8, [%rd43];
	max.f64 	%fd16, %fd16, %fd8;
	add.s64 	%rd47, %rd47, %rd4;
	setp.lt.u64 	%p5, %rd47, %rd2;
	@%p5 bra 	$L__BB35_3;
	bra.uni 	$L__BB35_11;

$L__BB35_9:
	ld.global.f64 	%fd3, [%rd1];
	mov.f64 	%fd16, 0dFFF0000000000000;

$L__BB35_10:
	max.f64 	%fd16, %fd16, %fd3;
	add.s64 	%rd47, %rd47, %rd4;
	setp.lt.u64 	%p6, %rd47, %rd2;
	@%p6 bra 	$L__BB35_10;

$L__BB35_11:
	st.shared.f64 	[%r2], %fd16;

$L__BB35_12:
	mov.u32 	%r23, %ntid.x;
	shr.u32 	%r29, %r23, 1;
	setp.eq.s32 	%p7, %r29, 0;
	@%p7 bra 	$L__BB35_16;

$L__BB35_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r29;
	@%p8 bra 	$L__BB35_15;

	ld.shared.f64 	%fd10, [%r2];
	shl.b32 	%r24, %r29, 3;
	add.s32 	%r25, %r2, %r24;
	ld.shared.f64 	%fd11, [%r25];
	max.f64 	%fd12, %fd10, %fd11;
	st.shared.f64 	[%r2], %fd12;

$L__BB35_15:
	shr.u32 	%r29, %r29, 1;
	setp.ne.s32 	%p9, %r29, 0;
	@%p9 bra 	$L__BB35_13;

$L__BB35_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB35_18;

	ld.shared.f64 	%fd13, [_ZZ8fast_maxIdEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd44, %rd22;
	mul.wide.u32 	%rd45, %r10, 8;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.f64 	[%rd46], %fd13;

$L__BB35_18:
	ret;

}
	// .globl	fast_sum_f64
.visible .entry fast_sum_f64(
	.param .u64 fast_sum_f64_param_0,
	.param .u64 fast_sum_f64_param_1,
	.param .u64 fast_sum_f64_param_2,
	.param .u64 fast_sum_f64_param_3,
	.param .u64 fast_sum_f64_param_4,
	.param .u64 fast_sum_f64_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<30>;
	.reg .f64 	%fd<17>;
	.reg .b64 	%rd<52>;
	// demoted variable
	.shared .align 8 .b8 _ZZ8fast_sumIdEvmmmPKmPKT_PS2_E3shr[8192];

	ld.param.u64 	%rd23, [fast_sum_f64_param_0];
	ld.param.u64 	%rd24, [fast_sum_f64_param_1];
	ld.param.u64 	%rd20, [fast_sum_f64_param_2];
	ld.param.u64 	%rd21, [fast_sum_f64_param_3];
	ld.param.u64 	%rd25, [fast_sum_f64_param_4];
	ld.param.u64 	%rd22, [fast_sum_f64_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	shl.b32 	%r11, %r1, 3;
	mov.u32 	%r12, _ZZ8fast_sumIdEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.u64 	%rd28, 0;
	st.shared.u64 	[%r2], %rd28;
	mul.lo.s64 	%rd29, %rd27, %rd24;
	add.s64 	%rd30, %rd29, %rd24;
	min.u64 	%rd2, %rd30, %rd23;
	add.s64 	%rd47, %rd29, %rd26;
	setp.lt.u64 	%p1, %rd47, %rd2;
	@%p1 bra 	$L__BB36_1;
	bra.uni 	$L__BB36_12;

$L__BB36_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r13, %ntid.x;
	cvt.u64.u32 	%rd4, %r13;
	@%p2 bra 	$L__BB36_9;

	cvta.to.global.u64 	%rd5, %rd21;
	mov.f64 	%fd16, 0d0000000000000000;

$L__BB36_3:
	mov.u32 	%r27, 0;
	mov.u64 	%rd48, %rd47;
	mov.u32 	%r28, %r27;

$L__BB36_4:
	not.b32 	%r16, %r27;
	cvt.u64.u32 	%rd31, %r16;
	add.s64 	%rd32, %rd31, %rd20;
	and.b64  	%rd8, %rd48, 4294967295;
	shl.b64 	%rd33, %rd32, 3;
	and.b64  	%rd34, %rd33, 34359738360;
	add.s64 	%rd9, %rd5, %rd34;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd35, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd35, 0;
	@%p3 bra 	$L__BB36_6;

	div.u64 	%rd48, %rd8, %rd10;
	mul.lo.s64 	%rd36, %rd48, %rd10;
	sub.s64 	%rd50, %rd8, %rd36;
	bra.uni 	$L__BB36_7;

$L__BB36_6:
	cvt.u32.u64 	%r17, %rd10;
	cvt.u32.u64 	%r18, %rd8;
	div.u32 	%r19, %r18, %r17;
	mul.lo.s32 	%r20, %r19, %r17;
	sub.s32 	%r21, %r18, %r20;
	cvt.u64.u32 	%rd48, %r19;
	cvt.u64.u32 	%rd50, %r21;

$L__BB36_7:
	shl.b64 	%rd37, %rd20, 3;
	add.s64 	%rd38, %rd9, %rd37;
	ld.global.u64 	%rd39, [%rd38];
	mul.lo.s64 	%rd40, %rd39, %rd50;
	cvt.u32.u64 	%r22, %rd40;
	add.s32 	%r28, %r28, %r22;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd41, %r27;
	setp.lt.u64 	%p4, %rd41, %rd20;
	@%p4 bra 	$L__BB36_4;

	mul.wide.u32 	%rd42, %r28, 8;
	add.s64 	%rd43, %rd1, %rd42;
	ld.global.f64 	%fd8, [%rd43];
	add.f64 	%fd16, %fd8, %fd16;
	add.s64 	%rd47, %rd47, %rd4;
	setp.lt.u64 	%p5, %rd47, %rd2;
	@%p5 bra 	$L__BB36_3;
	bra.uni 	$L__BB36_11;

$L__BB36_9:
	ld.global.f64 	%fd3, [%rd1];
	mov.f64 	%fd16, 0d0000000000000000;

$L__BB36_10:
	add.f64 	%fd16, %fd3, %fd16;
	add.s64 	%rd47, %rd47, %rd4;
	setp.lt.u64 	%p6, %rd47, %rd2;
	@%p6 bra 	$L__BB36_10;

$L__BB36_11:
	st.shared.f64 	[%r2], %fd16;

$L__BB36_12:
	mov.u32 	%r23, %ntid.x;
	shr.u32 	%r29, %r23, 1;
	setp.eq.s32 	%p7, %r29, 0;
	@%p7 bra 	$L__BB36_16;

$L__BB36_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r29;
	@%p8 bra 	$L__BB36_15;

	shl.b32 	%r24, %r29, 3;
	add.s32 	%r25, %r2, %r24;
	ld.shared.f64 	%fd10, [%r2];
	ld.shared.f64 	%fd11, [%r25];
	add.f64 	%fd12, %fd11, %fd10;
	st.shared.f64 	[%r2], %fd12;

$L__BB36_15:
	shr.u32 	%r29, %r29, 1;
	setp.ne.s32 	%p9, %r29, 0;
	@%p9 bra 	$L__BB36_13;

$L__BB36_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB36_18;

	ld.shared.f64 	%fd13, [_ZZ8fast_sumIdEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd44, %rd22;
	mul.wide.u32 	%rd45, %r10, 8;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.f64 	[%rd46], %fd13;

$L__BB36_18:
	ret;

}
	// .globl	fast_argmin_u32
.visible .entry fast_argmin_u32(
	.param .u64 fast_argmin_u32_param_0,
	.param .u64 fast_argmin_u32_param_1,
	.param .u64 fast_argmin_u32_param_2,
	.param .u64 fast_argmin_u32_param_3,
	.param .u64 fast_argmin_u32_param_4,
	.param .u64 fast_argmin_u32_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<69>;
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argminIjEvmmmPKmPKT_PjE3shr[4096];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argminIjEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd33, [fast_argmin_u32_param_0];
	ld.param.u64 	%rd34, [fast_argmin_u32_param_1];
	ld.param.u64 	%rd31, [fast_argmin_u32_param_2];
	ld.param.u64 	%rd35, [fast_argmin_u32_param_3];
	ld.param.u64 	%rd36, [fast_argmin_u32_param_4];
	ld.param.u64 	%rd32, [fast_argmin_u32_param_5];
	cvta.to.global.u64 	%rd1, %rd35;
	cvta.to.global.u64 	%rd2, %rd36;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd37, %r1;
	mov.u32 	%r16, %ctaid.x;
	cvt.u64.u32 	%rd3, %r16;
	shl.b32 	%r17, %r1, 2;
	mov.u32 	%r18, _ZZ11fast_argminIjEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r18, %r17;
	mov.f32 	%f1, 0f7F800000;
	cvt.rzi.u32.f32 	%r46, %f1;
	st.shared.u32 	[%r2], %r46;
	mov.u32 	%r19, _ZZ11fast_argminIjEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r4, %r19, %r17;
	mov.u32 	%r20, -1;
	st.shared.u32 	[%r4], %r20;
	mul.lo.s64 	%rd38, %rd3, %rd34;
	add.s64 	%rd39, %rd38, %rd34;
	min.u64 	%rd4, %rd39, %rd33;
	add.s64 	%rd62, %rd38, %rd37;
	setp.lt.u64 	%p1, %rd62, %rd4;
	@%p1 bra 	$L__BB37_1;
	bra.uni 	$L__BB37_19;

$L__BB37_1:
	setp.eq.s64 	%p2, %rd31, 0;
	shl.b64 	%rd40, %rd31, 3;
	add.s64 	%rd41, %rd1, %rd40;
	add.s64 	%rd6, %rd41, -8;
	mov.u32 	%r21, %ntid.x;
	cvt.u64.u32 	%rd7, %r21;
	@%p2 bra 	$L__BB37_14;

	mov.u16 	%rs5, 1;

$L__BB37_3:
	mov.u32 	%r47, 0;
	mov.u64 	%rd63, %rd62;
	mov.u32 	%r48, %r47;

$L__BB37_4:
	not.b32 	%r24, %r47;
	cvt.u64.u32 	%rd42, %r24;
	add.s64 	%rd43, %rd42, %rd31;
	and.b64  	%rd10, %rd63, 4294967295;
	shl.b64 	%rd44, %rd43, 3;
	and.b64  	%rd45, %rd44, 34359738360;
	add.s64 	%rd11, %rd1, %rd45;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd46, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd46, 0;
	@%p3 bra 	$L__BB37_6;

	div.u64 	%rd63, %rd10, %rd12;
	mul.lo.s64 	%rd47, %rd63, %rd12;
	sub.s64 	%rd65, %rd10, %rd47;
	bra.uni 	$L__BB37_7;

$L__BB37_6:
	cvt.u32.u64 	%r25, %rd12;
	cvt.u32.u64 	%r26, %rd10;
	div.u32 	%r27, %r26, %r25;
	mul.lo.s32 	%r28, %r27, %r25;
	sub.s32 	%r29, %r26, %r28;
	cvt.u64.u32 	%rd63, %r27;
	cvt.u64.u32 	%rd65, %r29;

$L__BB37_7:
	add.s64 	%rd49, %rd11, %rd40;
	ld.global.u64 	%rd50, [%rd49];
	mul.lo.s64 	%rd51, %rd50, %rd65;
	cvt.u32.u64 	%r30, %rd51;
	add.s32 	%r48, %r48, %r30;
	add.s32 	%r47, %r47, 1;
	cvt.u64.u32 	%rd52, %r47;
	setp.lt.u64 	%p4, %rd52, %rd31;
	@%p4 bra 	$L__BB37_4;

	mul.wide.u32 	%rd53, %r48, 4;
	add.s64 	%rd54, %rd2, %rd53;
	ld.global.u32 	%r10, [%rd54];
	setp.ge.u32 	%p5, %r10, %r46;
	and.b16  	%rs3, %rs5, 255;
	setp.eq.s16 	%p6, %rs3, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB37_13;

	st.shared.u32 	[%r2], %r10;
	ld.global.u64 	%rd19, [%rd6];
	or.b64  	%rd55, %rd62, %rd19;
	and.b64  	%rd56, %rd55, -4294967296;
	setp.eq.s64 	%p8, %rd56, 0;
	@%p8 bra 	$L__BB37_11;

	rem.u64 	%rd66, %rd62, %rd19;
	bra.uni 	$L__BB37_12;

$L__BB37_11:
	cvt.u32.u64 	%r31, %rd19;
	cvt.u32.u64 	%r32, %rd62;
	rem.u32 	%r33, %r32, %r31;
	cvt.u64.u32 	%rd66, %r33;

$L__BB37_12:
	st.shared.u32 	[%r4], %rd66;
	mov.u32 	%r46, %r10;

$L__BB37_13:
	add.s64 	%rd62, %rd62, %rd7;
	setp.lt.u64 	%p9, %rd62, %rd4;
	mov.u16 	%rs5, 0;
	@%p9 bra 	$L__BB37_3;
	bra.uni 	$L__BB37_19;

$L__BB37_14:
	ld.global.u32 	%r34, [%rd2];
	st.shared.u32 	[%r2], %r34;
	ld.global.u64 	%rd24, [%rd6];
	or.b64  	%rd57, %rd62, %rd24;
	and.b64  	%rd58, %rd57, -4294967296;
	setp.eq.s64 	%p10, %rd58, 0;
	@%p10 bra 	$L__BB37_16;

	rem.u64 	%rd67, %rd62, %rd24;
	bra.uni 	$L__BB37_17;

$L__BB37_16:
	cvt.u32.u64 	%r35, %rd24;
	cvt.u32.u64 	%r36, %rd62;
	rem.u32 	%r37, %r36, %r35;
	cvt.u64.u32 	%rd67, %r37;

$L__BB37_17:
	st.shared.u32 	[%r4], %rd67;
	add.s64 	%rd68, %rd62, %rd7;
	setp.ge.u64 	%p11, %rd68, %rd4;
	@%p11 bra 	$L__BB37_19;

$L__BB37_18:
	.pragma "nounroll";
	add.s64 	%rd68, %rd68, %rd7;
	setp.lt.u64 	%p12, %rd68, %rd4;
	@%p12 bra 	$L__BB37_18;

$L__BB37_19:
	mov.u32 	%r38, %ntid.x;
	shr.u32 	%r50, %r38, 1;
	setp.eq.s32 	%p13, %r50, 0;
	@%p13 bra 	$L__BB37_24;

$L__BB37_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r50;
	@%p14 bra 	$L__BB37_23;

	shl.b32 	%r39, %r50, 2;
	add.s32 	%r40, %r2, %r39;
	ld.shared.u32 	%r41, [%r2];
	ld.shared.u32 	%r14, [%r40];
	setp.ge.u32 	%p15, %r14, %r41;
	@%p15 bra 	$L__BB37_23;

	st.shared.u32 	[%r2], %r14;
	add.s32 	%r43, %r4, %r39;
	ld.shared.u32 	%r44, [%r43];
	st.shared.u32 	[%r4], %r44;

$L__BB37_23:
	shr.u32 	%r50, %r50, 1;
	setp.ne.s32 	%p16, %r50, 0;
	@%p16 bra 	$L__BB37_20;

$L__BB37_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB37_26;

	ld.shared.u32 	%r45, [_ZZ11fast_argminIjEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd59, %rd32;
	shl.b64 	%rd60, %rd3, 2;
	add.s64 	%rd61, %rd59, %rd60;
	st.global.u32 	[%rd61], %r45;

$L__BB37_26:
	ret;

}
	// .globl	fast_argmax_u32
.visible .entry fast_argmax_u32(
	.param .u64 fast_argmax_u32_param_0,
	.param .u64 fast_argmax_u32_param_1,
	.param .u64 fast_argmax_u32_param_2,
	.param .u64 fast_argmax_u32_param_3,
	.param .u64 fast_argmax_u32_param_4,
	.param .u64 fast_argmax_u32_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<69>;
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argmaxIjEvmmmPKmPKT_PjE3shr[4096];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argmaxIjEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd33, [fast_argmax_u32_param_0];
	ld.param.u64 	%rd34, [fast_argmax_u32_param_1];
	ld.param.u64 	%rd31, [fast_argmax_u32_param_2];
	ld.param.u64 	%rd35, [fast_argmax_u32_param_3];
	ld.param.u64 	%rd36, [fast_argmax_u32_param_4];
	ld.param.u64 	%rd32, [fast_argmax_u32_param_5];
	cvta.to.global.u64 	%rd1, %rd35;
	cvta.to.global.u64 	%rd2, %rd36;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd37, %r1;
	mov.u32 	%r16, %ctaid.x;
	cvt.u64.u32 	%rd3, %r16;
	shl.b32 	%r17, %r1, 2;
	mov.u32 	%r18, _ZZ11fast_argmaxIjEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r18, %r17;
	mov.f32 	%f1, 0fFF800000;
	cvt.rzi.u32.f32 	%r46, %f1;
	st.shared.u32 	[%r2], %r46;
	mov.u32 	%r19, _ZZ11fast_argmaxIjEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r4, %r19, %r17;
	mov.u32 	%r20, -1;
	st.shared.u32 	[%r4], %r20;
	mul.lo.s64 	%rd38, %rd3, %rd34;
	add.s64 	%rd39, %rd38, %rd34;
	min.u64 	%rd4, %rd39, %rd33;
	add.s64 	%rd62, %rd38, %rd37;
	setp.lt.u64 	%p1, %rd62, %rd4;
	@%p1 bra 	$L__BB38_1;
	bra.uni 	$L__BB38_19;

$L__BB38_1:
	setp.eq.s64 	%p2, %rd31, 0;
	shl.b64 	%rd40, %rd31, 3;
	add.s64 	%rd41, %rd1, %rd40;
	add.s64 	%rd6, %rd41, -8;
	mov.u32 	%r21, %ntid.x;
	cvt.u64.u32 	%rd7, %r21;
	@%p2 bra 	$L__BB38_14;

	mov.u16 	%rs5, 1;

$L__BB38_3:
	mov.u32 	%r47, 0;
	mov.u64 	%rd63, %rd62;
	mov.u32 	%r48, %r47;

$L__BB38_4:
	not.b32 	%r24, %r47;
	cvt.u64.u32 	%rd42, %r24;
	add.s64 	%rd43, %rd42, %rd31;
	and.b64  	%rd10, %rd63, 4294967295;
	shl.b64 	%rd44, %rd43, 3;
	and.b64  	%rd45, %rd44, 34359738360;
	add.s64 	%rd11, %rd1, %rd45;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd46, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd46, 0;
	@%p3 bra 	$L__BB38_6;

	div.u64 	%rd63, %rd10, %rd12;
	mul.lo.s64 	%rd47, %rd63, %rd12;
	sub.s64 	%rd65, %rd10, %rd47;
	bra.uni 	$L__BB38_7;

$L__BB38_6:
	cvt.u32.u64 	%r25, %rd12;
	cvt.u32.u64 	%r26, %rd10;
	div.u32 	%r27, %r26, %r25;
	mul.lo.s32 	%r28, %r27, %r25;
	sub.s32 	%r29, %r26, %r28;
	cvt.u64.u32 	%rd63, %r27;
	cvt.u64.u32 	%rd65, %r29;

$L__BB38_7:
	add.s64 	%rd49, %rd11, %rd40;
	ld.global.u64 	%rd50, [%rd49];
	mul.lo.s64 	%rd51, %rd50, %rd65;
	cvt.u32.u64 	%r30, %rd51;
	add.s32 	%r48, %r48, %r30;
	add.s32 	%r47, %r47, 1;
	cvt.u64.u32 	%rd52, %r47;
	setp.lt.u64 	%p4, %rd52, %rd31;
	@%p4 bra 	$L__BB38_4;

	mul.wide.u32 	%rd53, %r48, 4;
	add.s64 	%rd54, %rd2, %rd53;
	ld.global.u32 	%r10, [%rd54];
	setp.le.u32 	%p5, %r10, %r46;
	and.b16  	%rs3, %rs5, 255;
	setp.eq.s16 	%p6, %rs3, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB38_13;

	st.shared.u32 	[%r2], %r10;
	ld.global.u64 	%rd19, [%rd6];
	or.b64  	%rd55, %rd62, %rd19;
	and.b64  	%rd56, %rd55, -4294967296;
	setp.eq.s64 	%p8, %rd56, 0;
	@%p8 bra 	$L__BB38_11;

	rem.u64 	%rd66, %rd62, %rd19;
	bra.uni 	$L__BB38_12;

$L__BB38_11:
	cvt.u32.u64 	%r31, %rd19;
	cvt.u32.u64 	%r32, %rd62;
	rem.u32 	%r33, %r32, %r31;
	cvt.u64.u32 	%rd66, %r33;

$L__BB38_12:
	st.shared.u32 	[%r4], %rd66;
	mov.u32 	%r46, %r10;

$L__BB38_13:
	add.s64 	%rd62, %rd62, %rd7;
	setp.lt.u64 	%p9, %rd62, %rd4;
	mov.u16 	%rs5, 0;
	@%p9 bra 	$L__BB38_3;
	bra.uni 	$L__BB38_19;

$L__BB38_14:
	ld.global.u32 	%r34, [%rd2];
	st.shared.u32 	[%r2], %r34;
	ld.global.u64 	%rd24, [%rd6];
	or.b64  	%rd57, %rd62, %rd24;
	and.b64  	%rd58, %rd57, -4294967296;
	setp.eq.s64 	%p10, %rd58, 0;
	@%p10 bra 	$L__BB38_16;

	rem.u64 	%rd67, %rd62, %rd24;
	bra.uni 	$L__BB38_17;

$L__BB38_16:
	cvt.u32.u64 	%r35, %rd24;
	cvt.u32.u64 	%r36, %rd62;
	rem.u32 	%r37, %r36, %r35;
	cvt.u64.u32 	%rd67, %r37;

$L__BB38_17:
	st.shared.u32 	[%r4], %rd67;
	add.s64 	%rd68, %rd62, %rd7;
	setp.ge.u64 	%p11, %rd68, %rd4;
	@%p11 bra 	$L__BB38_19;

$L__BB38_18:
	.pragma "nounroll";
	add.s64 	%rd68, %rd68, %rd7;
	setp.lt.u64 	%p12, %rd68, %rd4;
	@%p12 bra 	$L__BB38_18;

$L__BB38_19:
	mov.u32 	%r38, %ntid.x;
	shr.u32 	%r50, %r38, 1;
	setp.eq.s32 	%p13, %r50, 0;
	@%p13 bra 	$L__BB38_24;

$L__BB38_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r50;
	@%p14 bra 	$L__BB38_23;

	shl.b32 	%r39, %r50, 2;
	add.s32 	%r40, %r2, %r39;
	ld.shared.u32 	%r41, [%r2];
	ld.shared.u32 	%r14, [%r40];
	setp.le.u32 	%p15, %r14, %r41;
	@%p15 bra 	$L__BB38_23;

	st.shared.u32 	[%r2], %r14;
	add.s32 	%r43, %r4, %r39;
	ld.shared.u32 	%r44, [%r43];
	st.shared.u32 	[%r4], %r44;

$L__BB38_23:
	shr.u32 	%r50, %r50, 1;
	setp.ne.s32 	%p16, %r50, 0;
	@%p16 bra 	$L__BB38_20;

$L__BB38_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB38_26;

	ld.shared.u32 	%r45, [_ZZ11fast_argmaxIjEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd59, %rd32;
	shl.b64 	%rd60, %rd3, 2;
	add.s64 	%rd61, %rd59, %rd60;
	st.global.u32 	[%rd61], %r45;

$L__BB38_26:
	ret;

}
	// .globl	fast_min_u32
.visible .entry fast_min_u32(
	.param .u64 fast_min_u32_param_0,
	.param .u64 fast_min_u32_param_1,
	.param .u64 fast_min_u32_param_2,
	.param .u64 fast_min_u32_param_3,
	.param .u64 fast_min_u32_param_4,
	.param .u64 fast_min_u32_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<45>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 4 .b8 _ZZ8fast_minIjEvmmmPKmPKT_PS2_E3shr[4096];

	ld.param.u64 	%rd23, [fast_min_u32_param_0];
	ld.param.u64 	%rd24, [fast_min_u32_param_1];
	ld.param.u64 	%rd20, [fast_min_u32_param_2];
	ld.param.u64 	%rd21, [fast_min_u32_param_3];
	ld.param.u64 	%rd25, [fast_min_u32_param_4];
	ld.param.u64 	%rd22, [fast_min_u32_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r17, %ctaid.x;
	cvt.u64.u32 	%rd27, %r17;
	shl.b32 	%r18, %r1, 2;
	mov.u32 	%r19, _ZZ8fast_minIjEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r19, %r18;
	mov.f32 	%f1, 0f7F800000;
	cvt.rzi.u32.f32 	%r43, %f1;
	st.shared.u32 	[%r2], %r43;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB39_1;
	bra.uni 	$L__BB39_12;

$L__BB39_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r20, %ntid.x;
	cvt.u64.u32 	%rd4, %r20;
	@%p2 bra 	$L__BB39_9;

	cvta.to.global.u64 	%rd5, %rd21;

$L__BB39_3:
	mov.u32 	%r40, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r41, %r40;

$L__BB39_4:
	not.b32 	%r23, %r40;
	cvt.u64.u32 	%rd30, %r23;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB39_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB39_7;

$L__BB39_6:
	cvt.u32.u64 	%r24, %rd10;
	cvt.u32.u64 	%r25, %rd8;
	div.u32 	%r26, %r25, %r24;
	mul.lo.s32 	%r27, %r26, %r24;
	sub.s32 	%r28, %r25, %r27;
	cvt.u64.u32 	%rd47, %r26;
	cvt.u64.u32 	%rd49, %r28;

$L__BB39_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r29, %rd39;
	add.s32 	%r41, %r41, %r29;
	add.s32 	%r40, %r40, 1;
	cvt.u64.u32 	%rd40, %r40;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB39_4;

	mul.wide.u32 	%rd41, %r41, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u32 	%r30, [%rd42];
	min.u32 	%r43, %r43, %r30;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB39_3;
	bra.uni 	$L__BB39_11;

$L__BB39_9:
	ld.global.u32 	%r10, [%rd1];

$L__BB39_10:
	min.u32 	%r43, %r43, %r10;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB39_10;

$L__BB39_11:
	st.shared.u32 	[%r2], %r43;

$L__BB39_12:
	mov.u32 	%r31, %ntid.x;
	shr.u32 	%r44, %r31, 1;
	setp.eq.s32 	%p7, %r44, 0;
	@%p7 bra 	$L__BB39_16;

$L__BB39_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r44;
	@%p8 bra 	$L__BB39_15;

	ld.shared.u32 	%r32, [%r2];
	shl.b32 	%r33, %r44, 2;
	add.s32 	%r34, %r2, %r33;
	ld.shared.u32 	%r35, [%r34];
	min.u32 	%r36, %r32, %r35;
	st.shared.u32 	[%r2], %r36;

$L__BB39_15:
	shr.u32 	%r44, %r44, 1;
	setp.ne.s32 	%p9, %r44, 0;
	@%p9 bra 	$L__BB39_13;

$L__BB39_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB39_18;

	ld.shared.u32 	%r37, [_ZZ8fast_minIjEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r17, 4;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.u32 	[%rd45], %r37;

$L__BB39_18:
	ret;

}
	// .globl	fast_max_u32
.visible .entry fast_max_u32(
	.param .u64 fast_max_u32_param_0,
	.param .u64 fast_max_u32_param_1,
	.param .u64 fast_max_u32_param_2,
	.param .u64 fast_max_u32_param_3,
	.param .u64 fast_max_u32_param_4,
	.param .u64 fast_max_u32_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<45>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 4 .b8 _ZZ8fast_maxIjEvmmmPKmPKT_PS2_E3shr[4096];

	ld.param.u64 	%rd23, [fast_max_u32_param_0];
	ld.param.u64 	%rd24, [fast_max_u32_param_1];
	ld.param.u64 	%rd20, [fast_max_u32_param_2];
	ld.param.u64 	%rd21, [fast_max_u32_param_3];
	ld.param.u64 	%rd25, [fast_max_u32_param_4];
	ld.param.u64 	%rd22, [fast_max_u32_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r17, %ctaid.x;
	cvt.u64.u32 	%rd27, %r17;
	shl.b32 	%r18, %r1, 2;
	mov.u32 	%r19, _ZZ8fast_maxIjEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r19, %r18;
	mov.f32 	%f1, 0fFF800000;
	cvt.rzi.u32.f32 	%r43, %f1;
	st.shared.u32 	[%r2], %r43;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB40_1;
	bra.uni 	$L__BB40_12;

$L__BB40_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r20, %ntid.x;
	cvt.u64.u32 	%rd4, %r20;
	@%p2 bra 	$L__BB40_9;

	cvta.to.global.u64 	%rd5, %rd21;

$L__BB40_3:
	mov.u32 	%r40, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r41, %r40;

$L__BB40_4:
	not.b32 	%r23, %r40;
	cvt.u64.u32 	%rd30, %r23;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB40_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB40_7;

$L__BB40_6:
	cvt.u32.u64 	%r24, %rd10;
	cvt.u32.u64 	%r25, %rd8;
	div.u32 	%r26, %r25, %r24;
	mul.lo.s32 	%r27, %r26, %r24;
	sub.s32 	%r28, %r25, %r27;
	cvt.u64.u32 	%rd47, %r26;
	cvt.u64.u32 	%rd49, %r28;

$L__BB40_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r29, %rd39;
	add.s32 	%r41, %r41, %r29;
	add.s32 	%r40, %r40, 1;
	cvt.u64.u32 	%rd40, %r40;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB40_4;

	mul.wide.u32 	%rd41, %r41, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u32 	%r30, [%rd42];
	max.u32 	%r43, %r43, %r30;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB40_3;
	bra.uni 	$L__BB40_11;

$L__BB40_9:
	ld.global.u32 	%r10, [%rd1];

$L__BB40_10:
	max.u32 	%r43, %r43, %r10;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB40_10;

$L__BB40_11:
	st.shared.u32 	[%r2], %r43;

$L__BB40_12:
	mov.u32 	%r31, %ntid.x;
	shr.u32 	%r44, %r31, 1;
	setp.eq.s32 	%p7, %r44, 0;
	@%p7 bra 	$L__BB40_16;

$L__BB40_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r44;
	@%p8 bra 	$L__BB40_15;

	ld.shared.u32 	%r32, [%r2];
	shl.b32 	%r33, %r44, 2;
	add.s32 	%r34, %r2, %r33;
	ld.shared.u32 	%r35, [%r34];
	max.u32 	%r36, %r32, %r35;
	st.shared.u32 	[%r2], %r36;

$L__BB40_15:
	shr.u32 	%r44, %r44, 1;
	setp.ne.s32 	%p9, %r44, 0;
	@%p9 bra 	$L__BB40_13;

$L__BB40_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB40_18;

	ld.shared.u32 	%r37, [_ZZ8fast_maxIjEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r17, 4;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.u32 	[%rd45], %r37;

$L__BB40_18:
	ret;

}
	// .globl	fast_sum_u32
.visible .entry fast_sum_u32(
	.param .u64 fast_sum_u32_param_0,
	.param .u64 fast_sum_u32_param_1,
	.param .u64 fast_sum_u32_param_2,
	.param .u64 fast_sum_u32_param_3,
	.param .u64 fast_sum_u32_param_4,
	.param .u64 fast_sum_u32_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<47>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 4 .b8 _ZZ8fast_sumIjEvmmmPKmPKT_PS2_E3shr[4096];

	ld.param.u64 	%rd23, [fast_sum_u32_param_0];
	ld.param.u64 	%rd24, [fast_sum_u32_param_1];
	ld.param.u64 	%rd20, [fast_sum_u32_param_2];
	ld.param.u64 	%rd21, [fast_sum_u32_param_3];
	ld.param.u64 	%rd25, [fast_sum_u32_param_4];
	ld.param.u64 	%rd22, [fast_sum_u32_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r16, %ctaid.x;
	cvt.u64.u32 	%rd27, %r16;
	shl.b32 	%r17, %r1, 2;
	mov.u32 	%r18, _ZZ8fast_sumIjEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r18, %r17;
	mov.u32 	%r19, 0;
	st.shared.u32 	[%r2], %r19;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB41_1;
	bra.uni 	$L__BB41_12;

$L__BB41_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r20, %ntid.x;
	cvt.u64.u32 	%rd4, %r20;
	@%p2 bra 	$L__BB41_9;

	cvta.to.global.u64 	%rd5, %rd21;
	mov.u32 	%r21, 0;
	mov.u32 	%r45, %r21;

$L__BB41_3:
	mov.u32 	%r42, %r21;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r43, %r21;

$L__BB41_4:
	not.b32 	%r24, %r42;
	cvt.u64.u32 	%rd30, %r24;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB41_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB41_7;

$L__BB41_6:
	cvt.u32.u64 	%r25, %rd10;
	cvt.u32.u64 	%r26, %rd8;
	div.u32 	%r27, %r26, %r25;
	mul.lo.s32 	%r28, %r27, %r25;
	sub.s32 	%r29, %r26, %r28;
	cvt.u64.u32 	%rd47, %r27;
	cvt.u64.u32 	%rd49, %r29;

$L__BB41_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r30, %rd39;
	add.s32 	%r43, %r43, %r30;
	add.s32 	%r42, %r42, 1;
	cvt.u64.u32 	%rd40, %r42;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB41_4;

	mul.wide.u32 	%rd41, %r43, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u32 	%r31, [%rd42];
	add.s32 	%r45, %r45, %r31;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB41_3;
	bra.uni 	$L__BB41_11;

$L__BB41_9:
	ld.global.u32 	%r9, [%rd1];
	mov.u32 	%r45, 0;

$L__BB41_10:
	add.s32 	%r45, %r45, %r9;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB41_10;

$L__BB41_11:
	st.shared.u32 	[%r2], %r45;

$L__BB41_12:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r46, %r33, 1;
	setp.eq.s32 	%p7, %r46, 0;
	@%p7 bra 	$L__BB41_16;

$L__BB41_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r46;
	@%p8 bra 	$L__BB41_15;

	shl.b32 	%r34, %r46, 2;
	add.s32 	%r35, %r2, %r34;
	ld.shared.u32 	%r36, [%r2];
	ld.shared.u32 	%r37, [%r35];
	add.s32 	%r38, %r36, %r37;
	st.shared.u32 	[%r2], %r38;

$L__BB41_15:
	shr.u32 	%r46, %r46, 1;
	setp.ne.s32 	%p9, %r46, 0;
	@%p9 bra 	$L__BB41_13;

$L__BB41_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB41_18;

	ld.shared.u32 	%r39, [_ZZ8fast_sumIjEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd43, %rd22;
	mul.wide.u32 	%rd44, %r16, 4;
	add.s64 	%rd45, %rd43, %rd44;
	st.global.u32 	[%rd45], %r39;

$L__BB41_18:
	ret;

}
	// .globl	fast_argmin_i64
.visible .entry fast_argmin_i64(
	.param .u64 fast_argmin_i64_param_0,
	.param .u64 fast_argmin_i64_param_1,
	.param .u64 fast_argmin_i64_param_2,
	.param .u64 fast_argmin_i64_param_3,
	.param .u64 fast_argmin_i64_param_4,
	.param .u64 fast_argmin_i64_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<78>;
	// demoted variable
	.shared .align 8 .b8 _ZZ11fast_argminIlEvmmmPKmPKT_PjE3shr[8192];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argminIlEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd38, [fast_argmin_i64_param_0];
	ld.param.u64 	%rd39, [fast_argmin_i64_param_1];
	ld.param.u64 	%rd36, [fast_argmin_i64_param_2];
	ld.param.u64 	%rd40, [fast_argmin_i64_param_3];
	ld.param.u64 	%rd41, [fast_argmin_i64_param_4];
	ld.param.u64 	%rd37, [fast_argmin_i64_param_5];
	cvta.to.global.u64 	%rd1, %rd40;
	cvta.to.global.u64 	%rd2, %rd41;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd42, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	shl.b32 	%r12, %r1, 3;
	mov.u32 	%r13, _ZZ11fast_argminIlEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r12;
	mov.f32 	%f1, 0f7F800000;
	cvt.rzi.s64.f32 	%rd69, %f1;
	st.shared.u64 	[%r2], %rd69;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ11fast_argminIlEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r14;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd43, %rd3, %rd39;
	add.s64 	%rd44, %rd43, %rd39;
	min.u64 	%rd5, %rd44, %rd38;
	add.s64 	%rd70, %rd43, %rd42;
	setp.lt.u64 	%p1, %rd70, %rd5;
	@%p1 bra 	$L__BB42_1;
	bra.uni 	$L__BB42_19;

$L__BB42_1:
	setp.eq.s64 	%p2, %rd36, 0;
	shl.b64 	%rd45, %rd36, 3;
	add.s64 	%rd46, %rd1, %rd45;
	add.s64 	%rd7, %rd46, -8;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd8, %r17;
	@%p2 bra 	$L__BB42_14;

	mov.u16 	%rs5, 1;

$L__BB42_3:
	mov.u32 	%r40, 0;
	mov.u64 	%rd71, %rd70;
	mov.u32 	%r41, %r40;

$L__BB42_4:
	not.b32 	%r20, %r40;
	cvt.u64.u32 	%rd47, %r20;
	add.s64 	%rd48, %rd47, %rd36;
	and.b64  	%rd12, %rd71, 4294967295;
	shl.b64 	%rd49, %rd48, 3;
	and.b64  	%rd50, %rd49, 34359738360;
	add.s64 	%rd13, %rd1, %rd50;
	ld.global.u64 	%rd14, [%rd13];
	and.b64  	%rd51, %rd14, -4294967296;
	setp.eq.s64 	%p3, %rd51, 0;
	@%p3 bra 	$L__BB42_6;

	div.u64 	%rd71, %rd12, %rd14;
	mul.lo.s64 	%rd52, %rd71, %rd14;
	sub.s64 	%rd73, %rd12, %rd52;
	bra.uni 	$L__BB42_7;

$L__BB42_6:
	cvt.u32.u64 	%r21, %rd14;
	cvt.u32.u64 	%r22, %rd12;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd71, %r23;
	cvt.u64.u32 	%rd73, %r25;

$L__BB42_7:
	add.s64 	%rd54, %rd13, %rd45;
	ld.global.u64 	%rd55, [%rd54];
	mul.lo.s64 	%rd56, %rd55, %rd73;
	cvt.u32.u64 	%r26, %rd56;
	add.s32 	%r41, %r41, %r26;
	add.s32 	%r40, %r40, 1;
	cvt.u64.u32 	%rd57, %r40;
	setp.lt.u64 	%p4, %rd57, %rd36;
	@%p4 bra 	$L__BB42_4;

	mul.wide.u32 	%rd58, %r41, 8;
	add.s64 	%rd59, %rd2, %rd58;
	ld.global.u64 	%rd21, [%rd59];
	setp.ge.s64 	%p5, %rd21, %rd69;
	and.b16  	%rs3, %rs5, 255;
	setp.eq.s16 	%p6, %rs3, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB42_13;

	st.shared.u64 	[%r2], %rd21;
	ld.global.u64 	%rd22, [%rd7];
	or.b64  	%rd60, %rd70, %rd22;
	and.b64  	%rd61, %rd60, -4294967296;
	setp.eq.s64 	%p8, %rd61, 0;
	@%p8 bra 	$L__BB42_11;

	rem.u64 	%rd74, %rd70, %rd22;
	bra.uni 	$L__BB42_12;

$L__BB42_11:
	cvt.u32.u64 	%r27, %rd22;
	cvt.u32.u64 	%r28, %rd70;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd74, %r29;

$L__BB42_12:
	st.shared.u32 	[%r3], %rd74;
	mov.u64 	%rd69, %rd21;

$L__BB42_13:
	add.s64 	%rd70, %rd70, %rd8;
	setp.lt.u64 	%p9, %rd70, %rd5;
	mov.u16 	%rs5, 0;
	@%p9 bra 	$L__BB42_3;
	bra.uni 	$L__BB42_19;

$L__BB42_14:
	ld.global.u64 	%rd62, [%rd2];
	st.shared.u64 	[%r2], %rd62;
	ld.global.u64 	%rd28, [%rd7];
	or.b64  	%rd63, %rd70, %rd28;
	and.b64  	%rd64, %rd63, -4294967296;
	setp.eq.s64 	%p10, %rd64, 0;
	@%p10 bra 	$L__BB42_16;

	rem.u64 	%rd76, %rd70, %rd28;
	bra.uni 	$L__BB42_17;

$L__BB42_16:
	cvt.u32.u64 	%r30, %rd28;
	cvt.u32.u64 	%r31, %rd70;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd76, %r32;

$L__BB42_17:
	st.shared.u32 	[%r3], %rd76;
	add.s64 	%rd77, %rd70, %rd8;
	setp.ge.u64 	%p11, %rd77, %rd5;
	@%p11 bra 	$L__BB42_19;

$L__BB42_18:
	.pragma "nounroll";
	add.s64 	%rd77, %rd77, %rd8;
	setp.lt.u64 	%p12, %rd77, %rd5;
	@%p12 bra 	$L__BB42_18;

$L__BB42_19:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r42, %r33, 1;
	setp.eq.s32 	%p13, %r42, 0;
	@%p13 bra 	$L__BB42_24;

$L__BB42_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r42;
	@%p14 bra 	$L__BB42_23;

	shl.b32 	%r34, %r42, 3;
	add.s32 	%r35, %r2, %r34;
	ld.shared.u64 	%rd65, [%r2];
	ld.shared.u64 	%rd35, [%r35];
	setp.ge.s64 	%p15, %rd35, %rd65;
	@%p15 bra 	$L__BB42_23;

	st.shared.u64 	[%r2], %rd35;
	shl.b32 	%r36, %r42, 2;
	add.s32 	%r37, %r3, %r36;
	ld.shared.u32 	%r38, [%r37];
	st.shared.u32 	[%r3], %r38;

$L__BB42_23:
	shr.u32 	%r42, %r42, 1;
	setp.ne.s32 	%p16, %r42, 0;
	@%p16 bra 	$L__BB42_20;

$L__BB42_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB42_26;

	ld.shared.u32 	%r39, [_ZZ11fast_argminIlEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd66, %rd37;
	shl.b64 	%rd67, %rd3, 2;
	add.s64 	%rd68, %rd66, %rd67;
	st.global.u32 	[%rd68], %r39;

$L__BB42_26:
	ret;

}
	// .globl	fast_argmax_i64
.visible .entry fast_argmax_i64(
	.param .u64 fast_argmax_i64_param_0,
	.param .u64 fast_argmax_i64_param_1,
	.param .u64 fast_argmax_i64_param_2,
	.param .u64 fast_argmax_i64_param_3,
	.param .u64 fast_argmax_i64_param_4,
	.param .u64 fast_argmax_i64_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<78>;
	// demoted variable
	.shared .align 8 .b8 _ZZ11fast_argmaxIlEvmmmPKmPKT_PjE3shr[8192];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argmaxIlEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd38, [fast_argmax_i64_param_0];
	ld.param.u64 	%rd39, [fast_argmax_i64_param_1];
	ld.param.u64 	%rd36, [fast_argmax_i64_param_2];
	ld.param.u64 	%rd40, [fast_argmax_i64_param_3];
	ld.param.u64 	%rd41, [fast_argmax_i64_param_4];
	ld.param.u64 	%rd37, [fast_argmax_i64_param_5];
	cvta.to.global.u64 	%rd1, %rd40;
	cvta.to.global.u64 	%rd2, %rd41;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd42, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	shl.b32 	%r12, %r1, 3;
	mov.u32 	%r13, _ZZ11fast_argmaxIlEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r12;
	mov.f32 	%f1, 0fFF800000;
	cvt.rzi.s64.f32 	%rd69, %f1;
	st.shared.u64 	[%r2], %rd69;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ11fast_argmaxIlEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r14;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd43, %rd3, %rd39;
	add.s64 	%rd44, %rd43, %rd39;
	min.u64 	%rd5, %rd44, %rd38;
	add.s64 	%rd70, %rd43, %rd42;
	setp.lt.u64 	%p1, %rd70, %rd5;
	@%p1 bra 	$L__BB43_1;
	bra.uni 	$L__BB43_19;

$L__BB43_1:
	setp.eq.s64 	%p2, %rd36, 0;
	shl.b64 	%rd45, %rd36, 3;
	add.s64 	%rd46, %rd1, %rd45;
	add.s64 	%rd7, %rd46, -8;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd8, %r17;
	@%p2 bra 	$L__BB43_14;

	mov.u16 	%rs5, 1;

$L__BB43_3:
	mov.u32 	%r40, 0;
	mov.u64 	%rd71, %rd70;
	mov.u32 	%r41, %r40;

$L__BB43_4:
	not.b32 	%r20, %r40;
	cvt.u64.u32 	%rd47, %r20;
	add.s64 	%rd48, %rd47, %rd36;
	and.b64  	%rd12, %rd71, 4294967295;
	shl.b64 	%rd49, %rd48, 3;
	and.b64  	%rd50, %rd49, 34359738360;
	add.s64 	%rd13, %rd1, %rd50;
	ld.global.u64 	%rd14, [%rd13];
	and.b64  	%rd51, %rd14, -4294967296;
	setp.eq.s64 	%p3, %rd51, 0;
	@%p3 bra 	$L__BB43_6;

	div.u64 	%rd71, %rd12, %rd14;
	mul.lo.s64 	%rd52, %rd71, %rd14;
	sub.s64 	%rd73, %rd12, %rd52;
	bra.uni 	$L__BB43_7;

$L__BB43_6:
	cvt.u32.u64 	%r21, %rd14;
	cvt.u32.u64 	%r22, %rd12;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd71, %r23;
	cvt.u64.u32 	%rd73, %r25;

$L__BB43_7:
	add.s64 	%rd54, %rd13, %rd45;
	ld.global.u64 	%rd55, [%rd54];
	mul.lo.s64 	%rd56, %rd55, %rd73;
	cvt.u32.u64 	%r26, %rd56;
	add.s32 	%r41, %r41, %r26;
	add.s32 	%r40, %r40, 1;
	cvt.u64.u32 	%rd57, %r40;
	setp.lt.u64 	%p4, %rd57, %rd36;
	@%p4 bra 	$L__BB43_4;

	mul.wide.u32 	%rd58, %r41, 8;
	add.s64 	%rd59, %rd2, %rd58;
	ld.global.u64 	%rd21, [%rd59];
	setp.le.s64 	%p5, %rd21, %rd69;
	and.b16  	%rs3, %rs5, 255;
	setp.eq.s16 	%p6, %rs3, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB43_13;

	st.shared.u64 	[%r2], %rd21;
	ld.global.u64 	%rd22, [%rd7];
	or.b64  	%rd60, %rd70, %rd22;
	and.b64  	%rd61, %rd60, -4294967296;
	setp.eq.s64 	%p8, %rd61, 0;
	@%p8 bra 	$L__BB43_11;

	rem.u64 	%rd74, %rd70, %rd22;
	bra.uni 	$L__BB43_12;

$L__BB43_11:
	cvt.u32.u64 	%r27, %rd22;
	cvt.u32.u64 	%r28, %rd70;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd74, %r29;

$L__BB43_12:
	st.shared.u32 	[%r3], %rd74;
	mov.u64 	%rd69, %rd21;

$L__BB43_13:
	add.s64 	%rd70, %rd70, %rd8;
	setp.lt.u64 	%p9, %rd70, %rd5;
	mov.u16 	%rs5, 0;
	@%p9 bra 	$L__BB43_3;
	bra.uni 	$L__BB43_19;

$L__BB43_14:
	ld.global.u64 	%rd62, [%rd2];
	st.shared.u64 	[%r2], %rd62;
	ld.global.u64 	%rd28, [%rd7];
	or.b64  	%rd63, %rd70, %rd28;
	and.b64  	%rd64, %rd63, -4294967296;
	setp.eq.s64 	%p10, %rd64, 0;
	@%p10 bra 	$L__BB43_16;

	rem.u64 	%rd76, %rd70, %rd28;
	bra.uni 	$L__BB43_17;

$L__BB43_16:
	cvt.u32.u64 	%r30, %rd28;
	cvt.u32.u64 	%r31, %rd70;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd76, %r32;

$L__BB43_17:
	st.shared.u32 	[%r3], %rd76;
	add.s64 	%rd77, %rd70, %rd8;
	setp.ge.u64 	%p11, %rd77, %rd5;
	@%p11 bra 	$L__BB43_19;

$L__BB43_18:
	.pragma "nounroll";
	add.s64 	%rd77, %rd77, %rd8;
	setp.lt.u64 	%p12, %rd77, %rd5;
	@%p12 bra 	$L__BB43_18;

$L__BB43_19:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r42, %r33, 1;
	setp.eq.s32 	%p13, %r42, 0;
	@%p13 bra 	$L__BB43_24;

$L__BB43_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r42;
	@%p14 bra 	$L__BB43_23;

	shl.b32 	%r34, %r42, 3;
	add.s32 	%r35, %r2, %r34;
	ld.shared.u64 	%rd65, [%r2];
	ld.shared.u64 	%rd35, [%r35];
	setp.le.s64 	%p15, %rd35, %rd65;
	@%p15 bra 	$L__BB43_23;

	st.shared.u64 	[%r2], %rd35;
	shl.b32 	%r36, %r42, 2;
	add.s32 	%r37, %r3, %r36;
	ld.shared.u32 	%r38, [%r37];
	st.shared.u32 	[%r3], %r38;

$L__BB43_23:
	shr.u32 	%r42, %r42, 1;
	setp.ne.s32 	%p16, %r42, 0;
	@%p16 bra 	$L__BB43_20;

$L__BB43_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB43_26;

	ld.shared.u32 	%r39, [_ZZ11fast_argmaxIlEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd66, %rd37;
	shl.b64 	%rd67, %rd3, 2;
	add.s64 	%rd68, %rd66, %rd67;
	st.global.u32 	[%rd68], %r39;

$L__BB43_26:
	ret;

}
	// .globl	fast_min_i64
.visible .entry fast_min_i64(
	.param .u64 fast_min_i64_param_0,
	.param .u64 fast_min_i64_param_1,
	.param .u64 fast_min_i64_param_2,
	.param .u64 fast_min_i64_param_3,
	.param .u64 fast_min_i64_param_4,
	.param .u64 fast_min_i64_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<66>;
	// demoted variable
	.shared .align 8 .b8 _ZZ8fast_minIlEvmmmPKmPKT_PS2_E3shr[8192];

	ld.param.u64 	%rd30, [fast_min_i64_param_0];
	ld.param.u64 	%rd31, [fast_min_i64_param_1];
	ld.param.u64 	%rd27, [fast_min_i64_param_2];
	ld.param.u64 	%rd28, [fast_min_i64_param_3];
	ld.param.u64 	%rd32, [fast_min_i64_param_4];
	ld.param.u64 	%rd29, [fast_min_i64_param_5];
	cvta.to.global.u64 	%rd1, %rd32;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd33, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd34, %r10;
	shl.b32 	%r11, %r1, 3;
	mov.u32 	%r12, _ZZ8fast_minIlEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.f32 	%f1, 0f7F800000;
	cvt.rzi.s64.f32 	%rd65, %f1;
	st.shared.u64 	[%r2], %rd65;
	mul.lo.s64 	%rd35, %rd34, %rd31;
	add.s64 	%rd36, %rd35, %rd31;
	min.u64 	%rd3, %rd36, %rd30;
	add.s64 	%rd59, %rd35, %rd33;
	setp.lt.u64 	%p1, %rd59, %rd3;
	@%p1 bra 	$L__BB44_1;
	bra.uni 	$L__BB44_12;

$L__BB44_1:
	setp.eq.s64 	%p2, %rd27, 0;
	mov.u32 	%r13, %ntid.x;
	cvt.u64.u32 	%rd5, %r13;
	@%p2 bra 	$L__BB44_9;

	cvta.to.global.u64 	%rd6, %rd28;

$L__BB44_3:
	mov.u32 	%r27, 0;
	mov.u64 	%rd60, %rd59;
	mov.u32 	%r28, %r27;

$L__BB44_4:
	not.b32 	%r16, %r27;
	cvt.u64.u32 	%rd37, %r16;
	add.s64 	%rd38, %rd37, %rd27;
	and.b64  	%rd10, %rd60, 4294967295;
	shl.b64 	%rd39, %rd38, 3;
	and.b64  	%rd40, %rd39, 34359738360;
	add.s64 	%rd11, %rd6, %rd40;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd41, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd41, 0;
	@%p3 bra 	$L__BB44_6;

	div.u64 	%rd60, %rd10, %rd12;
	mul.lo.s64 	%rd42, %rd60, %rd12;
	sub.s64 	%rd62, %rd10, %rd42;
	bra.uni 	$L__BB44_7;

$L__BB44_6:
	cvt.u32.u64 	%r17, %rd12;
	cvt.u32.u64 	%r18, %rd10;
	div.u32 	%r19, %r18, %r17;
	mul.lo.s32 	%r20, %r19, %r17;
	sub.s32 	%r21, %r18, %r20;
	cvt.u64.u32 	%rd60, %r19;
	cvt.u64.u32 	%rd62, %r21;

$L__BB44_7:
	shl.b64 	%rd43, %rd27, 3;
	add.s64 	%rd44, %rd11, %rd43;
	ld.global.u64 	%rd45, [%rd44];
	mul.lo.s64 	%rd46, %rd45, %rd62;
	cvt.u32.u64 	%r22, %rd46;
	add.s32 	%r28, %r28, %r22;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd47, %r27;
	setp.lt.u64 	%p4, %rd47, %rd27;
	@%p4 bra 	$L__BB44_4;

	mul.wide.u32 	%rd48, %r28, 8;
	add.s64 	%rd49, %rd1, %rd48;
	ld.global.u64 	%rd50, [%rd49];
	min.s64 	%rd65, %rd65, %rd50;
	add.s64 	%rd59, %rd59, %rd5;
	setp.lt.u64 	%p5, %rd59, %rd3;
	@%p5 bra 	$L__BB44_3;
	bra.uni 	$L__BB44_11;

$L__BB44_9:
	ld.global.u64 	%rd21, [%rd1];

$L__BB44_10:
	min.s64 	%rd65, %rd65, %rd21;
	add.s64 	%rd59, %rd59, %rd5;
	setp.lt.u64 	%p6, %rd59, %rd3;
	@%p6 bra 	$L__BB44_10;

$L__BB44_11:
	st.shared.u64 	[%r2], %rd65;

$L__BB44_12:
	mov.u32 	%r23, %ntid.x;
	shr.u32 	%r29, %r23, 1;
	setp.eq.s32 	%p7, %r29, 0;
	@%p7 bra 	$L__BB44_16;

$L__BB44_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r29;
	@%p8 bra 	$L__BB44_15;

	ld.shared.u64 	%rd51, [%r2];
	shl.b32 	%r24, %r29, 3;
	add.s32 	%r25, %r2, %r24;
	ld.shared.u64 	%rd52, [%r25];
	min.s64 	%rd53, %rd51, %rd52;
	st.shared.u64 	[%r2], %rd53;

$L__BB44_15:
	shr.u32 	%r29, %r29, 1;
	setp.ne.s32 	%p9, %r29, 0;
	@%p9 bra 	$L__BB44_13;

$L__BB44_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB44_18;

	ld.shared.u64 	%rd54, [_ZZ8fast_minIlEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd55, %rd29;
	mul.wide.u32 	%rd56, %r10, 8;
	add.s64 	%rd57, %rd55, %rd56;
	st.global.u64 	[%rd57], %rd54;

$L__BB44_18:
	ret;

}
	// .globl	fast_max_i64
.visible .entry fast_max_i64(
	.param .u64 fast_max_i64_param_0,
	.param .u64 fast_max_i64_param_1,
	.param .u64 fast_max_i64_param_2,
	.param .u64 fast_max_i64_param_3,
	.param .u64 fast_max_i64_param_4,
	.param .u64 fast_max_i64_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<66>;
	// demoted variable
	.shared .align 8 .b8 _ZZ8fast_maxIlEvmmmPKmPKT_PS2_E3shr[8192];

	ld.param.u64 	%rd30, [fast_max_i64_param_0];
	ld.param.u64 	%rd31, [fast_max_i64_param_1];
	ld.param.u64 	%rd27, [fast_max_i64_param_2];
	ld.param.u64 	%rd28, [fast_max_i64_param_3];
	ld.param.u64 	%rd32, [fast_max_i64_param_4];
	ld.param.u64 	%rd29, [fast_max_i64_param_5];
	cvta.to.global.u64 	%rd1, %rd32;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd33, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd34, %r10;
	shl.b32 	%r11, %r1, 3;
	mov.u32 	%r12, _ZZ8fast_maxIlEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.f32 	%f1, 0fFF800000;
	cvt.rzi.s64.f32 	%rd65, %f1;
	st.shared.u64 	[%r2], %rd65;
	mul.lo.s64 	%rd35, %rd34, %rd31;
	add.s64 	%rd36, %rd35, %rd31;
	min.u64 	%rd3, %rd36, %rd30;
	add.s64 	%rd59, %rd35, %rd33;
	setp.lt.u64 	%p1, %rd59, %rd3;
	@%p1 bra 	$L__BB45_1;
	bra.uni 	$L__BB45_12;

$L__BB45_1:
	setp.eq.s64 	%p2, %rd27, 0;
	mov.u32 	%r13, %ntid.x;
	cvt.u64.u32 	%rd5, %r13;
	@%p2 bra 	$L__BB45_9;

	cvta.to.global.u64 	%rd6, %rd28;

$L__BB45_3:
	mov.u32 	%r27, 0;
	mov.u64 	%rd60, %rd59;
	mov.u32 	%r28, %r27;

$L__BB45_4:
	not.b32 	%r16, %r27;
	cvt.u64.u32 	%rd37, %r16;
	add.s64 	%rd38, %rd37, %rd27;
	and.b64  	%rd10, %rd60, 4294967295;
	shl.b64 	%rd39, %rd38, 3;
	and.b64  	%rd40, %rd39, 34359738360;
	add.s64 	%rd11, %rd6, %rd40;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd41, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd41, 0;
	@%p3 bra 	$L__BB45_6;

	div.u64 	%rd60, %rd10, %rd12;
	mul.lo.s64 	%rd42, %rd60, %rd12;
	sub.s64 	%rd62, %rd10, %rd42;
	bra.uni 	$L__BB45_7;

$L__BB45_6:
	cvt.u32.u64 	%r17, %rd12;
	cvt.u32.u64 	%r18, %rd10;
	div.u32 	%r19, %r18, %r17;
	mul.lo.s32 	%r20, %r19, %r17;
	sub.s32 	%r21, %r18, %r20;
	cvt.u64.u32 	%rd60, %r19;
	cvt.u64.u32 	%rd62, %r21;

$L__BB45_7:
	shl.b64 	%rd43, %rd27, 3;
	add.s64 	%rd44, %rd11, %rd43;
	ld.global.u64 	%rd45, [%rd44];
	mul.lo.s64 	%rd46, %rd45, %rd62;
	cvt.u32.u64 	%r22, %rd46;
	add.s32 	%r28, %r28, %r22;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd47, %r27;
	setp.lt.u64 	%p4, %rd47, %rd27;
	@%p4 bra 	$L__BB45_4;

	mul.wide.u32 	%rd48, %r28, 8;
	add.s64 	%rd49, %rd1, %rd48;
	ld.global.u64 	%rd50, [%rd49];
	max.s64 	%rd65, %rd65, %rd50;
	add.s64 	%rd59, %rd59, %rd5;
	setp.lt.u64 	%p5, %rd59, %rd3;
	@%p5 bra 	$L__BB45_3;
	bra.uni 	$L__BB45_11;

$L__BB45_9:
	ld.global.u64 	%rd21, [%rd1];

$L__BB45_10:
	max.s64 	%rd65, %rd65, %rd21;
	add.s64 	%rd59, %rd59, %rd5;
	setp.lt.u64 	%p6, %rd59, %rd3;
	@%p6 bra 	$L__BB45_10;

$L__BB45_11:
	st.shared.u64 	[%r2], %rd65;

$L__BB45_12:
	mov.u32 	%r23, %ntid.x;
	shr.u32 	%r29, %r23, 1;
	setp.eq.s32 	%p7, %r29, 0;
	@%p7 bra 	$L__BB45_16;

$L__BB45_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r29;
	@%p8 bra 	$L__BB45_15;

	ld.shared.u64 	%rd51, [%r2];
	shl.b32 	%r24, %r29, 3;
	add.s32 	%r25, %r2, %r24;
	ld.shared.u64 	%rd52, [%r25];
	max.s64 	%rd53, %rd51, %rd52;
	st.shared.u64 	[%r2], %rd53;

$L__BB45_15:
	shr.u32 	%r29, %r29, 1;
	setp.ne.s32 	%p9, %r29, 0;
	@%p9 bra 	$L__BB45_13;

$L__BB45_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB45_18;

	ld.shared.u64 	%rd54, [_ZZ8fast_maxIlEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd55, %rd29;
	mul.wide.u32 	%rd56, %r10, 8;
	add.s64 	%rd57, %rd55, %rd56;
	st.global.u64 	[%rd57], %rd54;

$L__BB45_18:
	ret;

}
	// .globl	fast_sum_i64
.visible .entry fast_sum_i64(
	.param .u64 fast_sum_i64_param_0,
	.param .u64 fast_sum_i64_param_1,
	.param .u64 fast_sum_i64_param_2,
	.param .u64 fast_sum_i64_param_3,
	.param .u64 fast_sum_i64_param_4,
	.param .u64 fast_sum_i64_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<68>;
	// demoted variable
	.shared .align 8 .b8 _ZZ8fast_sumIlEvmmmPKmPKT_PS2_E3shr[8192];

	ld.param.u64 	%rd29, [fast_sum_i64_param_0];
	ld.param.u64 	%rd30, [fast_sum_i64_param_1];
	ld.param.u64 	%rd26, [fast_sum_i64_param_2];
	ld.param.u64 	%rd27, [fast_sum_i64_param_3];
	ld.param.u64 	%rd31, [fast_sum_i64_param_4];
	ld.param.u64 	%rd28, [fast_sum_i64_param_5];
	cvta.to.global.u64 	%rd1, %rd31;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd32, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd33, %r10;
	shl.b32 	%r11, %r1, 3;
	mov.u32 	%r12, _ZZ8fast_sumIlEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r12, %r11;
	mov.u64 	%rd34, 0;
	st.shared.u64 	[%r2], %rd34;
	mul.lo.s64 	%rd35, %rd33, %rd30;
	add.s64 	%rd36, %rd35, %rd30;
	min.u64 	%rd2, %rd36, %rd29;
	add.s64 	%rd61, %rd35, %rd32;
	setp.lt.u64 	%p1, %rd61, %rd2;
	@%p1 bra 	$L__BB46_1;
	bra.uni 	$L__BB46_12;

$L__BB46_1:
	setp.eq.s64 	%p2, %rd26, 0;
	mov.u32 	%r13, %ntid.x;
	cvt.u64.u32 	%rd4, %r13;
	@%p2 bra 	$L__BB46_9;

	cvta.to.global.u64 	%rd5, %rd27;
	mov.u64 	%rd67, 0;

$L__BB46_3:
	mov.u32 	%r27, 0;
	mov.u64 	%rd62, %rd61;
	mov.u32 	%r28, %r27;

$L__BB46_4:
	not.b32 	%r16, %r27;
	cvt.u64.u32 	%rd38, %r16;
	add.s64 	%rd39, %rd38, %rd26;
	and.b64  	%rd9, %rd62, 4294967295;
	shl.b64 	%rd40, %rd39, 3;
	and.b64  	%rd41, %rd40, 34359738360;
	add.s64 	%rd10, %rd5, %rd41;
	ld.global.u64 	%rd11, [%rd10];
	and.b64  	%rd42, %rd11, -4294967296;
	setp.eq.s64 	%p3, %rd42, 0;
	@%p3 bra 	$L__BB46_6;

	div.u64 	%rd62, %rd9, %rd11;
	mul.lo.s64 	%rd43, %rd62, %rd11;
	sub.s64 	%rd64, %rd9, %rd43;
	bra.uni 	$L__BB46_7;

$L__BB46_6:
	cvt.u32.u64 	%r17, %rd11;
	cvt.u32.u64 	%r18, %rd9;
	div.u32 	%r19, %r18, %r17;
	mul.lo.s32 	%r20, %r19, %r17;
	sub.s32 	%r21, %r18, %r20;
	cvt.u64.u32 	%rd62, %r19;
	cvt.u64.u32 	%rd64, %r21;

$L__BB46_7:
	shl.b64 	%rd44, %rd26, 3;
	add.s64 	%rd45, %rd10, %rd44;
	ld.global.u64 	%rd46, [%rd45];
	mul.lo.s64 	%rd47, %rd46, %rd64;
	cvt.u32.u64 	%r22, %rd47;
	add.s32 	%r28, %r28, %r22;
	add.s32 	%r27, %r27, 1;
	cvt.u64.u32 	%rd48, %r27;
	setp.lt.u64 	%p4, %rd48, %rd26;
	@%p4 bra 	$L__BB46_4;

	mul.wide.u32 	%rd49, %r28, 8;
	add.s64 	%rd50, %rd1, %rd49;
	ld.global.u64 	%rd51, [%rd50];
	add.s64 	%rd67, %rd67, %rd51;
	add.s64 	%rd61, %rd61, %rd4;
	setp.lt.u64 	%p5, %rd61, %rd2;
	@%p5 bra 	$L__BB46_3;
	bra.uni 	$L__BB46_11;

$L__BB46_9:
	ld.global.u64 	%rd20, [%rd1];
	mov.u64 	%rd67, 0;

$L__BB46_10:
	add.s64 	%rd67, %rd67, %rd20;
	add.s64 	%rd61, %rd61, %rd4;
	setp.lt.u64 	%p6, %rd61, %rd2;
	@%p6 bra 	$L__BB46_10;

$L__BB46_11:
	st.shared.u64 	[%r2], %rd67;

$L__BB46_12:
	mov.u32 	%r23, %ntid.x;
	shr.u32 	%r29, %r23, 1;
	setp.eq.s32 	%p7, %r29, 0;
	@%p7 bra 	$L__BB46_16;

$L__BB46_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r29;
	@%p8 bra 	$L__BB46_15;

	shl.b32 	%r24, %r29, 3;
	add.s32 	%r25, %r2, %r24;
	ld.shared.u64 	%rd53, [%r2];
	ld.shared.u64 	%rd54, [%r25];
	add.s64 	%rd55, %rd53, %rd54;
	st.shared.u64 	[%r2], %rd55;

$L__BB46_15:
	shr.u32 	%r29, %r29, 1;
	setp.ne.s32 	%p9, %r29, 0;
	@%p9 bra 	$L__BB46_13;

$L__BB46_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB46_18;

	ld.shared.u64 	%rd56, [_ZZ8fast_sumIlEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd57, %rd28;
	mul.wide.u32 	%rd58, %r10, 8;
	add.s64 	%rd59, %rd57, %rd58;
	st.global.u64 	[%rd59], %rd56;

$L__BB46_18:
	ret;

}
	// .globl	fast_argmin_u8
.visible .entry fast_argmin_u8(
	.param .u64 fast_argmin_u8_param_0,
	.param .u64 fast_argmin_u8_param_1,
	.param .u64 fast_argmin_u8_param_2,
	.param .u64 fast_argmin_u8_param_3,
	.param .u64 fast_argmin_u8_param_4,
	.param .u64 fast_argmin_u8_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<16>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<69>;
	// demoted variable
	.shared .align 1 .b8 _ZZ11fast_argminIhEvmmmPKmPKT_PjE3shr[1024];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argminIhEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd33, [fast_argmin_u8_param_0];
	ld.param.u64 	%rd34, [fast_argmin_u8_param_1];
	ld.param.u64 	%rd31, [fast_argmin_u8_param_2];
	ld.param.u64 	%rd35, [fast_argmin_u8_param_3];
	ld.param.u64 	%rd36, [fast_argmin_u8_param_4];
	ld.param.u64 	%rd32, [fast_argmin_u8_param_5];
	cvta.to.global.u64 	%rd1, %rd35;
	cvta.to.global.u64 	%rd2, %rd36;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd37, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	mov.f32 	%f1, 0f7F800000;
	cvt.rzi.u32.f32 	%r12, %f1;
	cvt.u16.u32 	%rs13, %r12;
	mov.u32 	%r13, _ZZ11fast_argminIhEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r1;
	st.shared.u8 	[%r2], %rs13;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ11fast_argminIhEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r14;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd38, %rd3, %rd34;
	add.s64 	%rd39, %rd38, %rd34;
	min.u64 	%rd4, %rd39, %rd33;
	add.s64 	%rd62, %rd38, %rd37;
	setp.lt.u64 	%p1, %rd62, %rd4;
	@%p1 bra 	$L__BB47_1;
	bra.uni 	$L__BB47_19;

$L__BB47_1:
	setp.eq.s64 	%p2, %rd31, 0;
	shl.b64 	%rd40, %rd31, 3;
	add.s64 	%rd41, %rd1, %rd40;
	add.s64 	%rd6, %rd41, -8;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd7, %r17;
	@%p2 bra 	$L__BB47_14;

	mov.u16 	%rs14, 1;

$L__BB47_3:
	mov.u32 	%r39, 0;
	mov.u64 	%rd63, %rd62;
	mov.u32 	%r40, %r39;

$L__BB47_4:
	not.b32 	%r20, %r39;
	cvt.u64.u32 	%rd42, %r20;
	add.s64 	%rd43, %rd42, %rd31;
	and.b64  	%rd10, %rd63, 4294967295;
	shl.b64 	%rd44, %rd43, 3;
	and.b64  	%rd45, %rd44, 34359738360;
	add.s64 	%rd11, %rd1, %rd45;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd46, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd46, 0;
	@%p3 bra 	$L__BB47_6;

	div.u64 	%rd63, %rd10, %rd12;
	mul.lo.s64 	%rd47, %rd63, %rd12;
	sub.s64 	%rd65, %rd10, %rd47;
	bra.uni 	$L__BB47_7;

$L__BB47_6:
	cvt.u32.u64 	%r21, %rd12;
	cvt.u32.u64 	%r22, %rd10;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd63, %r23;
	cvt.u64.u32 	%rd65, %r25;

$L__BB47_7:
	add.s64 	%rd49, %rd11, %rd40;
	ld.global.u64 	%rd50, [%rd49];
	mul.lo.s64 	%rd51, %rd50, %rd65;
	cvt.u32.u64 	%r26, %rd51;
	add.s32 	%r40, %r40, %r26;
	add.s32 	%r39, %r39, 1;
	cvt.u64.u32 	%rd52, %r39;
	setp.lt.u64 	%p4, %rd52, %rd31;
	@%p4 bra 	$L__BB47_4;

	cvt.u64.u32 	%rd53, %r40;
	add.s64 	%rd54, %rd2, %rd53;
	ld.global.u8 	%rs4, [%rd54];
	and.b16  	%rs8, %rs13, 255;
	setp.ge.u16 	%p5, %rs4, %rs8;
	and.b16  	%rs9, %rs14, 255;
	setp.eq.s16 	%p6, %rs9, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB47_13;

	st.shared.u8 	[%r2], %rs4;
	ld.global.u64 	%rd19, [%rd6];
	or.b64  	%rd55, %rd62, %rd19;
	and.b64  	%rd56, %rd55, -4294967296;
	setp.eq.s64 	%p8, %rd56, 0;
	@%p8 bra 	$L__BB47_11;

	rem.u64 	%rd66, %rd62, %rd19;
	bra.uni 	$L__BB47_12;

$L__BB47_11:
	cvt.u32.u64 	%r27, %rd19;
	cvt.u32.u64 	%r28, %rd62;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd66, %r29;

$L__BB47_12:
	st.shared.u32 	[%r3], %rd66;
	mov.u16 	%rs13, %rs4;

$L__BB47_13:
	add.s64 	%rd62, %rd62, %rd7;
	setp.lt.u64 	%p9, %rd62, %rd4;
	mov.u16 	%rs14, 0;
	@%p9 bra 	$L__BB47_3;
	bra.uni 	$L__BB47_19;

$L__BB47_14:
	ld.global.u8 	%rs11, [%rd2];
	st.shared.u8 	[%r2], %rs11;
	ld.global.u64 	%rd24, [%rd6];
	or.b64  	%rd57, %rd62, %rd24;
	and.b64  	%rd58, %rd57, -4294967296;
	setp.eq.s64 	%p10, %rd58, 0;
	@%p10 bra 	$L__BB47_16;

	rem.u64 	%rd67, %rd62, %rd24;
	bra.uni 	$L__BB47_17;

$L__BB47_16:
	cvt.u32.u64 	%r30, %rd24;
	cvt.u32.u64 	%r31, %rd62;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd67, %r32;

$L__BB47_17:
	st.shared.u32 	[%r3], %rd67;
	add.s64 	%rd68, %rd62, %rd7;
	setp.ge.u64 	%p11, %rd68, %rd4;
	@%p11 bra 	$L__BB47_19;

$L__BB47_18:
	.pragma "nounroll";
	add.s64 	%rd68, %rd68, %rd7;
	setp.lt.u64 	%p12, %rd68, %rd4;
	@%p12 bra 	$L__BB47_18;

$L__BB47_19:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r41, %r33, 1;
	setp.eq.s32 	%p13, %r41, 0;
	@%p13 bra 	$L__BB47_24;

$L__BB47_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r41;
	@%p14 bra 	$L__BB47_23;

	add.s32 	%r34, %r2, %r41;
	ld.shared.u8 	%rs12, [%r2];
	ld.shared.u8 	%rs6, [%r34];
	setp.ge.u16 	%p15, %rs6, %rs12;
	@%p15 bra 	$L__BB47_23;

	st.shared.u8 	[%r2], %rs6;
	shl.b32 	%r35, %r41, 2;
	add.s32 	%r36, %r3, %r35;
	ld.shared.u32 	%r37, [%r36];
	st.shared.u32 	[%r3], %r37;

$L__BB47_23:
	shr.u32 	%r41, %r41, 1;
	setp.ne.s32 	%p16, %r41, 0;
	@%p16 bra 	$L__BB47_20;

$L__BB47_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB47_26;

	ld.shared.u32 	%r38, [_ZZ11fast_argminIhEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd59, %rd32;
	shl.b64 	%rd60, %rd3, 2;
	add.s64 	%rd61, %rd59, %rd60;
	st.global.u32 	[%rd61], %r38;

$L__BB47_26:
	ret;

}
	// .globl	fast_argmax_u8
.visible .entry fast_argmax_u8(
	.param .u64 fast_argmax_u8_param_0,
	.param .u64 fast_argmax_u8_param_1,
	.param .u64 fast_argmax_u8_param_2,
	.param .u64 fast_argmax_u8_param_3,
	.param .u64 fast_argmax_u8_param_4,
	.param .u64 fast_argmax_u8_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<16>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<69>;
	// demoted variable
	.shared .align 1 .b8 _ZZ11fast_argmaxIhEvmmmPKmPKT_PjE3shr[1024];
	// demoted variable
	.shared .align 4 .b8 _ZZ11fast_argmaxIhEvmmmPKmPKT_PjE9shr_index[4096];

	ld.param.u64 	%rd33, [fast_argmax_u8_param_0];
	ld.param.u64 	%rd34, [fast_argmax_u8_param_1];
	ld.param.u64 	%rd31, [fast_argmax_u8_param_2];
	ld.param.u64 	%rd35, [fast_argmax_u8_param_3];
	ld.param.u64 	%rd36, [fast_argmax_u8_param_4];
	ld.param.u64 	%rd32, [fast_argmax_u8_param_5];
	cvta.to.global.u64 	%rd1, %rd35;
	cvta.to.global.u64 	%rd2, %rd36;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd37, %r1;
	mov.u32 	%r11, %ctaid.x;
	cvt.u64.u32 	%rd3, %r11;
	mov.f32 	%f1, 0fFF800000;
	cvt.rzi.u32.f32 	%r12, %f1;
	cvt.u16.u32 	%rs13, %r12;
	mov.u32 	%r13, _ZZ11fast_argmaxIhEvmmmPKmPKT_PjE3shr;
	add.s32 	%r2, %r13, %r1;
	st.shared.u8 	[%r2], %rs13;
	shl.b32 	%r14, %r1, 2;
	mov.u32 	%r15, _ZZ11fast_argmaxIhEvmmmPKmPKT_PjE9shr_index;
	add.s32 	%r3, %r15, %r14;
	mov.u32 	%r16, -1;
	st.shared.u32 	[%r3], %r16;
	mul.lo.s64 	%rd38, %rd3, %rd34;
	add.s64 	%rd39, %rd38, %rd34;
	min.u64 	%rd4, %rd39, %rd33;
	add.s64 	%rd62, %rd38, %rd37;
	setp.lt.u64 	%p1, %rd62, %rd4;
	@%p1 bra 	$L__BB48_1;
	bra.uni 	$L__BB48_19;

$L__BB48_1:
	setp.eq.s64 	%p2, %rd31, 0;
	shl.b64 	%rd40, %rd31, 3;
	add.s64 	%rd41, %rd1, %rd40;
	add.s64 	%rd6, %rd41, -8;
	mov.u32 	%r17, %ntid.x;
	cvt.u64.u32 	%rd7, %r17;
	@%p2 bra 	$L__BB48_14;

	mov.u16 	%rs14, 1;

$L__BB48_3:
	mov.u32 	%r39, 0;
	mov.u64 	%rd63, %rd62;
	mov.u32 	%r40, %r39;

$L__BB48_4:
	not.b32 	%r20, %r39;
	cvt.u64.u32 	%rd42, %r20;
	add.s64 	%rd43, %rd42, %rd31;
	and.b64  	%rd10, %rd63, 4294967295;
	shl.b64 	%rd44, %rd43, 3;
	and.b64  	%rd45, %rd44, 34359738360;
	add.s64 	%rd11, %rd1, %rd45;
	ld.global.u64 	%rd12, [%rd11];
	and.b64  	%rd46, %rd12, -4294967296;
	setp.eq.s64 	%p3, %rd46, 0;
	@%p3 bra 	$L__BB48_6;

	div.u64 	%rd63, %rd10, %rd12;
	mul.lo.s64 	%rd47, %rd63, %rd12;
	sub.s64 	%rd65, %rd10, %rd47;
	bra.uni 	$L__BB48_7;

$L__BB48_6:
	cvt.u32.u64 	%r21, %rd12;
	cvt.u32.u64 	%r22, %rd10;
	div.u32 	%r23, %r22, %r21;
	mul.lo.s32 	%r24, %r23, %r21;
	sub.s32 	%r25, %r22, %r24;
	cvt.u64.u32 	%rd63, %r23;
	cvt.u64.u32 	%rd65, %r25;

$L__BB48_7:
	add.s64 	%rd49, %rd11, %rd40;
	ld.global.u64 	%rd50, [%rd49];
	mul.lo.s64 	%rd51, %rd50, %rd65;
	cvt.u32.u64 	%r26, %rd51;
	add.s32 	%r40, %r40, %r26;
	add.s32 	%r39, %r39, 1;
	cvt.u64.u32 	%rd52, %r39;
	setp.lt.u64 	%p4, %rd52, %rd31;
	@%p4 bra 	$L__BB48_4;

	cvt.u64.u32 	%rd53, %r40;
	add.s64 	%rd54, %rd2, %rd53;
	ld.global.u8 	%rs4, [%rd54];
	and.b16  	%rs8, %rs13, 255;
	setp.le.u16 	%p5, %rs4, %rs8;
	and.b16  	%rs9, %rs14, 255;
	setp.eq.s16 	%p6, %rs9, 0;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB48_13;

	st.shared.u8 	[%r2], %rs4;
	ld.global.u64 	%rd19, [%rd6];
	or.b64  	%rd55, %rd62, %rd19;
	and.b64  	%rd56, %rd55, -4294967296;
	setp.eq.s64 	%p8, %rd56, 0;
	@%p8 bra 	$L__BB48_11;

	rem.u64 	%rd66, %rd62, %rd19;
	bra.uni 	$L__BB48_12;

$L__BB48_11:
	cvt.u32.u64 	%r27, %rd19;
	cvt.u32.u64 	%r28, %rd62;
	rem.u32 	%r29, %r28, %r27;
	cvt.u64.u32 	%rd66, %r29;

$L__BB48_12:
	st.shared.u32 	[%r3], %rd66;
	mov.u16 	%rs13, %rs4;

$L__BB48_13:
	add.s64 	%rd62, %rd62, %rd7;
	setp.lt.u64 	%p9, %rd62, %rd4;
	mov.u16 	%rs14, 0;
	@%p9 bra 	$L__BB48_3;
	bra.uni 	$L__BB48_19;

$L__BB48_14:
	ld.global.u8 	%rs11, [%rd2];
	st.shared.u8 	[%r2], %rs11;
	ld.global.u64 	%rd24, [%rd6];
	or.b64  	%rd57, %rd62, %rd24;
	and.b64  	%rd58, %rd57, -4294967296;
	setp.eq.s64 	%p10, %rd58, 0;
	@%p10 bra 	$L__BB48_16;

	rem.u64 	%rd67, %rd62, %rd24;
	bra.uni 	$L__BB48_17;

$L__BB48_16:
	cvt.u32.u64 	%r30, %rd24;
	cvt.u32.u64 	%r31, %rd62;
	rem.u32 	%r32, %r31, %r30;
	cvt.u64.u32 	%rd67, %r32;

$L__BB48_17:
	st.shared.u32 	[%r3], %rd67;
	add.s64 	%rd68, %rd62, %rd7;
	setp.ge.u64 	%p11, %rd68, %rd4;
	@%p11 bra 	$L__BB48_19;

$L__BB48_18:
	.pragma "nounroll";
	add.s64 	%rd68, %rd68, %rd7;
	setp.lt.u64 	%p12, %rd68, %rd4;
	@%p12 bra 	$L__BB48_18;

$L__BB48_19:
	mov.u32 	%r33, %ntid.x;
	shr.u32 	%r41, %r33, 1;
	setp.eq.s32 	%p13, %r41, 0;
	@%p13 bra 	$L__BB48_24;

$L__BB48_20:
	bar.sync 	0;
	setp.ge.u32 	%p14, %r1, %r41;
	@%p14 bra 	$L__BB48_23;

	add.s32 	%r34, %r2, %r41;
	ld.shared.u8 	%rs12, [%r2];
	ld.shared.u8 	%rs6, [%r34];
	setp.le.u16 	%p15, %rs6, %rs12;
	@%p15 bra 	$L__BB48_23;

	st.shared.u8 	[%r2], %rs6;
	shl.b32 	%r35, %r41, 2;
	add.s32 	%r36, %r3, %r35;
	ld.shared.u32 	%r37, [%r36];
	st.shared.u32 	[%r3], %r37;

$L__BB48_23:
	shr.u32 	%r41, %r41, 1;
	setp.ne.s32 	%p16, %r41, 0;
	@%p16 bra 	$L__BB48_20;

$L__BB48_24:
	setp.ne.s32 	%p17, %r1, 0;
	@%p17 bra 	$L__BB48_26;

	ld.shared.u32 	%r38, [_ZZ11fast_argmaxIhEvmmmPKmPKT_PjE9shr_index];
	cvta.to.global.u64 	%rd59, %rd32;
	shl.b64 	%rd60, %rd3, 2;
	add.s64 	%rd61, %rd59, %rd60;
	st.global.u32 	[%rd61], %r38;

$L__BB48_26:
	ret;

}
	// .globl	fast_min_u8
.visible .entry fast_min_u8(
	.param .u64 fast_min_u8_param_0,
	.param .u64 fast_min_u8_param_1,
	.param .u64 fast_min_u8_param_2,
	.param .u64 fast_min_u8_param_3,
	.param .u64 fast_min_u8_param_4,
	.param .u64 fast_min_u8_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 1 .b8 _ZZ8fast_minIhEvmmmPKmPKT_PS2_E3shr[1024];

	ld.param.u64 	%rd23, [fast_min_u8_param_0];
	ld.param.u64 	%rd24, [fast_min_u8_param_1];
	ld.param.u64 	%rd20, [fast_min_u8_param_2];
	ld.param.u64 	%rd21, [fast_min_u8_param_3];
	ld.param.u64 	%rd25, [fast_min_u8_param_4];
	ld.param.u64 	%rd22, [fast_min_u8_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r17, %ctaid.x;
	cvt.u64.u32 	%rd27, %r17;
	mov.f32 	%f1, 0f7F800000;
	cvt.rzi.u32.f32 	%r42, %f1;
	mov.u32 	%r18, _ZZ8fast_minIhEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r3, %r18, %r1;
	st.shared.u8 	[%r3], %r42;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB49_1;
	bra.uni 	$L__BB49_12;

$L__BB49_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r19, %ntid.x;
	cvt.u64.u32 	%rd4, %r19;
	@%p2 bra 	$L__BB49_9;

	cvta.to.global.u64 	%rd5, %rd21;

$L__BB49_3:
	mov.u32 	%r39, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r40, %r39;

$L__BB49_4:
	not.b32 	%r22, %r39;
	cvt.u64.u32 	%rd30, %r22;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB49_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB49_7;

$L__BB49_6:
	cvt.u32.u64 	%r23, %rd10;
	cvt.u32.u64 	%r24, %rd8;
	div.u32 	%r25, %r24, %r23;
	mul.lo.s32 	%r26, %r25, %r23;
	sub.s32 	%r27, %r24, %r26;
	cvt.u64.u32 	%rd47, %r25;
	cvt.u64.u32 	%rd49, %r27;

$L__BB49_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r28, %rd39;
	add.s32 	%r40, %r40, %r28;
	add.s32 	%r39, %r39, 1;
	cvt.u64.u32 	%rd40, %r39;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB49_4;

	cvt.u64.u32 	%rd41, %r40;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u8 	%r29, [%rd42];
	and.b32  	%r30, %r42, 255;
	min.u32 	%r42, %r30, %r29;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB49_3;
	bra.uni 	$L__BB49_11;

$L__BB49_9:
	ld.global.u8 	%r10, [%rd1];

$L__BB49_10:
	and.b32  	%r31, %r42, 255;
	min.u32 	%r42, %r31, %r10;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB49_10;

$L__BB49_11:
	st.shared.u8 	[%r3], %r42;

$L__BB49_12:
	mov.u32 	%r32, %ntid.x;
	shr.u32 	%r43, %r32, 1;
	setp.eq.s32 	%p7, %r43, 0;
	@%p7 bra 	$L__BB49_16;

$L__BB49_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r43;
	@%p8 bra 	$L__BB49_15;

	ld.shared.u8 	%r33, [%r3];
	add.s32 	%r34, %r3, %r43;
	ld.shared.u8 	%r35, [%r34];
	min.u32 	%r36, %r33, %r35;
	st.shared.u8 	[%r3], %r36;

$L__BB49_15:
	shr.u32 	%r43, %r43, 1;
	setp.ne.s32 	%p9, %r43, 0;
	@%p9 bra 	$L__BB49_13;

$L__BB49_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB49_18;

	ld.shared.u8 	%rs1, [_ZZ8fast_minIhEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd44, %rd22;
	add.s64 	%rd45, %rd44, %rd27;
	st.global.u8 	[%rd45], %rs1;

$L__BB49_18:
	ret;

}
	// .globl	fast_max_u8
.visible .entry fast_max_u8(
	.param .u64 fast_max_u8_param_0,
	.param .u64 fast_max_u8_param_1,
	.param .u64 fast_max_u8_param_2,
	.param .u64 fast_max_u8_param_3,
	.param .u64 fast_max_u8_param_4,
	.param .u64 fast_max_u8_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 1 .b8 _ZZ8fast_maxIhEvmmmPKmPKT_PS2_E3shr[1024];

	ld.param.u64 	%rd23, [fast_max_u8_param_0];
	ld.param.u64 	%rd24, [fast_max_u8_param_1];
	ld.param.u64 	%rd20, [fast_max_u8_param_2];
	ld.param.u64 	%rd21, [fast_max_u8_param_3];
	ld.param.u64 	%rd25, [fast_max_u8_param_4];
	ld.param.u64 	%rd22, [fast_max_u8_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r17, %ctaid.x;
	cvt.u64.u32 	%rd27, %r17;
	mov.f32 	%f1, 0fFF800000;
	cvt.rzi.u32.f32 	%r42, %f1;
	mov.u32 	%r18, _ZZ8fast_maxIhEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r3, %r18, %r1;
	st.shared.u8 	[%r3], %r42;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB50_1;
	bra.uni 	$L__BB50_12;

$L__BB50_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r19, %ntid.x;
	cvt.u64.u32 	%rd4, %r19;
	@%p2 bra 	$L__BB50_9;

	cvta.to.global.u64 	%rd5, %rd21;

$L__BB50_3:
	mov.u32 	%r39, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r40, %r39;

$L__BB50_4:
	not.b32 	%r22, %r39;
	cvt.u64.u32 	%rd30, %r22;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB50_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB50_7;

$L__BB50_6:
	cvt.u32.u64 	%r23, %rd10;
	cvt.u32.u64 	%r24, %rd8;
	div.u32 	%r25, %r24, %r23;
	mul.lo.s32 	%r26, %r25, %r23;
	sub.s32 	%r27, %r24, %r26;
	cvt.u64.u32 	%rd47, %r25;
	cvt.u64.u32 	%rd49, %r27;

$L__BB50_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r28, %rd39;
	add.s32 	%r40, %r40, %r28;
	add.s32 	%r39, %r39, 1;
	cvt.u64.u32 	%rd40, %r39;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB50_4;

	cvt.u64.u32 	%rd41, %r40;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u8 	%r29, [%rd42];
	and.b32  	%r30, %r42, 255;
	max.u32 	%r42, %r30, %r29;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB50_3;
	bra.uni 	$L__BB50_11;

$L__BB50_9:
	ld.global.u8 	%r10, [%rd1];

$L__BB50_10:
	and.b32  	%r31, %r42, 255;
	max.u32 	%r42, %r31, %r10;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB50_10;

$L__BB50_11:
	st.shared.u8 	[%r3], %r42;

$L__BB50_12:
	mov.u32 	%r32, %ntid.x;
	shr.u32 	%r43, %r32, 1;
	setp.eq.s32 	%p7, %r43, 0;
	@%p7 bra 	$L__BB50_16;

$L__BB50_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r43;
	@%p8 bra 	$L__BB50_15;

	ld.shared.u8 	%r33, [%r3];
	add.s32 	%r34, %r3, %r43;
	ld.shared.u8 	%r35, [%r34];
	max.u32 	%r36, %r33, %r35;
	st.shared.u8 	[%r3], %r36;

$L__BB50_15:
	shr.u32 	%r43, %r43, 1;
	setp.ne.s32 	%p9, %r43, 0;
	@%p9 bra 	$L__BB50_13;

$L__BB50_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB50_18;

	ld.shared.u8 	%rs1, [_ZZ8fast_maxIhEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd44, %rd22;
	add.s64 	%rd45, %rd44, %rd27;
	st.global.u8 	[%rd45], %rs1;

$L__BB50_18:
	ret;

}
	// .globl	fast_sum_u8
.visible .entry fast_sum_u8(
	.param .u64 fast_sum_u8_param_0,
	.param .u64 fast_sum_u8_param_1,
	.param .u64 fast_sum_u8_param_2,
	.param .u64 fast_sum_u8_param_3,
	.param .u64 fast_sum_u8_param_4,
	.param .u64 fast_sum_u8_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<18>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<51>;
	// demoted variable
	.shared .align 1 .b8 _ZZ8fast_sumIhEvmmmPKmPKT_PS2_E3shr[1024];

	ld.param.u64 	%rd23, [fast_sum_u8_param_0];
	ld.param.u64 	%rd24, [fast_sum_u8_param_1];
	ld.param.u64 	%rd20, [fast_sum_u8_param_2];
	ld.param.u64 	%rd21, [fast_sum_u8_param_3];
	ld.param.u64 	%rd25, [fast_sum_u8_param_4];
	ld.param.u64 	%rd22, [fast_sum_u8_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	mov.u32 	%r1, %tid.x;
	cvt.u64.u32 	%rd26, %r1;
	mov.u32 	%r10, %ctaid.x;
	cvt.u64.u32 	%rd27, %r10;
	mov.u32 	%r11, _ZZ8fast_sumIhEvmmmPKmPKT_PS2_E3shr;
	add.s32 	%r2, %r11, %r1;
	mov.u16 	%rs7, 0;
	st.shared.u8 	[%r2], %rs7;
	mul.lo.s64 	%rd28, %rd27, %rd24;
	add.s64 	%rd29, %rd28, %rd24;
	min.u64 	%rd2, %rd29, %rd23;
	add.s64 	%rd46, %rd28, %rd26;
	setp.lt.u64 	%p1, %rd46, %rd2;
	@%p1 bra 	$L__BB51_1;
	bra.uni 	$L__BB51_12;

$L__BB51_1:
	setp.eq.s64 	%p2, %rd20, 0;
	mov.u32 	%r12, %ntid.x;
	cvt.u64.u32 	%rd4, %r12;
	@%p2 bra 	$L__BB51_9;

	cvta.to.global.u64 	%rd5, %rd21;
	mov.u16 	%rs17, 0;

$L__BB51_3:
	mov.u32 	%r25, 0;
	mov.u64 	%rd47, %rd46;
	mov.u32 	%r26, %r25;

$L__BB51_4:
	not.b32 	%r15, %r25;
	cvt.u64.u32 	%rd30, %r15;
	add.s64 	%rd31, %rd30, %rd20;
	and.b64  	%rd8, %rd47, 4294967295;
	shl.b64 	%rd32, %rd31, 3;
	and.b64  	%rd33, %rd32, 34359738360;
	add.s64 	%rd9, %rd5, %rd33;
	ld.global.u64 	%rd10, [%rd9];
	and.b64  	%rd34, %rd10, -4294967296;
	setp.eq.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB51_6;

	div.u64 	%rd47, %rd8, %rd10;
	mul.lo.s64 	%rd35, %rd47, %rd10;
	sub.s64 	%rd49, %rd8, %rd35;
	bra.uni 	$L__BB51_7;

$L__BB51_6:
	cvt.u32.u64 	%r16, %rd10;
	cvt.u32.u64 	%r17, %rd8;
	div.u32 	%r18, %r17, %r16;
	mul.lo.s32 	%r19, %r18, %r16;
	sub.s32 	%r20, %r17, %r19;
	cvt.u64.u32 	%rd47, %r18;
	cvt.u64.u32 	%rd49, %r20;

$L__BB51_7:
	shl.b64 	%rd36, %rd20, 3;
	add.s64 	%rd37, %rd9, %rd36;
	ld.global.u64 	%rd38, [%rd37];
	mul.lo.s64 	%rd39, %rd38, %rd49;
	cvt.u32.u64 	%r21, %rd39;
	add.s32 	%r26, %r26, %r21;
	add.s32 	%r25, %r25, 1;
	cvt.u64.u32 	%rd40, %r25;
	setp.lt.u64 	%p4, %rd40, %rd20;
	@%p4 bra 	$L__BB51_4;

	cvt.u64.u32 	%rd41, %r26;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.u8 	%rs9, [%rd42];
	add.s16 	%rs17, %rs17, %rs9;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p5, %rd46, %rd2;
	@%p5 bra 	$L__BB51_3;
	bra.uni 	$L__BB51_11;

$L__BB51_9:
	ld.global.u8 	%rs3, [%rd1];
	mov.u16 	%rs17, 0;

$L__BB51_10:
	add.s16 	%rs17, %rs17, %rs3;
	add.s64 	%rd46, %rd46, %rd4;
	setp.lt.u64 	%p6, %rd46, %rd2;
	@%p6 bra 	$L__BB51_10;

$L__BB51_11:
	st.shared.u8 	[%r2], %rs17;

$L__BB51_12:
	mov.u32 	%r22, %ntid.x;
	shr.u32 	%r27, %r22, 1;
	setp.eq.s32 	%p7, %r27, 0;
	@%p7 bra 	$L__BB51_16;

$L__BB51_13:
	bar.sync 	0;
	setp.ge.u32 	%p8, %r1, %r27;
	@%p8 bra 	$L__BB51_15;

	add.s32 	%r23, %r2, %r27;
	ld.shared.u8 	%rs11, [%r2];
	ld.shared.u8 	%rs12, [%r23];
	add.s16 	%rs13, %rs11, %rs12;
	st.shared.u8 	[%r2], %rs13;

$L__BB51_15:
	shr.u32 	%r27, %r27, 1;
	setp.ne.s32 	%p9, %r27, 0;
	@%p9 bra 	$L__BB51_13;

$L__BB51_16:
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB51_18;

	ld.shared.u8 	%rs14, [_ZZ8fast_sumIhEvmmmPKmPKT_PS2_E3shr];
	cvta.to.global.u64 	%rd44, %rd22;
	add.s64 	%rd45, %rd44, %rd27;
	st.global.u8 	[%rd45], %rs14;

$L__BB51_18:
	ret;

}

